import { Camera } from './camera';
import { Context } from './context';
import { Initializable } from './initializable';
import { NdcFillingTriangle } from './ndcfillingtriangle';
import { Program } from './program';
import { Texture2D } from './texture2d';
import { TextureCube } from './texturecube';
/**
 * This pass renders an environment from a texture in a single screen-space pass.
 */
export declare class EnvironmentRenderingPass extends Initializable {
    /**
     * Context, used to get context information and WebGL API access.
     */
    protected _context: Context;
    protected _environmentTexture: Texture2D | TextureCube | undefined;
    protected _environmentTexture2: Texture2D | undefined;
    protected _envTextureType: EnvironmentTextureType;
    protected _camera: Camera | undefined;
    protected _cubeMapProgram: Program;
    protected _equiMapProgram: Program;
    protected _sphereMapProgram: Program;
    protected _polarMapProgram: Program;
    protected _uSkipLod: WebGLUniformLocation;
    protected _ndcTriangle: NdcFillingTriangle;
    protected _skipCubeLod: boolean;
    protected _altered: boolean;
    constructor(context: Context);
    initialize(): boolean;
    uninitialize(): void;
    update(): void;
    frame(): void;
    set environmentTextureType(type: EnvironmentTextureType);
    set environmentTexture(texture: Texture2D | TextureCube);
    set environmentTexture2(texture: Texture2D);
    set camera(camera: Camera);
    set skipCubeLod(skip: boolean);
}
export declare enum EnvironmentTextureType {
    CubeMap = 0,
    EquirectangularMap = 1,
    SphereMap = 2,
    PolarMap = 3
}
