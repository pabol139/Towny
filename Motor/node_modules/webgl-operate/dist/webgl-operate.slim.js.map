{"version":3,"sources":["webpack://gloperate/webpack/universalModuleDefinition","webpack://gloperate/../node_modules/gl-matrix/esm/common.js","webpack://gloperate/../node_modules/gl-matrix/esm/mat2.js","webpack://gloperate/../node_modules/gl-matrix/esm/mat2d.js","webpack://gloperate/../node_modules/gl-matrix/esm/mat3.js","webpack://gloperate/../node_modules/gl-matrix/esm/mat4.js","webpack://gloperate/../node_modules/gl-matrix/esm/vec3.js","webpack://gloperate/../node_modules/gl-matrix/esm/vec4.js","webpack://gloperate/../node_modules/gl-matrix/esm/quat.js","webpack://gloperate/../node_modules/gl-matrix/esm/quat2.js","webpack://gloperate/../node_modules/gl-matrix/esm/vec2.js","webpack://gloperate/../node_modules/jsonschema/lib/attribute.js","webpack://gloperate/../node_modules/jsonschema/lib/helpers.js","webpack://gloperate/../node_modules/jsonschema/lib/index.js","webpack://gloperate/../node_modules/jsonschema/lib/scan.js","webpack://gloperate/../node_modules/jsonschema/lib/validator.js","webpack://gloperate/../node_modules/punycode/punycode.es6.js","webpack://gloperate/../node_modules/querystring/decode.js","webpack://gloperate/../node_modules/querystring/encode.js","webpack://gloperate/../node_modules/querystring/index.js","webpack://gloperate/./accumulatepass.ts","webpack://gloperate/./allocationregister.ts","webpack://gloperate/./antialiasingkernel.ts","webpack://gloperate/./auxiliaries.ts","webpack://gloperate/./blitpass.ts","webpack://gloperate/./buffer.ts","webpack://gloperate/./camera.ts","webpack://gloperate/./cameramodifier.ts","webpack://gloperate/./canvas.ts","webpack://gloperate/./canvasrecorder.ts","webpack://gloperate/./changelookup.ts","webpack://gloperate/./color.ts","webpack://gloperate/./colorscale.ts","webpack://gloperate/./context.ts","webpack://gloperate/./contextmasquerade.ts","webpack://gloperate/./controller.ts","webpack://gloperate/./core/cuboidgeometry.ts","webpack://gloperate/./core/geospheregeometry.ts","webpack://gloperate/./core/icosahedron.ts","webpack://gloperate/./core/index.ts","webpack://gloperate/./core/planegeometry.ts","webpack://gloperate/./core/resourcemanager.ts","webpack://gloperate/./debugpass.ts","webpack://gloperate/./defaultframebuffer.ts","webpack://gloperate/./environmentrenderingpass.ts","webpack://gloperate/./eventhandler.ts","webpack://gloperate/./extensions.ts","webpack://gloperate/./extensionshash.ts","webpack://gloperate/./eyegazedatastream.ts","webpack://gloperate/./eyegazeevent.ts","webpack://gloperate/./eyegazeeventprovider.ts","webpack://gloperate/./fetch.ts","webpack://gloperate/./firstpersonmodifier.ts","webpack://gloperate/./formatbytesizes.ts","webpack://gloperate/./framebuffer.ts","webpack://gloperate/./framecapture.ts","webpack://gloperate/./gaussfilter.ts","webpack://gloperate/./geometry.ts","webpack://gloperate/./gl-matrix-extensions.ts","webpack://gloperate/./gl2facade.ts","webpack://gloperate/./initializable.ts","webpack://gloperate/./kernel.ts","webpack://gloperate/./keyboardeventprovider.ts","webpack://gloperate/./mouseeventprovider.ts","webpack://gloperate/./msagent.ts","webpack://gloperate/./navigation.ts","webpack://gloperate/./ndcfillingrectangle.ts","webpack://gloperate/./ndcfillingtriangle.ts","webpack://gloperate/./object.ts","webpack://gloperate/./panmodifier.ts","webpack://gloperate/./pinchzoommodifier.ts","webpack://gloperate/./pointereventprovider.ts","webpack://gloperate/./pointerlock.ts","webpack://gloperate/./polyfill.ts","webpack://gloperate/./program.ts","webpack://gloperate/./properties.ts","webpack://gloperate/./randomsquarekernel.ts","webpack://gloperate/./readbackpass.ts","webpack://gloperate/./renderbuffer.ts","webpack://gloperate/./renderer.ts","webpack://gloperate/./resizable.ts","webpack://gloperate/./scene/forwardscenerenderpass.ts","webpack://gloperate/./scene/geometrycomponent.ts","webpack://gloperate/./scene/index.ts","webpack://gloperate/./scene/material.ts","webpack://gloperate/./scene/scenenode.ts","webpack://gloperate/./scene/scenenodecomponent.ts","webpack://gloperate/./scene/scenerenderpass.ts","webpack://gloperate/./scene/transformcomponent.ts","webpack://gloperate/./shader.ts","webpack://gloperate/./shadowpass.ts","webpack://gloperate/./text/fontface.ts","webpack://gloperate/./text/fontfaceloader.ts","webpack://gloperate/./text/glyph.ts","webpack://gloperate/./text/glyphvertices.ts","webpack://gloperate/./text/index.ts","webpack://gloperate/./text/label.ts","webpack://gloperate/./text/labelgeometry.ts","webpack://gloperate/./text/labelrenderpass.ts","webpack://gloperate/./text/position2dlabel.ts","webpack://gloperate/./text/position3dlabel.ts","webpack://gloperate/./text/projected3dlabel.ts","webpack://gloperate/./text/text.ts","webpack://gloperate/./text/typesetter.ts","webpack://gloperate/./texture2d.ts","webpack://gloperate/./texture2darray.ts","webpack://gloperate/./texture3d.ts","webpack://gloperate/./texturecube.ts","webpack://gloperate/./tilecameragenerator.ts","webpack://gloperate/./toucheventprovider.ts","webpack://gloperate/./trackballmodifier.ts","webpack://gloperate/./tuples.ts","webpack://gloperate/./turntablemodifier.ts","webpack://gloperate/./unifiedbuffer.ts","webpack://gloperate/./version.ts","webpack://gloperate/./vertexarray.ts","webpack://gloperate/./webgl-operate.slim.ts","webpack://gloperate/./wheelzoommodifier.ts","webpack://gloperate/./wizard.ts","webpack://gloperate/../node_modules/url/url.js","webpack://gloperate/../node_modules/url/util.js","webpack://gloperate/./shaders/accumulate.frag","webpack://gloperate/./shaders/blit.frag","webpack://gloperate/./shaders/blit.vert","webpack://gloperate/./shaders/blit_debug.frag","webpack://gloperate/./shaders/env-projections.frag","webpack://gloperate/./shaders/env-projections.vert","webpack://gloperate/./shaders/gaussfilter.frag","webpack://gloperate/./shaders/gaussfilter.vert","webpack://gloperate/./shaders/ndcvertices.vert","webpack://gloperate/./shaders/readbackdepth.frag","webpack://gloperate/./text/glyph.frag","webpack://gloperate/./text/glyph.vert","webpack://gloperate/external {\"root\":[\"rxjs\"],\"commonjs\":\"rxjs\",\"commonjs2\":\"rxjs\",\"amd\":\"rxjs\"}","webpack://gloperate/webpack/bootstrap","webpack://gloperate/webpack/runtime/define property getters","webpack://gloperate/webpack/runtime/hasOwnProperty shorthand","webpack://gloperate/webpack/runtime/make namespace object","webpack://gloperate/webpack/startup"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__7318__","EPSILON","ARRAY_TYPE","Float32Array","Array","RANDOM","Math","random","setMatrixArrayType","type","degree","PI","toRadian","a","equals","b","abs","max","create","out","clone","copy","identity","fromValues","m00","m01","m10","m11","set","transpose","a1","invert","a0","a2","a3","det","adjoint","determinant","multiply","b0","b1","b2","b3","rotate","rad","s","sin","c","cos","scale","v","v0","v1","fromRotation","fromScaling","str","frob","hypot","LDU","L","D","U","add","subtract","exactEquals","multiplyScalar","multiplyScalarAndAdd","y","i","arguments","length","sqrt","mul","sub","d","tx","ty","aa","ab","ac","ad","atx","aty","a4","a5","b4","b5","translate","fromTranslation","fromMat4","m02","m12","m20","m21","m22","a01","a02","a12","a00","a10","a11","a20","a21","a22","b01","b11","b21","b00","b02","b10","b12","b20","b22","x","fromMat2d","fromQuat","q","z","w","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","projection","width","height","a6","a7","a8","b6","b7","b8","m03","m13","m23","m30","m31","m32","m33","axis","t","len","rotateX","rotateY","rotateZ","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","xy","xz","yz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","o","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","f","tan","Infinity","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","target","a9","a14","a15","b9","b13","b14","b15","divide","ceil","floor","min","round","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","normalize","cross","lerp","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","r","zScale","transformMat4","m","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","p","angle","mag","cosine","acos","zero","vec","div","dist","sqrDist","sqrLen","forEach","stride","offset","count","fn","arg","l","dot","u","A","B","C","E","F","G","H","I","J","v2","v3","v4","s1","s2","ix","iy","iz","iw","setAxisAngle","getAxisAngle","out_axis","getAngle","dotproduct","calculateW","exp","et","ln","atan2","log","pow","slerp","omega","cosom","sinom","scale0","scale1","u1","u2","u3","sqrt1MinusU1","sqrtU1","invDot","conjugate","fromMat3","fRoot","fTrace","j","k","fromEuler","halfToRad","cx","cy","cz","tmpvec3","xUnitVec3","yUnitVec3","temp1","temp2","matr","rotationTo","sqlerp","setAxes","view","dq","w1","fromRotationTranslationValues","outer","getReal","getDual","setReal","setDual","ax1","ay1","az1","aw1","bx1","by1","bz1","ax2","ay2","az2","aw2","rotateByQuatAppend","rotateByQuatPrepend","rotateAroundAxis","axisLength","ax0","ay0","az0","aw0","bw1","bx0","by0","bz0","bw0","mt","sqlen","a_dot_b","transformMat2","transformMat2d","p0","p1","sinC","cosC","helpers","ValidatorResult","SchemaError","attribute","validators","testSchemaNoThrow","instance","options","ctx","callback","schema","throwError","throwAll","res","this","validateSchema","valid","Function","getEnumerableProperty","object","key","Object","hasOwnProperty","call","getPrototypeOf","propertyIsEnumerable","testAdditionalProperty","property","result","types","properties","undefined","additionalProperties","addError","name","argument","message","JSON","stringify","preValidateProperty","makeChild","importErrors","isArray","some","testType","bind","list","map","id","$id","anyOf","inner","title","nestedErrors","join","allOf","msg","errors","oneOf","filter","if","isSchema","Error","ifValid","then","else","propertyNames","subschema","prop","patternProperties","test","pattern","regexp","RegExp","_e","minProperties","keys","maxProperties","items","array","every","value","additionalItems","minimum","number","exclusiveMinimum","maximum","exclusiveMaximum","validateMultipleOfOrDivisbleBy","validationType","errorMessage","validationArgument","instanceDecimals","getDecimalPlaces","divisorDecimals","maxDecimals","multiplier","testArrays","deepCompareStrict","multipleOf","divisibleBy","required","n","string","match","toString","format","disableFormat","isFormat","minLength","hsp","maxLength","minItems","maxItems","uniqueItems","dependencies","dep","childContext","propertyPath","String","not","disallow","notTypes","schemaId","uri","ValidationError","path","reduce","sum","item","makeSuffix","stack","prototype","throwFirst","stringizer","ValidatorResultError","captureStackTrace","detail","err","push","validatorType","apply","defineProperty","get","constructor","enumerable","SchemaContext","base","schemas","resolve","propertyName","concat","FORMAT_REGEXPS","input","parseFloat","parseInt","isNaN","e","regex","ipv4","validator","customFormats","deepMerger","dst","deepMerge","indexOf","copyist","src","copyistWithDeepMerge","pathEncoder","encodeURIComponent","replace","aKeys","bKeys","objectGetPath","parts","split","slice","shift","decodeURIComponent","encodePath","decimalPlaces","Number","decimalParts","val","Validator","SchemaScanResult","scan","validate","urilib","found","ref","scanSchema","baseuri","$ref","resolvedUri","ourBase","substring","scanArray","extends","scanObject","definitions","unresolvedRefs","attributes","shouldResolve","addSchema","ourUri","addSubSchemaArray","addSubSchema","addSubSchemaObject","setSchemas","getSchema","urn","sch","schemaobj","schemaTraverser","superResolve","switchSchema","resolved","subctx","skipAttributes","ignoreProperties","validatorErr","allowUnknownAttributes","rewrite","parsed","parse","fragment","hash","document","substr","isFinite","integer","boolean","date","Date","any","maxInt","regexPunycode","regexNonASCII","regexSeparators","stringFromCharCode","fromCharCode","error","RangeError","mapDomain","encoded","ucs2decode","output","counter","charCodeAt","extra","ucs2encode","fromCodePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","decode","inputLength","bias","basic","lastIndexOf","index","oldi","codePoint","baseMinusT","splice","encode","currentValue","basicLength","handledCPCount","handledCPCountPlusOne","qMinusT","toUnicode","toLowerCase","toASCII","obj","qs","sep","eq","maxKeys","kstr","vstr","idx","stringifyPrimitive","ks","AccumulatePass","Initializable","context","super","_altered","assign","ChangeLookup","texture","precision","passThrough","_precision","Wizard","Precision","half","_write","_ndcTriangleShared","_context","ndcTriangle","gl","_accumulationFBOs","Framebuffer","_accumulationTextures","Texture2D","_ndcTriangle","NdcFillingTriangle","vert","Shader","VERTEX_SHADER","initialize","frag","FRAGMENT_SHADER","_program","Program","initialized","vertexLocation","link","_uWeight","uniform","uniform1f","uniform1i","unbind","uninitialize","_texture","LogLevel","Warning","_passThrough","sizeAltered","assert","gl2facade","textureSize","size","resize","internalFormat","queryInternalTextureFormat","RGBA","reformat","COLOR_ATTACHMENT0","reset","frameNumber","viewport","logIf","readIndex","writeIndex","accumTexture","frameTexture","TEXTURE0","TEXTURE1","DRAW_FRAMEBUFFER","draw","assertInitialized","alter","assert_initialized","_bytesByIdentifier","Map","_bytes","_bytesSubject","ReplaySubject","next","bytesToString","identifier","has","uniqueIdentifier","unificationSuffix","delete","allocate","assertIdentifier","bytes","bytesNext","deallocate","reallocate","previousBytes","prettyPrintBytes","allocated","asObservable","AntiAliasingKernel","RandomSquareKernel","_width","fromJSON","generate","auxiliaries","logVerbosityThreshold","logVerbosity","verbosity","assertImpl","statement","EvalError","assertEmpty","console","logPerformanceStart","mark","start","performance","getEntriesByName","logPerformanceStop","measureIndent","end","measure","clearMarks","clearMeasures","minIndent","indent","prettyMeasure","prettyPrintMilliseconds","duration","Debug","repeat","assertions","enable","logPerformanceStartIf","logPerformanceStopIf","rand","isPowerOfTwo","isInteger","log2","upperPowerOfTwo","byteSuffixes","prefix","toFixed","msSuffixes","msScales","milliseconds","clamp","bitInBitfield","flags","RAD2DEG","DEG2RAD","GETsearch","search","window","location","GETparameter","parameter","re","PATH_SEPARATOR","dirname","includes","trimLeft","basename","trimRight","BlitPass","_enforceProgramBlit","_target","_framebuffer","READ_FRAMEBUFFER","readBuffer","_readBuffer","_drawBuffer","COLOR_ATTACHMENT1","COLOR_ATTACHMENT15","drawBuffers","fill","NONE","SCISSOR_TEST","scissor","clear","COLOR_BUFFER_BIT","disable","srcBounds","_srcBounds","dstBounds","_dstBounds","blitFramebuffer","_filter","createProgram","vec4","srcBoundsNormalized","dstBoundsNormalized","DEPTH_TEST","depthMask","uniform4fv","_uSrcBounds","_uDstBounds","_uNearest","nearest","isWebGL2","FRAMEBUFFER","NEAREST","DEPTH_ATTACHMENT","STENCIL_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","programBlit","supportsBlitFramebuffer","functionBlit","framebuffer","drawBuffer","bounds","enforce","Buffer","AbstractObject","DEFAULT_BUFFER","_object","createBuffer","_valid","WebGLBuffer","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","deleteBuffer","bindBuffer","data","usage","bufferData","isBuffer","getError","NO_ERROR","byteLength","allocationRegister","_identifier","dstByteOffset","srcData","srcOffset","bufferSubData","normalized","vertexAttribPointer","enableVertexAttribArray","disableVertexAttribArray","Camera","_fovy","DEFAULT_FOVY","_near","DEFAULT_NEAR","_far","DEFAULT_FAR","_viewport","_aspect","_eye","vec3","DEFAULT_EYE","_center","DEFAULT_CENTER","_up","DEFAULT_UP","elementDisplayHeight","eyeToDisplayDistance","atan","invalidateView","invalidateProjection","invalidateOnlyViewProjection","_view","_viewInverse","_projection","_projectionInverse","_viewProjection","_viewProjectionInverse","invalidate","fovx","horizontalAngle","sensorWidth","focalLength","duplicate2","mat4","m4","postViewProjection","viewProjection","_postViewProjection","matrix","status","_camera","_reference","camera","update","Canvas","Resizable","element","_framePrecisionSubject","_size","_sizeSubject","_frameScaleSubject","_frameSizeSubject","_element","HTMLCanvasElement","getElementById","addEventListener","statusMessage","observe","_mouseEventProvider","MouseEventProvider","_touchEventProvider","TouchEventProvider","_pointerEventProvider","PointerEventProvider","_keyboardEventProvider","KeyboardEventProvider","style","touchAction","dataset","dataClearColor","Context","request","configureController","configureSizeAndScale","configureContextLostAndRestore","configureContextLostAndRestoreEmulation","clearColor","parseVec4","_clearColor","Color","tuple4","DEFAULT_CLEAR_COLOR","dataFramePrecision","accumulationFormat","DEFAULT_FRAME_PRECISION","_framePrecision","framePrecisionNext","dataMFNum","dataDFNum","_controller","Controller","block","multiFrameNumber","debugFrameNumber","DEFAULT_MULTI_FRAME_NUMBER","mfNumChanged","dfNumChanged","dataFrameScale","dataFrameSize","frameScale","parseVec2","_frameScale","tuple2","frameSize","_favorSizeOverScale","_frameSize","onResize","event","preventDefault","onContextLost","onContextRestore","_lostContextExtension","getExtension","cancel","_renderer","discard","renderer","unblock","formerVisibility","visibility","offsetHeight","elementSize","sizeNext","retrieveSize","swap","blocked","force","pointerEventProvider","mouseEventProvider","eyeGazeEventProvider","_eyeGazeEventProvider","keyboardEventProvider","rgba","framePrecision","debugTexture","controllable","dispose","Info","vec2","clamp2","frameScaleNext","frameSizeNext","backendString","loseContext","restoreContext","eyeGazeDataStreams","serverAddress","EyeGazeEventProvider","auto","CanvasRecorder","canvas","isSupported","_canvas","_state","State","INACTIVE","_images","MediaRecorder","isTypeSupported","fps","mimeType","bitsPerSecond","isMIMETypeSupported","_stream","captureStream","_recorder","_mimeType","ondataavailable","onstop","_onImagesAvailable","RECORDING","tracks","getTracks","stop","pause","PAUSED","resume","requestFrame","fileName","url","URL","createObjectURL","blob","createElement","display","setAttribute","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","Blob","names","parent","child","getOwnPropertyNames","alpha","_rgba","DEFAULT_ALPHA","fromF32","hsl","hslF","clampf3","hue2rgb","rgb","rgbF","deltaR","deltaG","deltaB","lab","labF","yr","xr","zr","xr3","yr3","zr3","xyz","xyzF","cbrt","g","xyz2rgb","lab2xyz","xyz2lab","rgb2xyz","cmyk","cmykF","clampf4","k1","k2","k3","hex","HEX_FORMAT_REGEX","startsWith","to2CharHexCode","rgbaF","space","Space","LAB","CMYK","mix","fromCMYK","laba","fromLAB","HSL","hsla","fromHSL","RGB","fromRGB","other","equals4","red","green","blue","previous","duplicate4","clampf","hue","saturation","lightness","hsl2rgb","alphaf","greenRed","blueYellow","lab2rgb","cyan","magenta","yellow","cmyk2rgb","hex2rgba","algorithm","GrayscaleAlgorithm","LinearLuminance","Average","LeastSaturatedVariant","MinimumDecomposition","MaximumDecomposition","cmyka","ui8Array","Uint8Array","f32Array","rgb2hex","rgba2hex","rgb2hsl","rgb2lab","rgb2cmyk","ColorScale","_hint","InterpolationHint","Linear","_colors","_inverted","ArrayType","RGBAf","RGBf","preset","stepCount","fetchJsonAsync","colorsByStepCount","colors","positionsByStepCount","positions","fromArray","SCHEMA","interleavedColorComponents","color","fromUI8","lower","upper","last","position","clamped","posIndex","Nearest","hint","reverse","bits","tuple","ScaleType","mask","_attributes","_extensions","_allocationRegister","AllocationRegister","_mask","contextString","webgl1","webgl2","_backend","BackendType","WebGL1","WebGL2","valueOf","Invalid","queryAttributes","queryExtensionSupport","functionsUndefine","func","_gl2","GL2Facade","ContextMasquerade","fromGET","msqrdH","fromHash","msqrdP","fromPreset","DEFAULT_ATTRIBUTES","createMasqueradeFromGETorDataAttribute","backend","BackendRequestType","webgl","experimental","experimental1","experimental2","requestWebGL2","requestWebGL1","getContext","getContextAttributes","antialias","depth","failIfMajorPerformanceCaveat","premultipliedAlpha","preserveDrawingBuffer","stencil","extension","extensionsConceal","WEBGL1_EXTENSIONS","WEBGL2_DEFAULT_EXTENSIONS","WEBGL2_EXTENSIONS","extensions","isWebGL1","supports","getSupportedExtensions","ANGLE_instanced_arrays_supported","EXT_blend_minmax_supported","EXT_color_buffer_half_float_supported","EXT_disjoint_timer_query_supported","EXT_frag_depth_supported","EXT_sRGB_supported","EXT_shader_texture_lod_supported","OES_element_index_uint_supported","OES_standard_derivatives_supported","OES_texture_float_supported","OES_texture_half_float_supported","OES_vertex_array_object_supported","WEBGL_color_buffer_float_supported","WEBGL_depth_texture_supported","WEBGL_draw_buffers_supported","EXT_color_buffer_float_supported","EXT_disjoint_timer_query_webgl2_supported","EXT_texture_filter_anisotropic_supported","OES_texture_float_linear_supported","OES_texture_half_float_linear_supported","WEBGL_compressed_texture_astc_supported","WEBGL_compressed_texture_atc_supported","WEBGL_compressed_texture_etc_supported","WEBGL_compressed_texture_etc1_supported","WEBGL_compressed_texture_pvrtc_supported","WEBGL_compressed_texture_s3tc_supported","WEBGL_compressed_texture_s3tc_srgb_supported","WEBGL_debug_renderer_info_supported","WEBGL_debug_shaders_supported","WEBGL_lose_context_supported","ANGLE_instanced_arrays","EXT_blend_minmax","EXT_color_buffer_half_float","EXT_disjoint_timer_query","EXT_disjoint_timer_query_webgl2","EXT_frag_depth","EXT_sRGB","EXT_shader_texture_lod","EXT_texture_filter_anisotropic","OES_element_index_uint","OES_standard_derivatives","OES_texture_float","OES_texture_float_linear","OES_texture_half_float","OES_texture_half_float_linear","OES_vertex_array_object","WEBGL_color_buffer_float","EXT_color_buffer_float","WEBGL_compressed_texture_astc","WEBGL_compressed_texture_atc","WEBGL_compressed_texture_etc","WEBGL_compressed_texture_etc1","WEBGL_compressed_texture_pvrtc","WEBGL_compressed_texture_s3tc","WEBGL_compressed_texture_s3tc_srgb","WEBGL_debug_renderer_info","WEBGL_debug_shaders","WEBGL_depth_texture","WEBGL_draw_buffers","WEBGL_lose_context","texImage3D","pname","getParameter","ExtensionsHash","available","unavailable","pNamesAndValues","param","RENDERER","VENDOR","VERSION","SHADING_LANGUAGE_VERSION","supportsDebugRendererInfo","debugRendererInfo","UNMASKED_VENDOR_WEBGL","UNMASKED_RENDERER_WEBGL","devicePixelRatio","navigator","appCodeName","appName","appVersion","platform","vendor","vendorSub","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_CUBE_MAP_TEXTURE_SIZE","MAX_FRAGMENT_UNIFORM_VECTORS","MAX_RENDERBUFFER_SIZE","MAX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_VARYING_VECTORS","MAX_VERTEX_ATTRIBS","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_VERTEX_UNIFORM_VECTORS","MAX_VIEWPORT_DIMS","MAX_3D_TEXTURE_SIZE","MAX_ARRAY_TEXTURE_LAYERS","MAX_CLIENT_WAIT_TIMEOUT_WEBGL","MAX_COLOR_ATTACHMENTS","MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS","MAX_COMBINED_UNIFORM_BLOCKS","MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS","MAX_DRAW_BUFFERS","MAX_ELEMENT_INDEX","MAX_ELEMENTS_INDICES","MAX_ELEMENTS_VERTICES","MAX_FRAGMENT_INPUT_COMPONENTS","MAX_FRAGMENT_UNIFORM_BLOCKS","MAX_FRAGMENT_UNIFORM_COMPONENTS","MAX_PROGRAM_TEXEL_OFFSET","MAX_SAMPLES","MAX_SERVER_WAIT_TIMEOUT","MAX_TEXTURE_LOD_BIAS","MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS","MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS","MAX_UNIFORM_BLOCK_SIZE","MAX_UNIFORM_BUFFER_BINDINGS","MAX_VARYING_COMPONENTS","MAX_VERTEX_OUTPUT_COMPONENTS","MAX_VERTEX_UNIFORM_BLOCKS","MAX_VERTEX_UNIFORM_COMPONENTS","MIN_PROGRAM_TEXEL_OFFSET","about","maxPNameLength","extensionSeparator","aboutString","byteSizeOfFormat","_extensionsStrive","_extensionsConceal","_functionsUndefine","complement","identifiers","presets","extensions_hash","extensions_strive","extensions_conceal","functions_undefine","msqrdHash","msqrdPreset","MASQUERADE_JSON","_batchSize","_multiFrameNumber","_multiFrameNumberSubject","_debugFrameNumber","_debugFrameNumberSubject","_frameNumber","_frameNumberSubject","_multiFrameDelay","_postFrameEventSubject","Subject","_postSwapEventSubject","_animationFrameID","_block","_blockedUpdates","_intermediateFrameCount","_multiFrameCount","_intermediateFrameTimes","_multiTime","_invalidated","_force","_debug","source","RequestType","Frame","requestAnimationFrame","invoke","_controllable","invokeUpdate","cancelWaitMultiFrame","invokePrepare","_timeoutID","startWaitMultiFrame","isMultiFrameFinished","invokeFrameAndSwap","_multiFrameTime","MAX_VALUE","MIN_VALUE","now","prepare","updateDuration","_updateFrameTime","debug","t0","batchEnd","frame","frameDuration","frameNumberNext","MultiFrame","clearTimeout","cancelAnimationFrame","multiFrameNumberNext","debugFrameNumberNext","multiFrameDelay","multiFrameTime","CuboidGeometry","Geometry","uvCoordinates","extent","_vertexLocation","_extent","_uvCoordinates","vertexVBO","_buffers","indexBuffer","attribEnable","FLOAT","_uvCoordLocation","attribDisable","uvCoordLocation","uv","vertices","VERTICES_UV","VERTICES","STATIC_DRAW","INDICES_UV","INDICES","_count","drawElements","TRIANGLE_STRIP","UNSIGNED_BYTE","GeosphereGeometry","diameter","textured","_diameter","_textured","uvVBO","_texCoordLocation","aVertex","aTexCoord","icosahedron","Icosahedron","generateGeometry","generateTextureCoordinates","faces","Uint16Array","face","vertexBuffer","texcoords","uvBuffer","TRIANGLES","UNSIGNED_SHORT","levels","cache","bc","ca","aSmaller","pos","_vertices","baseVertices","_faces","baseFaces","refine","_texcoords","normal","asin","PlaneGeometry","ResourceManager","_translation","_scale","_rotation","quat","texCoordVBO","UV","_texture2Ds","_materials","_geometries","crossOrigin","fetch","resource","addedIdentifiers","Material","material","geometry","buffer","from","values","tex2D","DebugPass","Mode","Depth","_uDebugMode","_uLinearize","enforceProgramBlit","mode","uniform2f","DefaultFramebuffer","DEFAULT_FRAMEBUFFER","_clearColors","_clearDepth","_clearStencil","es2Clear","attachment","bindFramebuffer","EnvironmentRenderingPass","_skipCubeLod","_cubeMapProgram","_equiMapProgram","_polarMapProgram","_sphereMapProgram","cubemapFrag","compile","_uSkipLod","equimapFrag","spheremapFrag","polarmapFrag","uniform1iv","_environmentTexture","program","_envTextureType","EnvironmentTextureType","EquirectangularMap","SphereMap","CubeMap","TextureCube","PolarMap","_environmentTexture2","uniformMatrix4fv","viewProjectionInverse","skip","eventProvider","_subscriptions","_latestMouseEventsByType","_previousMouseEventsByType","_mouseEventHandlerByType","_latestTouchEventsByType","_previousTouchEventsByType","_touchEventHandlerByType","_latestPointerEventsByType","_previousPointerEventsByType","_pointerEventHandlerByType","_latestEyeGazeEventsByType","_previousEyeGazeEventsByType","_eyeGazeEventHandlerByType","_latestKeyboardEventsByType","_previousKeyboardEventsByType","_keyboardEventHandlerByType","_invalidate","Type","Wheel","handler","latest","observable","subscribe","handlers","subscription","unsubscribe","invokeMouseEventHandler","Click","Enter","Leave","Down","Up","Move","invokeTouchEventHandler","Start","End","Cancel","invokePointerEventHandler","invokeEyeGazeEventHandler","EyeGazeData","NewServerMessage","ConnectionStatus","BinaryMessageParsingError","invokeKeyboardEventHandler","KeyboardEventType","KeyDown","KeyPress","KeyUp","offsets","chromeWorkaround","MouseEvent","offsetX","offsetY","clientX","clientY","WheelEvent","TouchEvent","touches","touch","rect","currentTarget","srcElement","getBoundingClientRect","pushMouseEventHandler","pushTouchEventHandler","pushPointerEventHandler","pushEyeGazeEventHandler","pushKeyboardEventHandler","pointerLock","bitfield","BASE64_ALPHABET","base64","supported","version","LATEST_VERSION","EXTENSIONS_BY_VERSION","backendIndex","WEBGL_BACKENDS","encode64","support","hashHead","decode64","expectedHashLength","strived","WEBGL_EXTENSIONS_BY_BACKEND","ext","EyeGazeEventTarget","EventTarget","EyeGazeDataStream","_eyeGazeDataStreams","EyeGazeDataStreams","_eyeGazeEventTarget","configByte","gazePosition","gazeOrigin","eyePositionNormalized","headPositionAndRotation","userPresence","recalculateNumberOfFloats","generateStreamConfigByte","_webSocket","send","expectedNumberOfFloats","CustomEvent","BINARY_MESSAGE_PARSING_ERROR","currentIndexPosition","eyeGazeData","gazePositionXY","gazeOriginRightXYZ","gazeOriginLeftXYZ","eyePositionRightNormalizedXYZ","eyePositionLeftNormalizedXYZ","headPositionXYZ","headRotationXYZ","EYE_GAZE_DATA","dispatchEvent","CONNECTION_STATUS","SUCCESSFULLY_CONNECTED_TO_SERVER","performHandshake","DISCONNECTED_TO_SERVER","CONNECTION_ERROR","arrayBuffer","floatData","parseEyeTrackingData","NEW_SERVER_MESSAGE","WebSocket","onopen","onOpen","onclose","onClose","onerror","onError","onmessage","onMessage","listener","removeEventListener","readyState","newNumberOfFloats","_eyeGazeDataStream","connect","_preventDefaultMask","EyeGazeData$","NewServerMessage$","ConnectionStatus$","BinaryMessageParsingError$","_eyeGazeDataSubject","_timeframe","_eyeGazeDataListener","preventDefaultOnEvent","_newServerMessageSubject","_newServerMessageListener","_connectionStatusSubject","_connectionStatusListener","_binaryMessageParsingErrorSubject","_binaryMessageParsingErrorListener","failed","statusText","fetchAsync","Promise","reject","XMLHttpRequest","open","responseType","onload","response","ontimeout","transform","json","responseText","FirstPersonModifier","CameraModifier","_sensitivity","DEFAULT_SENSITIVITY","point","_initialPoint","movement","_currentPoint","magnitudes","centerToEye","strafe","yaw","pitch","T","sensitivity","byteSizesByFormatAndContext","UNSIGNED_INT_24_8_WEBGL","supportsDepthTexture","depthTexture","UNSIGNED_SHORT_5_6_5","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_INT","HALF_FLOAT","BYTE","SHORT","INT","UNSIGNED_INT_2_10_10_10_REV","UNSIGNED_INT_10F_11F_11F_REV","UNSIGNED_INT_5_9_9_9_REV","UNSIGNED_INT_24_8","FLOAT_32_UNSIGNED_INT_24_8_REV","isType","DEPTH_COMPONENT","DEPTH_STENCIL","byteSizesByFormat","ALPHA","LUMINANCE","R8","R8I","R8UI","STENCIL_INDEX8","DEPTH_COMPONENT16","LUMINANCE_ALPHA","R16F","R16I","R16UI","RG8","RG8I","RG8UI","RGB565","RGB5_A1","RGBA4","DEPTH_COMPONENT24","RGB8","RGB8UI","SRGB","SRGB8","DEPTH24_STENCIL8","DEPTH_COMPONENT32F","R11F_G11F_B10F","R32F","R32I","R32UI","RG16F","RG16I","RG16UI","RGB10_A2","RGB10_A2UI","RGB9_E5","RGBA8","RGBA8I","RGBA8UI","SRGB8_ALPHA8","SRGB_ALPHA","SRGB_ALPHA8","SRGB_APLHA8","DEPTH32F_STENCIL8","RGB16F","RG32F","RG32I","RG32UI","RGBA16F","RGBA16I","RGBA16UI","RGB32F","RGBA32F","RGBA32I","RGBA32UI","supportsSRGB","sRGB","SRGB_EXT","SRGB_ALPHA_EXT","SRGB8_ALPHA8_EXT","supportsColorBufferFloat","colorBufferFloat","RGB32F_EXT","RGBA32F_EXT","byteSizes","_buffersByAttachment","_texturesByAttachment","_colorClearQueue","_drawBuffers","_drawBuffersChanged","FRAMEBUFFER_COMPLETE","FRAMEBUFFER_INCOMPLETE_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_DIMENSIONS","FRAMEBUFFER_UNSUPPORTED","FRAMEBUFFER_INCOMPLETE_MULTISAMPLE","attachments","createFramebuffer","COLOR_ATTACHMENT_MAX","es3Clear","bufferOrTexture","Renderbuffer","COLOR_ATTACHMENT_MIN","framebufferRenderbuffer","RENDERBUFFER","framebufferTexture2D","TEXTURE_2D","checkFramebufferStatus","isFramebuffer","statusString","WebGLFramebuffer","deleteFramebuffer","clearDepth","DEPTH_BUFFER_BIT","clearStencil","STENCIL_BUFFER_BIT","colorClearQueue","clearBufferfv","COLOR","DEPTH","supportsDrawBuffers","alphaIssue","color2","NaN","hasAttachment","FrameCapture","imageData","quality","putImageData","toDataURL","readPixels","tempBuffer","rows","elementsPerRow","rEnd","temp","copyWithin","framebufferSize","ImageData","captureDefaultFramebuffer","captureFramebuffer","flipImageDataVertically","GaussFilter","_kernelSize","_standardDeviation","_redistribute","_weights","first","second","summedWeight","remainder","kernelSize","_MAXKERNELSIZEHALF","standardDeviation","redistribute","_fragmentShader","_uDelta","_uWeights","direction","directionVectors","recalculateWeights","uniform1fv","uniform2fv","Direction","_vertexArray","VertexArray","args","targets","indices","bindBuffers","unbindBuffers","gl_matrix_extensions","fract","sign","abs2","clamp3","abs3","one256ths","encode_float24x1_to_uint8x3","decode_float24x1_from_uint8x3","encode_uint24_to_rgb8","encode_uint32_to_rgba8","decode_uint24_from_rgb8","decode_uint32_from_rgba8","fromVec4","clamp4","abs4","fromVec3","v2str","numbers","parseVec3","v3str","v4str","value1","value2","interpolation","m2","mat2","m3","mat3","queryHalfFloatSupport","queryColorAttachments","queryInstancedArraySupport","queryDrawBuffersSupport","queryVertexArrayObjectSupport","queryMaxUniformVec3Components","queryBufferSubDataInterface","queryTexImageInterface","_halfFloat","supportsTextureHalfFloat","textureHalfFloat","HALF_FLOAT_OES","_colorAttachmentMin","_colorAttachmentMax","_colorAttachments","MAX_COLOR_ATTACHMENTS_WEBGL","COLOR_ATTACHMENT0_WEBGL","supportsInstancedArrays","drawArraysInstanced","instanceCount","instancedArrays","drawArraysInstancedANGLE","drawElementsInstanced","primcount","drawElementsInstancedANGLE","vertexAttribDivisor","divisor","vertexAttribDivisorANGLE","_maxDrawBuffers","buffers","drawBuffersWEBGL","MAX_DRAW_BUFFERS_WEBGL","supportsVertexArrayObject","createVertexArray","vertexArrayObject","createVertexArrayOES","deleteVertexArray","arrayObject","deleteVertexArrayOES","isVertexArray","isVertexArrayOES","bindVertexArray","bindVertexArrayOES","_maxUniformVec3Components","texImage2D","level","internalformat","border","ArrayBuffer","Int8Array","Uint8ClampedArray","Int16Array","Int32Array","Uint32Array","Float64Array","DataView","supportsTexImage3D","_initialized","assertInitializedFalse","assertUninitialized","propertyKey","descriptor","assertUninitializedFalse","AbstractKernel","components","_components","_height","_depth","xPosOrIndex","yPos","zPos","_samples","sample","elements","flatten","kernel","xPos","approach","tuples","SortApproach","BySquaredLength","sort","iSource","iTarget","elementCount","bytesPerComponent","samples","timeframe","keyDown$","keyPress$","keyUp$","_keyDownSubject","_keyDownListener","_keyPressSubject","_keyPressListener","_keyUpSubject","_keyUpListener","_pointerLockRequestPending","processPointerLockRequests","IS_EDGE","IS_IE11","PointerLock","click$","enter$","leave$","down$","up$","move$","wheel$","Drag","drag$","lock","exit","active","_clickSubject","_clickListener","_enterSubject","_enterListener","_leaveSubject","_leaveListener","_downSubject","_downListener","_upSubject","_upListener","_moveSubject","_moveListener","_wheelSubject","_wheelListener","_dragSubject","_dragListener","userAgent","Navigation","_alwaysRotateOnMove","_eventHandler","EventHandler","pushPointerDownHandler","latests","onPointerDown","pushPointerUpHandler","onPointerUp","pushPointerEnterHandler","onPointerEnter","pushPointerLeaveHandler","onPointerLeave","pushPointerMoveHandler","onPointerMove","pushPointerCancelHandler","onPointerCancel","pushMouseWheelHandler","onWheel","rotationMetaphor","RotationMetaphor","Turntable","_pan","PanModifier","_pinch","PinchZoomModifier","_wheelZoom","WheelZoomModifier","_activeEvents","events","primaryEvent","getPrimaryEvent","isMouseEvent","pointerType","isTouchEvent","isPrimaryButtonDown","buttons","isShiftKeyDown","shiftKey","isPointerLockedRotate","numPointers","isMouseRotate","isTouchRotate","isMousePan","isMultiTouch","Modes","Rotate","Pan","MultiTouch","direction1","movementX","movementY","direction2","Zoom","_rotationMetaphor","FirstPerson","firstPerson","_firstPerson","initiate","process","Trackball","trackball","_trackball","turntable","_turntable","pan","point1","point2","pinch","isPrimary","pointerId","_mode","pointer","modeUpdated","resolveMultiTouch","_lastInteractionTime","deltaY","metaphor","exitPointerLock","requestPointerLock","TrackballModifier","TurntableModifier","NdcFillingRectangle","drawArrays","_referenceCount","createUniqueIdentifier","deleteUniqueIdentifier","rightTranslation","upTranslation","_initialDistance","_currentDistance","eyeToCenter","cancel$","_cancelSubject","_cancelListener","_exit","exits","mozExitPointerLock","webkitExitPointerLock","api","_request","pointerLockElement","mozCancelPointerLock","mozRequestPointerLock","mozPointerLockElement","webkitRequestPointerLock","webkitPointerLockElement","queryAndCacheAPI","TypeError","rpt","searchString","endsWith","action","that","O","relativeStart","relativeEnd","final","log10","LOG10E","arrayType","varArgs","to","nextSource","nextKey","configurable","writable","_shaders","_linked","shaders","numVertShaders","numFragShaders","shader","isProgram","WebGLProgram","attach","deleteProgram","attachShader","detachShader","unref","linkProgram","getProgramParameter","LINK_STATUS","infoLog","getProgramInfoLog","useProgram","DEFAULT_PROGRAM","getUniformLocation","bindAttribLocation","getAttribLocation","complementProperty","propertiesSchema","props","propertySchema","isObject","isDefined","hasProperties","hasDefault","complementArray","itemsSchema","references","reference","compare","objectL","objectR","tracker","track","Set","KernelF32","ReadbackPass","_cache","_depthAttachment","_cachedDepths","_cachedIDs","_buffer","_depthFBO","_referenceSize","_uOffset","_uScale","direct","readDepthAt","directReadDepthAt","renderThenReadDepthAt","zInNDC","depthAt","_idFBO","_idAttachment","onFrame","_internalFormat","createRenderbuffer","bindRenderbuffer","renderbufferStorageMultisample","renderbufferStorage","isRenderbuffer","DEFAULT_RENDER_BUFFER","WebGLRenderbuffer","deleteRenderbuffer","LoadingStatus","Renderer","canvasSize","_canvasSize","_debugTextures","_debugTextureSubject","_debugTexture","_isLoading","_loadingStatusSubscription","Started","Finished","onInitialize","onUninitialize","onDiscarded","onUpdate","onPrepare","onSwap","_resizeEventListener","_mutationEventListener","_mutationObserver","takeRecords","instances","EVENT_IDENTIFIER","eventSupported","documentElement","getComputedStyle","sizef","MutationObserver","MUTATION_OBSERVER_CONFIG","disconnect","attributeFilter","childList","subtree","ForwardSceneRenderPass","SceneRenderPass","_opaqueGeometryMap","_transparentGeometryMap","_scene","preprocessNode","node","nodeTransform","transformComponents","componentsOfType","transformComponent","geometryComponents","geometryComponent","currentComponent","isTransparent","nodes","bindMaterial","geometryTuples","bindGeometry","updateModelTransform","override","updateViewProjectionTransform","bindUniforms","drawCalls","BLEND","renderTransparentMaterials","renderGeometryMap","_ndcOffset","GeometryComponent","SceneNodeComponent","_geometry","_material","SceneNode","TransformComponent","_name","_isTransparent","_nodes","_parent","traverse","component","_type","scene","preprocessScene","_transform","_compiled","createShader","isShader","WebGLShader","deleteShader","sourceWithReplacements","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","searchValue","replaceValue","_replacements","_source","searchRegex","ShadowPass","_gaussFilterKernelSize","_shadowMapFBO","hasBlur","_blurTexture","_shadowMapTexture","_shadowType","ShadowMappingType","HardLinear","blurSize","_gaussFilter","_shadowMapSize","_blurredShadowMapSize","_intermediateBlurFBO","_blurFBO","shadowType","shadowMapSize","blurredShadowMapSize","gl2","HardExponential","RED","SoftLinear","RG","SoftExponential","float","LINEAR","supportsTextureFloatLinear","supportsTextureHalfFloatLinear","wrap","CLAMP_TO_EDGE","_shadowMapRenderbuffer","_intermediateBlurTexture","depthFunc","LEQUAL","LESS","Horizontal","Vertical","FontFace","_ascent","_descent","_lineGap","_glyphTextureExtent","_glyphTexturePadding","_glyphs","_glyphTexture","byte","headless","font","FontFaceLoader","fontFace","catch","reason","fontFileUrl","pageFileUrlsByPageID","existingGlyph","glyph","Glyph","depictable","subsequentIndex","kerning","hasGlyph","setKerning","_base","ascent","descent","lineGap","lineHeight","lineSpace","padding","stream","pairs","readKeyValuePairs","glyphTexturePadding","glyphTextureExtent","page","glyphTexture","extentScale","subTextureOrigin","subTextureExtent","bearingFromFontBaseAndOffset","advance","addGlyph","mandatoryKeys","resultPairs","pair","maximumYBearing","arrayOfGlyphIndices","bearing","lines","promises","promise","processPages","line","processInfo","processCommon","processPage","processChar","processKerning","findAscentAndDescentIfNoneProvided","all","_bearing","_kernings","_subTextureOrigin","_subTextureExtent","_index","_advance","origin","clampf2","fontBase","xOffset","yOffset","GlyphVertices","numberOfGlyphs","_texCoords","FLOATS_PER_TEXCOORD","_origins","FLOATS_PER_ORIGIN","_tangents","FLOATS_PER_TANGENT","_ups","FLOATS_PER_UP","concatenated","shrink","BYTES_PER_ELEMENT","begin","subarray","Label","LabelGeometry","LabelRenderPass","Position2DLabel","Position3DLabel","Projected3DLabel","Text","Typesetter","text","_alignment","Alignment","Left","_lineAnchor","LineAnchor","Baseline","_lineWidth","_fontSizeUnit","Unit","World","_color","DEFAULT_COLOR","resources","typesetting","static","dynamic","_wrap","_elide","Elide","None","_ellipsis","DEFAULT_ELLIPSIS","_text","_staticTransform","_dynamicTransform","_fontFace","ellipsis","charAt","lineFeed","DEFAULT_LINE_FEED","elide","lineWidth","fontSize","alignment","anchor","_fontSize","unit","_backgroundColor","altered","_numberOfGlyphs","_originLocation","_tangentLocation","_upLocation","texCoordLocation","originLocation","tangentLocation","upLocation","origins","tangents","texCoords","validVertex","validTexCoord","validOrigin","validTangent","validUp","labels","aaStepScale","aaSampling","_depthMask","_aaSampling","Sampling","Smooth1","_labels","_ranges","_verticesPerLabel","_depthFunc","_aaStepScale","DEFAULT_AA_STEP_SCALE","label","forceTypeset","typeset","rangeStart","rangeEnd","ups","range","currentColor","currentFontFace","label0","label1","bothStatic","Static","sameColor","sameFontFace","sameUnit","fontSizeUnit","Dynamic","_uDynamic","_uTransform","dynamicTransform","_uColor","rgbaF32","Pixel","_uViewProjection","Mixed","_uNdcOffset","_uAAStepScale","_uAASampling","labelsAltered","numGlyphs","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","bindTexture","DEFAULT_TEXTURE","sampling","_position","_direction","DEFAULT_FONTSIZE_PX","margins","marginedExtent","staticTransform","DEFAULT_FONTSIZE_WORLD","rotation","_lineFeed","pen","tangent","lowerLeft","uvLowerLeft","upperRight","uvUpperRight","lineAnchor","Ascent","Descent","Center","Top","Bottom","advances","charCode","kernings","kerningAfter","fragments","isDelimiter","currentWordIndex","DELIMITERS","FragmentType","Word","lineFeedAt","LineFeed","Delimiter","widths","ellipsisWidth","Right","Middle","threshold","labelFragments","labelFragmentWidths","labelAdvances","labelKernings","fragmentWidths","lastLabelFragmentWidth","i0","i1","ll","ul","currentRectangle","newRectangle","currentMin","currentMax","minX","POSITIVE_INFINITY","maxX","NEGATIVE_INFINITY","minY","maxY","minZ","maxZ","minMax","boundingRectangle","transformAlignment","updateRectangleMinMax","getMinMaxVertices","transformVertices","glyphs","lineAnchorOffset","vertexIndex","firstIndexOfLine","wordWrap","depictableAhead","writeVertex","fullApproximatedWidth","accumulate","ellipsisFragments","ellipsisAdvances","ellipsisKernings","ellipsisFragmentWidths","thresholds","elideThresholds","leftFragments","leftFragmentWidths","leftWidth","elideFragments","rightFragments","rightFragmentWidths","_format","_mipmap","_anisotropy","createTexture","texParameteri","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","MAX_ANISOTROPY","supportsTextureFilterAnisotropic","textureFilterAnisotropic","MAX_TEXTURE_MAX_ANISOTROPY_EXT","isTexture","WebGLTexture","deleteTexture","activeTexture","flipY","image","Image","pixelStorei","UNPACK_FLIP_Y_WEBGL","maxAnisotropy","generateMipMap","LINEAR_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","generateMipmap","wrap_s","wrap_t","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","Texture2DArray","TEXTURE_2D_ARRAY","TEXTURE_WRAP_R","slices","wrap_r","Texture3D","TEXTURE_3D","useHorizontalSlicing","auxiliaryCanvas","auxiliaryContext","subImageSize","drawImage","subImageData","getImageData","uris","drawingPromises","mergedImageWidth","mergedImageHeight","imageIndex","singleImage","drawingPromise","singleImageWidth","singleImageHeight","mergedImageDataUri","load","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","TEXTURE_CUBE_MAP","srcImage","mipLevel","mipSize","incrementOffset","nxData","cropImage","pzData","pxData","nzData","pyData","nyData","urisByFace","images","positiveX","negativeX","positiveY","negativeY","positiveZ","negativeZ","waiting","calculateMipLevelSize","mip0Size","numMipLevels","extractMipLevelFromAtlas","bytesPerFace","faceID","perFaceData","baseLevel","maxLevel","TEXTURE_BASE_LEVEL","TEXTURE_MAX_LEVEL","clearOnUndefined","TileCameraGenerator","_tileSize","_padding","_tile","_algorithm","Algorithm","ScanLine","_offset","numX","numY","xi","xj","yi","yj","hilbertIndex","hilbertIndices","tableSize","recursionDepth","uPow2","maxZIndexBitLength","zIndex","numberOfFoundIndices","currentBit","clearIndices","_indices","numTiles","generateScanLineIndices","numXTiles","numYTiles","HilbertCurve","generateHilbertIndices","ZCurve","generateZCurveIndices","ensureValidIterationIndices","tile","tileSize","_sourceCamera","_sourceViewport","tableIndices","sourceViewport","paddedTileSize","getPaddedTileSize","paddedTileCenter","paddedTileCenterNDC","scaleVec","translationVec","tileNDCCorrectionMatrix","translateMatrix","start$","end$","Observable","_startSubject","_startListener","_endSubject","_endListener","tuple3","semantic","valueV1","tupleV2","tupleV3","tupleV4","duplicate3","equals2","t1","equals3","_maxAzimuth","_minAzimuth","_xAxisScreenSpace","_azimuth","UnifiedBuffer","sizeInBytes","mergeThreshold","_updates","_cpuBuffer","_gpuBuffer","_usage","_mergeThreshold","lhsUpdate","rhsUpdate","removeCount","rhs","lhs","updatesNeedMerge","findIndex","current","mergeUpdatesLeft","mergeUpdatesRight","byteOffset","addUpdate","bufferView","subBufferView","subData","oldBuffer","branch","commit","_buffersBound","bindBOs","unbindBOs","_bind","_unbind","DEFAULT_VERTEX_ARRAY","KernelI32","KernelI8","KernelUI32","KernelUI8","root_auxiliaries","mat2d","root_gl_matrix_extensions","root_tuples","floatWriteSupport","supportsTextureFloat","halfWriteSupport","query","textureFloat","internalFormatIndex","queryPrecisionSupport","punycode","util","Url","protocol","slashes","auth","host","port","hostname","pathname","href","urlParse","relative","resolveObject","isString","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","hostlessProtocol","slashedProtocol","querystring","parseQueryString","slashesDenoteHost","queryIndex","splitter","uSplit","rest","trim","simplePath","exec","proto","lowerProto","atSign","hostEnd","hec","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","unshift","h","ae","esc","escape","qm","rel","tkeys","tk","tkey","rkeys","rk","rkey","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","pop","isNullOrUndefined","authInHost","isNull","hasTrailingSlash","isAbsolute","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","Symbol","toStringTag"],"mappings":"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","file":"webgl-operate.slim.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"rxjs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"rxjs\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"gloperate\"] = factory(require(\"rxjs\"));\n\telse\n\t\troot[\"gloperate\"] = factory(root[\"rxjs\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE__7318__) {\nreturn ","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\r\n * 2x2 Matrix\r\n * @module mat2\r\n */\n\n/**\r\n * Creates a new identity mat2\r\n *\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat2} a matrix to clone\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Copy the values from one mat2 to another\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set a mat2 to the identity matrix\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @returns {mat2} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Create a new mat2 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out A new 2x2 matrix\r\n */\n\nexport function fromValues(m00, m01, m10, m11) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Set the components of a mat2 to the given values\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out\r\n */\n\nexport function set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Transpose the values of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3]; // Calculate the determinant\n\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2\r\n *\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n/**\r\n * Multiplies two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n/**\r\n * Rotates a mat2 by the given angle\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n/**\r\n * Scales the mat2 by the dimensions in the given vec2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat2} out\r\n **/\n\nexport function scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.scale(dest, dest, vec);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat2} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2\r\n *\r\n * @param {ReadonlyMat2} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat2\r\n *\r\n * @param {ReadonlyMat2} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3]);\n}\n/**\r\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n * @param {ReadonlyMat2} L the lower triangular matrix\r\n * @param {ReadonlyMat2} D the diagonal matrix\r\n * @param {ReadonlyMat2} U the upper triangular matrix\r\n * @param {ReadonlyMat2} a the input matrix to factorize\r\n */\n\nexport function LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n/**\r\n * Adds two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat2} a The first matrix.\r\n * @param {ReadonlyMat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat2} a The first matrix.\r\n * @param {ReadonlyMat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2} out the receiving vector\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Alias for {@link mat2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat2.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 2x3 Matrix\r\n * @module mat2d\r\n * @description\r\n * A mat2d contains six elements defined as:\r\n * <pre>\r\n * [a, b,\r\n *  c, d,\r\n *  tx, ty]\r\n * </pre>\r\n * This is a short form for the 3x3 matrix:\r\n * <pre>\r\n * [a, b, 0,\r\n *  c, d, 0,\r\n *  tx, ty, 1]\r\n * </pre>\r\n * The last column is ignored so the array is shorter and operations are faster.\r\n */\n\n/**\r\n * Creates a new identity mat2d\r\n *\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(6);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2d initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat2d} a matrix to clone\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Copy the values from one mat2d to another\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Set a mat2d to the identity matrix\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @returns {mat2d} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Create a new mat2d with the given values\r\n *\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} A new mat2d\r\n */\n\nexport function fromValues(a, b, c, d, tx, ty) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Set the components of a mat2d to the given values\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} out\r\n */\n\nexport function set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Inverts a mat2d\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\nexport function invert(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2d\r\n *\r\n * @param {ReadonlyMat2d} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n/**\r\n * Multiplies two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n/**\r\n * Rotates a mat2d by the given angle\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Scales the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to translate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat2d} out\r\n **/\n\nexport function scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Translates the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to translate\r\n * @param {ReadonlyVec2} v the vec2 to translate the matrix by\r\n * @returns {mat2d} out\r\n **/\n\nexport function translate(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.scale(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat2d} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.translate(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat2d} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2d\r\n *\r\n * @param {ReadonlyMat2d} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat2d(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat2d\r\n *\r\n * @param {ReadonlyMat2d} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], 1);\n}\n/**\r\n * Adds two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2d} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n/**\r\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2d} out the receiving vector\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2d} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat2d} a The first matrix.\r\n * @param {ReadonlyMat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat2d} a The first matrix.\r\n * @param {ReadonlyMat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n/**\r\n * Alias for {@link mat2d.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat2d.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {ReadonlyMat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to translate\r\n * @param {ReadonlyVec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Calculates a 3x3 matrix from the given quaternion\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {ReadonlyMat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {ReadonlyVec4} result the receiving vector\r\n * @param {ReadonlyVec4} U the first vector\r\n * @param {ReadonlyVec4} V the second vector\r\n * @param {ReadonlyVec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyVec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Gets the angular distance between two unit quaternions\r\n *\r\n * @param  {ReadonlyQuat} a     Origin unit quaternion\r\n * @param  {ReadonlyQuat} b     Destination unit quaternion\r\n * @return {Number}     Angle, in radians, between the two quaternions\r\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Calculate the exponential of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\r\n * Calculate the natural logarithm of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\r\n * Calculate the scalar power of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @param {Number} b amount to scale the quaternion by\r\n * @returns {quat} out\r\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random unit quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyMat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {ReadonlyQuat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {ReadonlyQuat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var clone = vec4.clone;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var fromValues = vec4.fromValues;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var copy = vec4.copy;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var set = vec4.set;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var add = vec4.add;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {ReadonlyQuat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var scale = vec4.scale;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexport var dot = vec4.dot;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var lerp = vec4.lerp;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport var length = vec4.length;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var normalize = vec4.normalize;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyQuat} a The first quaternion.\r\n * @param {ReadonlyQuat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyQuat} a The first vector.\r\n * @param {ReadonlyQuat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var equals = vec4.equals;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {ReadonlyVec3} a the initial vector\r\n * @param {ReadonlyVec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {ReadonlyQuat} c the third operand\r\n * @param {ReadonlyQuat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\r\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\r\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as quat from \"./quat.js\";\nimport * as mat4 from \"./mat4.js\";\n/**\r\n * Dual Quaternion<br>\r\n * Format: [real, dual]<br>\r\n * Quaternion format: XYZW<br>\r\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n * @module quat2\r\n */\n\n/**\r\n * Creates a new identity dual quat\r\n *\r\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n */\n\nexport function create() {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n\n  dq[3] = 1;\n  return dq;\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {ReadonlyQuat2} a dual quaternion to clone\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nexport function clone(a) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n/**\r\n * Creates a new dual quat initialized with the given values\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n/**\r\n * Creates a new dual quat from the given values (quat and translation)\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component (translation)\r\n * @param {Number} y2 Y component (translation)\r\n * @param {Number} z2 Z component (translation)\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n      ay = y2 * 0.5,\n      az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n/**\r\n * Creates a dual quat from a quaternion and a translation\r\n *\r\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\r\n * @param {ReadonlyQuat} q a normalized quaternion\r\n * @param {ReadonlyVec3} t tranlation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nexport function fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n      ay = t[1] * 0.5,\n      az = t[2] * 0.5,\n      bx = q[0],\n      by = q[1],\n      bz = q[2],\n      bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Creates a dual quat from a translation\r\n *\r\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\r\n * @param {ReadonlyVec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nexport function fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a dual quat from a quaternion\r\n *\r\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\r\n * @param {ReadonlyQuat} q the quaternion\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nexport function fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a new dual quat from a matrix (4x4)\r\n *\r\n * @param {quat2} out the dual quaternion\r\n * @param {ReadonlyMat4} a the matrix\r\n * @returns {quat2} dual quat receiving operation result\r\n * @function\r\n */\n\nexport function fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = quat.create();\n  mat4.getRotation(outer, a);\n  var t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n/**\r\n * Copy the values from one dual quat to another\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the source dual quaternion\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Set a dual quat to the identity dual quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @returns {quat2} out\r\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Set the components of a dual quat to the given values\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n/**\r\n * Gets the real part of a dual quat\r\n * @param  {quat} out real part\r\n * @param  {ReadonlyQuat2} a Dual Quaternion\r\n * @return {quat} real part\r\n */\n\nexport var getReal = quat.copy;\n/**\r\n * Gets the dual part of a dual quat\r\n * @param  {quat} out dual part\r\n * @param  {ReadonlyQuat2} a Dual Quaternion\r\n * @return {quat} dual part\r\n */\n\nexport function getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n/**\r\n * Set the real component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {ReadonlyQuat} q a quaternion representing the real part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport var setReal = quat.copy;\n/**\r\n * Set the dual component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {ReadonlyQuat} q a quaternion representing the dual part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n/**\r\n * Gets the translation of a normalized dual quat\r\n * @param  {vec3} out translation\r\n * @param  {ReadonlyQuat2} a Dual Quaternion to be decomposed\r\n * @return {vec3} translation\r\n */\n\nexport function getTranslation(out, a) {\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n/**\r\n * Translates a dual quat by the given vector\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {quat2} out\r\n */\n\nexport function translate(out, a, v) {\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3],\n      bx1 = v[0] * 0.5,\n      by1 = v[1] * 0.5,\n      bz1 = v[2] * 0.5,\n      ax2 = a[4],\n      ay2 = a[5],\n      az2 = a[6],\n      aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the X axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Y axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Z axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (a * q)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {ReadonlyQuat} q quaternion to rotate by\r\n * @returns {quat2} out\r\n */\n\nexport function rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (q * a)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat} q quaternion to rotate by\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @returns {quat2} out\r\n */\n\nexport function rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      bx = a[0],\n      by = a[1],\n      bz = a[2],\n      bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @param {Number} rad how far the rotation should be\r\n * @returns {quat2} out\r\n */\n\nexport function rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n\n  var axisLength = Math.hypot(axis[0], axis[1], axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Adds two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n/**\r\n * Multiplies two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @returns {quat2} out\r\n */\n\nexport function multiply(out, a, b) {\n  var ax0 = a[0],\n      ay0 = a[1],\n      az0 = a[2],\n      aw0 = a[3],\n      bx1 = b[4],\n      by1 = b[5],\n      bz1 = b[6],\n      bw1 = b[7],\n      ax1 = a[4],\n      ay1 = a[5],\n      az1 = a[6],\n      aw1 = a[7],\n      bx0 = b[0],\n      by0 = b[1],\n      bz0 = b[2],\n      bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n/**\r\n * Alias for {@link quat2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Scales a dual quat by a scalar number\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {ReadonlyQuat2} a the dual quat to scale\r\n * @param {Number} b amount to scale the dual quat by\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n/**\r\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n *\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexport var dot = quat.dot;\n/**\r\n * Performs a linear interpolation between two dual quats's\r\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat2} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n}\n/**\r\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a dual quat to calculate inverse of\r\n * @returns {quat2} out\r\n */\n\nexport function invert(out, a) {\n  var sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a dual quat\r\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {ReadonlyQuat2} a quat to calculate conjugate of\r\n * @returns {quat2} out\r\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Calculates the length of a dual quat\r\n *\r\n * @param {ReadonlyQuat2} a dual quat to calculate length of\r\n * @returns {Number} length of a\r\n * @function\r\n */\n\nexport var length = quat.length;\n/**\r\n * Alias for {@link quat2.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Calculates the squared length of a dual quat\r\n *\r\n * @param {ReadonlyQuat2} a dual quat to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexport var squaredLength = quat.squaredLength;\n/**\r\n * Alias for {@link quat2.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Normalize a dual quat\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a dual quaternion to normalize\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function normalize(out, a) {\n  var magnitude = squaredLength(a);\n\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n\n  return out;\n}\n/**\r\n * Returns a string representation of a dual quatenion\r\n *\r\n * @param {ReadonlyQuat2} a dual quaternion to represent as a string\r\n * @returns {String} string representation of the dual quat\r\n */\n\nexport function str(a) {\n  return \"quat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \")\";\n}\n/**\r\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyQuat2} a the first dual quaternion.\r\n * @param {ReadonlyQuat2} b the second dual quaternion.\r\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n/**\r\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyQuat2} a the first dual quat.\r\n * @param {ReadonlyQuat2} b the second dual quat.\r\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n}","import * as glMatrix from \"./common.js\";\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\n\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the source vector\r\n * @returns {vec2} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to floor\r\n * @returns {vec2} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to round\r\n * @returns {vec2} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to negate\r\n * @returns {vec2} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to invert\r\n * @returns {vec2} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {ReadonlyVec2} a The vec2 point to rotate\r\n * @param {ReadonlyVec2} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec2} out\r\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {ReadonlyVec2} a The first operand\r\n * @param {ReadonlyVec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec2 to zero\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @returns {vec2} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","'use strict';\n\nvar helpers = require('./helpers');\n\n/** @type ValidatorResult */\nvar ValidatorResult = helpers.ValidatorResult;\n/** @type SchemaError */\nvar SchemaError = helpers.SchemaError;\n\nvar attribute = {};\n\nattribute.ignoreProperties = {\n  // informative properties\n  'id': true,\n  'default': true,\n  'description': true,\n  'title': true,\n  // arguments to other properties\n  'additionalItems': true,\n  'then': true,\n  'else': true,\n  // special-handled properties\n  '$schema': true,\n  '$ref': true,\n  'extends': true,\n};\n\n/**\n * @name validators\n */\nvar validators = attribute.validators = {};\n\n/**\n * Validates whether the instance if of a certain type\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.type = function validateType (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var types = Array.isArray(schema.type) ? schema.type : [schema.type];\n  if (!types.some(this.testType.bind(this, instance, schema, options, ctx))) {\n    var list = types.map(function (v) {\n      if(!v) return;\n      var id = v.$id || v.id;\n      return id ? ('<' + id + '>') : (v+'');\n    });\n    result.addError({\n      name: 'type',\n      argument: list,\n      message: \"is not of a type(s) \" + list,\n    });\n  }\n  return result;\n};\n\nfunction testSchemaNoThrow(instance, options, ctx, callback, schema){\n  var throwError = options.throwError;\n  var throwAll = options.throwAll;\n  options.throwError = false;\n  options.throwAll = false;\n  var res = this.validateSchema(instance, schema, options, ctx);\n  options.throwError = throwError;\n  options.throwAll = throwAll;\n\n  if (!res.valid && callback instanceof Function) {\n    callback(res);\n  }\n  return res.valid;\n}\n\n/**\n * Validates whether the instance matches some of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.anyOf = function validateAnyOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  if (!Array.isArray(schema.anyOf)){\n    throw new SchemaError(\"anyOf must be an array\");\n  }\n  if (!schema.anyOf.some(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res){inner.importErrors(res);}\n    ))) {\n    var list = schema.anyOf.map(function (v, i) {\n      var id = v.$id || v.id;\n      if(id) return '<' + id + '>';\n      return(v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n    });\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'anyOf',\n      argument: list,\n      message: \"is not any of \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance matches every given schema\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.allOf = function validateAllOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.allOf)){\n    throw new SchemaError(\"allOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var self = this;\n  schema.allOf.forEach(function(v, i){\n    var valid = self.validateSchema(instance, v, options, ctx);\n    if(!valid.valid){\n      var id = v.$id || v.id;\n      var msg = id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n      result.addError({\n        name: 'allOf',\n        argument: { id: msg, length: valid.errors.length, valid: valid },\n        message: 'does not match allOf schema ' + msg + ' with ' + valid.errors.length + ' error[s]:',\n      });\n      result.importErrors(valid);\n    }\n  });\n  return result;\n};\n\n/**\n * Validates whether the instance matches exactly one of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.oneOf = function validateOneOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.oneOf)){\n    throw new SchemaError(\"oneOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  var count = schema.oneOf.filter(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res) {inner.importErrors(res);}\n    ) ).length;\n  var list = schema.oneOf.map(function (v, i) {\n    var id = v.$id || v.id;\n    return id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n  });\n  if (count!==1) {\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'oneOf',\n      argument: list,\n      message: \"is not exactly one from \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates \"then\" or \"else\" depending on the result of validating \"if\"\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.if = function validateIf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) return null;\n  if (!helpers.isSchema(schema.if)) throw new Error('Expected \"if\" keyword to be a schema');\n  var ifValid = testSchemaNoThrow.call(this, instance, options, ctx, null, schema.if);\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var res;\n  if(ifValid){\n    if (schema.then === undefined) return;\n    if (!helpers.isSchema(schema.then)) throw new Error('Expected \"then\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.then, options, ctx.makeChild(schema.then));\n    result.importErrors(res);\n  }else{\n    if (schema.else === undefined) return;\n    if (!helpers.isSchema(schema.else)) throw new Error('Expected \"else\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.else, options, ctx.makeChild(schema.else));\n    result.importErrors(res);\n  }\n  return result;\n};\n\nfunction getEnumerableProperty(object, key){\n  // Determine if `key` shows up in `for(var key in object)`\n  // First test Object.hasOwnProperty.call as an optimization: that guarantees it does\n  if(Object.hasOwnProperty.call(object, key)) return object[key];\n  // Test `key in object` as an optimization; false means it won't\n  if(!(key in object)) return;\n  while( (object = Object.getPrototypeOf(object)) ){\n    if(Object.propertyIsEnumerable.call(object, key)) return object[key];\n  }\n}\n\n/**\n * Validates propertyNames\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.propertyNames = function validatePropertyNames (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var subschema = schema.propertyNames!==undefined ? schema.propertyNames : {};\n  if(!helpers.isSchema(subschema)) throw new SchemaError('Expected \"propertyNames\" to be a schema (object or boolean)');\n\n  for (var property in instance) {\n    if(getEnumerableProperty(instance, property) !== undefined){\n      var res = this.validateSchema(property, subschema, options, ctx.makeChild(subschema));\n      result.importErrors(res);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates properties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.properties = function validateProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var properties = schema.properties || {};\n  for (var property in properties) {\n    var subschema = properties[property];\n    if(subschema===undefined){\n      continue;\n    }else if(subschema===null){\n      throw new SchemaError('Unexpected null, expected schema in \"properties\"');\n    }\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, subschema, options, ctx);\n    }\n    var prop = getEnumerableProperty(instance, property);\n    var res = this.validateSchema(prop, subschema, options, ctx.makeChild(subschema, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n  return result;\n};\n\n/**\n * Test a specific property within in instance against the additionalProperties schema attribute\n * This ignores properties with definitions in the properties schema attribute, but no other attributes.\n * If too many more types of property-existence tests pop up they may need their own class of tests (like `type` has)\n * @private\n * @return {boolean}\n */\nfunction testAdditionalProperty (instance, schema, options, ctx, property, result) {\n  if(!this.types.object(instance)) return;\n  if (schema.properties && schema.properties[property] !== undefined) {\n    return;\n  }\n  if (schema.additionalProperties === false) {\n    result.addError({\n      name: 'additionalProperties',\n      argument: property,\n      message: \"is not allowed to have the additional property \" + JSON.stringify(property),\n    });\n  } else {\n    var additionalProperties = schema.additionalProperties || {};\n\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, additionalProperties, options, ctx);\n    }\n\n    var res = this.validateSchema(instance[property], additionalProperties, options, ctx.makeChild(additionalProperties, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n}\n\n/**\n * Validates patternProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.patternProperties = function validatePatternProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var patternProperties = schema.patternProperties || {};\n\n  for (var property in instance) {\n    var test = true;\n    for (var pattern in patternProperties) {\n      var subschema = patternProperties[pattern];\n      if(subschema===undefined){\n        continue;\n      }else if(subschema===null){\n        throw new SchemaError('Unexpected null, expected schema in \"patternProperties\"');\n      }\n      try {\n        var regexp = new RegExp(pattern, 'u');\n      } catch(_e) {\n        // In the event the stricter handling causes an error, fall back on the forgiving handling\n        // DEPRECATED\n        regexp = new RegExp(pattern);\n      }\n      if (!regexp.test(property)) {\n        continue;\n      }\n      test = false;\n\n      if (typeof options.preValidateProperty == 'function') {\n        options.preValidateProperty(instance, property, subschema, options, ctx);\n      }\n\n      var res = this.validateSchema(instance[property], subschema, options, ctx.makeChild(subschema, property));\n      if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n      result.importErrors(res);\n    }\n    if (test) {\n      testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates additionalProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.additionalProperties = function validateAdditionalProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  // if patternProperties is defined then we'll test when that one is called instead\n  if (schema.patternProperties) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in instance) {\n    testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minProperties = function validateMinProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length >= schema.minProperties)) {\n    result.addError({\n      name: 'minProperties',\n      argument: schema.minProperties,\n      message: \"does not meet minimum property length of \" + schema.minProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxProperties = function validateMaxProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length <= schema.maxProperties)) {\n    result.addError({\n      name: 'maxProperties',\n      argument: schema.maxProperties,\n      message: \"does not meet maximum property length of \" + schema.maxProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates items when instance is an array\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.items = function validateItems (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (!schema.items) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  instance.every(function (value, i) {\n    var items = Array.isArray(schema.items) ? (schema.items[i] || schema.additionalItems) : schema.items;\n    if (items === undefined) {\n      return true;\n    }\n    if (items === false) {\n      result.addError({\n        name: 'items',\n        message: \"additionalItems not permitted\",\n      });\n      return false;\n    }\n    var res = self.validateSchema(value, items, options, ctx.makeChild(items, i));\n    if(res.instance !== result.instance[i]) result.instance[i] = res.instance;\n    result.importErrors(res);\n    return true;\n  });\n  return result;\n};\n\n/**\n * Validates minimum and exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minimum = function validateMinimum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMinimum && schema.exclusiveMinimum === true) {\n    if(!(instance > schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than \" + schema.minimum,\n      });\n    }\n  } else {\n    if(!(instance >= schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than or equal to \" + schema.minimum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates maximum and exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maximum = function validateMaximum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMaximum && schema.exclusiveMaximum === true) {\n    if(!(instance < schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than \" + schema.maximum,\n      });\n    }\n  } else {\n    if(!(instance <= schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than or equal to \" + schema.maximum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMinimum = function validateExclusiveMinimum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMinimum, which is handled by the \"minimum\" keyword.\n  if(typeof schema.exclusiveMaximum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance > schema.exclusiveMinimum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMinimum',\n      argument: schema.exclusiveMinimum,\n      message: \"must be strictly greater than \" + schema.exclusiveMinimum,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMaximum = function validateExclusiveMaximum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMaximum, which is handled by the \"maximum\" keyword.\n  if(typeof schema.exclusiveMaximum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance < schema.exclusiveMaximum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMaximum',\n      argument: schema.exclusiveMaximum,\n      message: \"must be strictly less than \" + schema.exclusiveMaximum,\n    });\n  }\n  return result;\n};\n\n/**\n * Perform validation for multipleOf and divisibleBy, which are essentially the same.\n * @param instance\n * @param schema\n * @param validationType\n * @param errorMessage\n * @returns {String|null}\n */\nvar validateMultipleOfOrDivisbleBy = function validateMultipleOfOrDivisbleBy (instance, schema, options, ctx, validationType, errorMessage) {\n  if (!this.types.number(instance)) return;\n\n  var validationArgument = schema[validationType];\n  if (validationArgument == 0) {\n    throw new SchemaError(validationType + \" cannot be zero\");\n  }\n\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  var instanceDecimals = helpers.getDecimalPlaces(instance);\n  var divisorDecimals = helpers.getDecimalPlaces(validationArgument);\n\n  var maxDecimals = Math.max(instanceDecimals , divisorDecimals);\n  var multiplier = Math.pow(10, maxDecimals);\n\n  if (Math.round(instance * multiplier) % Math.round(validationArgument * multiplier) !== 0) {\n    result.addError({\n      name: validationType,\n      argument:  validationArgument,\n      message: errorMessage + JSON.stringify(validationArgument),\n    });\n  }\n\n  return result;\n};\n\n/**\n * Validates divisibleBy when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.multipleOf = function validateMultipleOf (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"multipleOf\", \"is not a multiple of (divisible by) \");\n};\n\n/**\n * Validates multipleOf when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.divisibleBy = function validateDivisibleBy (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"divisibleBy\", \"is not divisible by (multiple of) \");\n};\n\n/**\n * Validates whether the instance value is present.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.required = function validateRequired (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (instance === undefined && schema.required === true) {\n    // A boolean form is implemented for reverse-compatibility with schemas written against older drafts\n    result.addError({\n      name: 'required',\n      message: \"is required\",\n    });\n  } else if (this.types.object(instance) && Array.isArray(schema.required)) {\n    schema.required.forEach(function(n){\n      if(getEnumerableProperty(instance, n)===undefined){\n        result.addError({\n          name: 'required',\n          argument: n,\n          message: \"requires property \" + JSON.stringify(n),\n        });\n      }\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value matches the regular expression, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.pattern = function validatePattern (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var pattern = schema.pattern;\n  try {\n    var regexp = new RegExp(pattern, 'u');\n  } catch(_e) {\n    // In the event the stricter handling causes an error, fall back on the forgiving handling\n    // DEPRECATED\n    regexp = new RegExp(pattern);\n  }\n  if (!instance.match(regexp)) {\n    result.addError({\n      name: 'pattern',\n      argument: schema.pattern,\n      message: \"does not match pattern \" + JSON.stringify(schema.pattern.toString()),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is of a certain defined format or a custom\n * format.\n * The following formats are supported for string types:\n *   - date-time\n *   - date\n *   - time\n *   - ip-address\n *   - ipv6\n *   - uri\n *   - color\n *   - host-name\n *   - alpha\n *   - alpha-numeric\n *   - utc-millisec\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {String|null}\n */\nvalidators.format = function validateFormat (instance, schema, options, ctx) {\n  if (instance===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!result.disableFormat && !helpers.isFormat(instance, schema.format, this)) {\n    result.addError({\n      name: 'format',\n      argument: schema.format,\n      message: \"does not conform to the \" + JSON.stringify(schema.format) + \" format\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minLength = function validateMinLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length >= schema.minLength)) {\n    result.addError({\n      name: 'minLength',\n      argument: schema.minLength,\n      message: \"does not meet minimum length of \" + schema.minLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxLength = function validateMaxLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  // TODO if this was already computed in \"minLength\", use that value instead of re-computing\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length <= schema.maxLength)) {\n    result.addError({\n      name: 'maxLength',\n      argument: schema.maxLength,\n      message: \"does not meet maximum length of \" + schema.maxLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains at least a minimum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minItems = function validateMinItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length >= schema.minItems)) {\n    result.addError({\n      name: 'minItems',\n      argument: schema.minItems,\n      message: \"does not meet minimum length of \" + schema.minItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains no more than a maximum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxItems = function validateMaxItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length <= schema.maxItems)) {\n    result.addError({\n      name: 'maxItems',\n      argument: schema.maxItems,\n      message: \"does not meet maximum length of \" + schema.maxItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Deep compares arrays for duplicates\n * @param v\n * @param i\n * @param a\n * @private\n * @return {boolean}\n */\nfunction testArrays (v, i, a) {\n  var j, len = a.length;\n  for (j = i + 1, len; j < len; j++) {\n    if (helpers.deepCompareStrict(v, a[j])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Validates whether there are no duplicates, when the instance is an Array.\n * @param instance\n * @return {String|null}\n */\nvalidators.uniqueItems = function validateUniqueItems (instance, schema, options, ctx) {\n  if (schema.uniqueItems!==true) return;\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!instance.every(testArrays)) {\n    result.addError({\n      name: 'uniqueItems',\n      message: \"contains duplicate item\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validate for the presence of dependency properties, if the instance is an object.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.dependencies = function validateDependencies (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in schema.dependencies) {\n    if (instance[property] === undefined) {\n      continue;\n    }\n    var dep = schema.dependencies[property];\n    var childContext = ctx.makeChild(dep, property);\n    if (typeof dep == 'string') {\n      dep = [dep];\n    }\n    if (Array.isArray(dep)) {\n      dep.forEach(function (prop) {\n        if (instance[prop] === undefined) {\n          result.addError({\n            // FIXME there's two different \"dependencies\" errors here with slightly different outputs\n            // Can we make these the same? Or should we create different error types?\n            name: 'dependencies',\n            argument: childContext.propertyPath,\n            message: \"property \" + prop + \" not found, required by \" + childContext.propertyPath,\n          });\n        }\n      });\n    } else {\n      var res = this.validateSchema(instance, dep, options, childContext);\n      if(result.instance !== res.instance) result.instance = res.instance;\n      if (res && res.errors.length) {\n        result.addError({\n          name: 'dependencies',\n          argument: childContext.propertyPath,\n          message: \"does not meet dependency required by \" + childContext.propertyPath,\n        });\n        result.importErrors(res);\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is one of the enumerated values.\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['enum'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema['enum'])) {\n    throw new SchemaError(\"enum expects an array\", schema);\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!schema['enum'].some(helpers.deepCompareStrict.bind(null, instance))) {\n    result.addError({\n      name: 'enum',\n      argument: schema['enum'],\n      message: \"is not one of enum values: \" + schema['enum'].map(String).join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance exactly matches a given value\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['const'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!helpers.deepCompareStrict(schema['const'], instance)) {\n    result.addError({\n      name: 'const',\n      argument: schema['const'],\n      message: \"does not exactly match expected constant: \" + schema['const'],\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance if of a prohibited type.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.not = validators.disallow = function validateNot (instance, schema, options, ctx) {\n  var self = this;\n  if(instance===undefined) return null;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var notTypes = schema.not || schema.disallow;\n  if(!notTypes) return null;\n  if(!Array.isArray(notTypes)) notTypes=[notTypes];\n  notTypes.forEach(function (type) {\n    if (self.testType(instance, schema, options, ctx, type)) {\n      var id = type && (type.$id || type.id);\n      var schemaId = id || type;\n      result.addError({\n        name: 'not',\n        argument: schemaId,\n        message: \"is of prohibited type \" + schemaId,\n      });\n    }\n  });\n  return result;\n};\n\nmodule.exports = attribute;\n","'use strict';\n\nvar uri = require('url');\n\nvar ValidationError = exports.ValidationError = function ValidationError (message, instance, schema, path, name, argument) {\n  if(Array.isArray(path)){\n    this.path = path;\n    this.property = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else if(path !== undefined){\n    this.property = path;\n  }\n  if (message) {\n    this.message = message;\n  }\n  if (schema) {\n    var id = schema.$id || schema.id;\n    this.schema = id || schema;\n  }\n  if (instance !== undefined) {\n    this.instance = instance;\n  }\n  this.name = name;\n  this.argument = argument;\n  this.stack = this.toString();\n};\n\nValidationError.prototype.toString = function toString() {\n  return this.property + ' ' + this.message;\n};\n\nvar ValidatorResult = exports.ValidatorResult = function ValidatorResult(instance, schema, options, ctx) {\n  this.instance = instance;\n  this.schema = schema;\n  this.options = options;\n  this.path = ctx.path;\n  this.propertyPath = ctx.propertyPath;\n  this.errors = [];\n  this.throwError = options && options.throwError;\n  this.throwFirst = options && options.throwFirst;\n  this.throwAll = options && options.throwAll;\n  this.disableFormat = options && options.disableFormat === true;\n};\n\nValidatorResult.prototype.addError = function addError(detail) {\n  var err;\n  if (typeof detail == 'string') {\n    err = new ValidationError(detail, this.instance, this.schema, this.path);\n  } else {\n    if (!detail) throw new Error('Missing error detail');\n    if (!detail.message) throw new Error('Missing error message');\n    if (!detail.name) throw new Error('Missing validator type');\n    err = new ValidationError(detail.message, this.instance, this.schema, this.path, detail.name, detail.argument);\n  }\n\n  this.errors.push(err);\n  if (this.throwFirst) {\n    throw new ValidatorResultError(this);\n  }else if(this.throwError){\n    throw err;\n  }\n  return err;\n};\n\nValidatorResult.prototype.importErrors = function importErrors(res) {\n  if (typeof res == 'string' || (res && res.validatorType)) {\n    this.addError(res);\n  } else if (res && res.errors) {\n    Array.prototype.push.apply(this.errors, res.errors);\n  }\n};\n\nfunction stringizer (v,i){\n  return i+': '+v.toString()+'\\n';\n}\nValidatorResult.prototype.toString = function toString(res) {\n  return this.errors.map(stringizer).join('');\n};\n\nObject.defineProperty(ValidatorResult.prototype, \"valid\", { get: function() {\n  return !this.errors.length;\n} });\n\nmodule.exports.ValidatorResultError = ValidatorResultError;\nfunction ValidatorResultError(result) {\n  if(Error.captureStackTrace){\n    Error.captureStackTrace(this, ValidatorResultError);\n  }\n  this.instance = result.instance;\n  this.schema = result.schema;\n  this.options = result.options;\n  this.errors = result.errors;\n}\nValidatorResultError.prototype = new Error();\nValidatorResultError.prototype.constructor = ValidatorResultError;\nValidatorResultError.prototype.name = \"Validation Error\";\n\n/**\n * Describes a problem with a Schema which prevents validation of an instance\n * @name SchemaError\n * @constructor\n */\nvar SchemaError = exports.SchemaError = function SchemaError (msg, schema) {\n  this.message = msg;\n  this.schema = schema;\n  Error.call(this, msg);\n  Error.captureStackTrace(this, SchemaError);\n};\nSchemaError.prototype = Object.create(Error.prototype,\n  {\n    constructor: {value: SchemaError, enumerable: false},\n    name: {value: 'SchemaError', enumerable: false},\n  });\n\nvar SchemaContext = exports.SchemaContext = function SchemaContext (schema, options, path, base, schemas) {\n  this.schema = schema;\n  this.options = options;\n  if(Array.isArray(path)){\n    this.path = path;\n    this.propertyPath = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else{\n    this.propertyPath = path;\n  }\n  this.base = base;\n  this.schemas = schemas;\n};\n\nSchemaContext.prototype.resolve = function resolve (target) {\n  return uri.resolve(this.base, target);\n};\n\nSchemaContext.prototype.makeChild = function makeChild(schema, propertyName){\n  var path = (propertyName===undefined) ? this.path : this.path.concat([propertyName]);\n  var id = schema.$id || schema.id;\n  var base = uri.resolve(this.base, id||'');\n  var ctx = new SchemaContext(schema, this.options, path, base, Object.create(this.schemas));\n  if(id && !ctx.schemas[base]){\n    ctx.schemas[base] = schema;\n  }\n  return ctx;\n};\n\nvar FORMAT_REGEXPS = exports.FORMAT_REGEXPS = {\n  'date-time': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])[tT ](2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])(\\.\\d+)?([zZ]|[+-]([0-5][0-9]):(60|[0-5][0-9]))$/,\n  'date': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])$/,\n  'time': /^(2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])$/,\n\n  'email': /^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/,\n  'ip-address': /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n  'ipv6': /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/,\n\n  // TODO: A more accurate regular expression for \"uri\" goes:\n  // [A-Za-z][+\\-.0-9A-Za-z]*:((/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?)?#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])|/?%[0-9A-Fa-f]{2}|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*(#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?)?\n  'uri': /^[a-zA-Z][a-zA-Z0-9+-.]*:[^\\s]*$/,\n  'uri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/,\n\n  'color': /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n\n  // hostname regex from: http://stackoverflow.com/a/1420225/5628\n  'hostname': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n  'host-name': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n\n  'alpha': /^[a-zA-Z]+$/,\n  'alphanumeric': /^[a-zA-Z0-9]+$/,\n  'utc-millisec': function (input) {\n    return (typeof input === 'string') && parseFloat(input) === parseInt(input, 10) && !isNaN(input);\n  },\n  'regex': function (input) {\n    var result = true;\n    try {\n      new RegExp(input);\n    } catch (e) {\n      result = false;\n    }\n    return result;\n  },\n  'style': /\\s*(.+?):\\s*([^;]+);?/,\n  'phone': /^\\+(?:[0-9] ?){6,14}[0-9]$/,\n};\n\nFORMAT_REGEXPS.regexp = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.pattern = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.ipv4 = FORMAT_REGEXPS['ip-address'];\n\nexports.isFormat = function isFormat (input, format, validator) {\n  if (typeof input === 'string' && FORMAT_REGEXPS[format] !== undefined) {\n    if (FORMAT_REGEXPS[format] instanceof RegExp) {\n      return FORMAT_REGEXPS[format].test(input);\n    }\n    if (typeof FORMAT_REGEXPS[format] === 'function') {\n      return FORMAT_REGEXPS[format](input);\n    }\n  } else if (validator && validator.customFormats &&\n      typeof validator.customFormats[format] === 'function') {\n    return validator.customFormats[format](input);\n  }\n  return true;\n};\n\nvar makeSuffix = exports.makeSuffix = function makeSuffix (key) {\n  key = key.toString();\n  // This function could be capable of outputting valid a ECMAScript string, but the\n  // resulting code for testing which form to use would be tens of thousands of characters long\n  // That means this will use the name form for some illegal forms\n  if (!key.match(/[.\\s\\[\\]]/) && !key.match(/^[\\d]/)) {\n    return '.' + key;\n  }\n  if (key.match(/^\\d+$/)) {\n    return '[' + key + ']';\n  }\n  return '[' + JSON.stringify(key) + ']';\n};\n\nexports.deepCompareStrict = function deepCompareStrict (a, b) {\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false;\n    }\n    if (a.length !== b.length) {\n      return false;\n    }\n    return a.every(function (v, i) {\n      return deepCompareStrict(a[i], b[i]);\n    });\n  }\n  if (typeof a === 'object') {\n    if (!a || !b) {\n      return a === b;\n    }\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    return aKeys.every(function (v) {\n      return deepCompareStrict(a[v], b[v]);\n    });\n  }\n  return a === b;\n};\n\nfunction deepMerger (target, dst, e, i) {\n  if (typeof e === 'object') {\n    dst[i] = deepMerge(target[i], e);\n  } else {\n    if (target.indexOf(e) === -1) {\n      dst.push(e);\n    }\n  }\n}\n\nfunction copyist (src, dst, key) {\n  dst[key] = src[key];\n}\n\nfunction copyistWithDeepMerge (target, src, dst, key) {\n  if (typeof src[key] !== 'object' || !src[key]) {\n    dst[key] = src[key];\n  }\n  else {\n    if (!target[key]) {\n      dst[key] = src[key];\n    } else {\n      dst[key] = deepMerge(target[key], src[key]);\n    }\n  }\n}\n\nfunction deepMerge (target, src) {\n  var array = Array.isArray(src);\n  var dst = array && [] || {};\n\n  if (array) {\n    target = target || [];\n    dst = dst.concat(target);\n    src.forEach(deepMerger.bind(null, target, dst));\n  } else {\n    if (target && typeof target === 'object') {\n      Object.keys(target).forEach(copyist.bind(null, target, dst));\n    }\n    Object.keys(src).forEach(copyistWithDeepMerge.bind(null, target, src, dst));\n  }\n\n  return dst;\n}\n\nmodule.exports.deepMerge = deepMerge;\n\n/**\n * Validates instance against the provided schema\n * Implements URI+JSON Pointer encoding, e.g. \"%7e\"=\"~0\"=>\"~\", \"~1\"=\"%2f\"=>\"/\"\n * @param o\n * @param s The path to walk o along\n * @return any\n */\nexports.objectGetPath = function objectGetPath(o, s) {\n  var parts = s.split('/').slice(1);\n  var k;\n  while (typeof (k=parts.shift()) == 'string') {\n    var n = decodeURIComponent(k.replace(/~0/,'~').replace(/~1/g,'/'));\n    if (!(n in o)) return;\n    o = o[n];\n  }\n  return o;\n};\n\nfunction pathEncoder (v) {\n  return '/'+encodeURIComponent(v).replace(/~/g,'%7E');\n}\n/**\n * Accept an Array of property names and return a JSON Pointer URI fragment\n * @param Array a\n * @return {String}\n */\nexports.encodePath = function encodePointer(a){\n  // ~ must be encoded explicitly because hacks\n  // the slash is encoded by encodeURIComponent\n  return a.map(pathEncoder).join('');\n};\n\n\n/**\n * Calculate the number of decimal places a number uses\n * We need this to get correct results out of multipleOf and divisibleBy\n * when either figure is has decimal places, due to IEEE-754 float issues.\n * @param number\n * @returns {number}\n */\nexports.getDecimalPlaces = function getDecimalPlaces(number) {\n\n  var decimalPlaces = 0;\n  if (isNaN(number)) return decimalPlaces;\n\n  if (typeof number !== 'number') {\n    number = Number(number);\n  }\n\n  var parts = number.toString().split('e');\n  if (parts.length === 2) {\n    if (parts[1][0] !== '-') {\n      return decimalPlaces;\n    } else {\n      decimalPlaces = Number(parts[1].slice(1));\n    }\n  }\n\n  var decimalParts = parts[0].split('.');\n  if (decimalParts.length === 2) {\n    decimalPlaces += decimalParts[1].length;\n  }\n\n  return decimalPlaces;\n};\n\nexports.isSchema = function isSchema(val){\n  return (typeof val === 'object' && val) || (typeof val === 'boolean');\n};\n\n","'use strict';\n\nvar Validator = module.exports.Validator = require('./validator');\n\nmodule.exports.ValidatorResult = require('./helpers').ValidatorResult;\nmodule.exports.ValidatorResultError = require('./helpers').ValidatorResultError;\nmodule.exports.ValidationError = require('./helpers').ValidationError;\nmodule.exports.SchemaError = require('./helpers').SchemaError;\nmodule.exports.SchemaScanResult = require('./scan').SchemaScanResult;\nmodule.exports.scan = require('./scan').scan;\n\nmodule.exports.validate = function (instance, schema, options) {\n  var v = new Validator();\n  return v.validate(instance, schema, options);\n};\n","\"use strict\";\n\nvar urilib = require('url');\nvar helpers = require('./helpers');\n\nmodule.exports.SchemaScanResult = SchemaScanResult;\nfunction SchemaScanResult(found, ref){\n  this.id = found;\n  this.ref = ref;\n}\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param string uri\n * @param object schema\n * @return {Object}\n */\nmodule.exports.scan = function scan(base, schema){\n  function scanSchema(baseuri, schema){\n    if(!schema || typeof schema!='object') return;\n    // Mark all referenced schemas so we can tell later which schemas are referred to, but never defined\n    if(schema.$ref){\n      var resolvedUri = urilib.resolve(baseuri, schema.$ref);\n      ref[resolvedUri] = ref[resolvedUri] ? ref[resolvedUri]+1 : 0;\n      return;\n    }\n    var id = schema.$id || schema.id;\n    var ourBase = id ? urilib.resolve(baseuri, id) : baseuri;\n    if (ourBase) {\n      // If there's no fragment, append an empty one\n      if(ourBase.indexOf('#')<0) ourBase += '#';\n      if(found[ourBase]){\n        if(!helpers.deepCompareStrict(found[ourBase], schema)){\n          throw new Error('Schema <'+ourBase+'> already exists with different definition');\n        }\n        return found[ourBase];\n      }\n      found[ourBase] = schema;\n      // strip trailing fragment\n      if(ourBase[ourBase.length-1]=='#'){\n        found[ourBase.substring(0, ourBase.length-1)] = schema;\n      }\n    }\n    scanArray(ourBase+'/items', (Array.isArray(schema.items)?schema.items:[schema.items]));\n    scanArray(ourBase+'/extends', (Array.isArray(schema.extends)?schema.extends:[schema.extends]));\n    scanSchema(ourBase+'/additionalItems', schema.additionalItems);\n    scanObject(ourBase+'/properties', schema.properties);\n    scanSchema(ourBase+'/additionalProperties', schema.additionalProperties);\n    scanObject(ourBase+'/definitions', schema.definitions);\n    scanObject(ourBase+'/patternProperties', schema.patternProperties);\n    scanObject(ourBase+'/dependencies', schema.dependencies);\n    scanArray(ourBase+'/disallow', schema.disallow);\n    scanArray(ourBase+'/allOf', schema.allOf);\n    scanArray(ourBase+'/anyOf', schema.anyOf);\n    scanArray(ourBase+'/oneOf', schema.oneOf);\n    scanSchema(ourBase+'/not', schema.not);\n  }\n  function scanArray(baseuri, schemas){\n    if(!Array.isArray(schemas)) return;\n    for(var i=0; i<schemas.length; i++){\n      scanSchema(baseuri+'/'+i, schemas[i]);\n    }\n  }\n  function scanObject(baseuri, schemas){\n    if(!schemas || typeof schemas!='object') return;\n    for(var p in schemas){\n      scanSchema(baseuri+'/'+p, schemas[p]);\n    }\n  }\n\n  var found = {};\n  var ref = {};\n  scanSchema(base, schema);\n  return new SchemaScanResult(found, ref);\n};\n","'use strict';\n\nvar urilib = require('url');\n\nvar attribute = require('./attribute');\nvar helpers = require('./helpers');\nvar scanSchema = require('./scan').scan;\nvar ValidatorResult = helpers.ValidatorResult;\nvar ValidatorResultError = helpers.ValidatorResultError;\nvar SchemaError = helpers.SchemaError;\nvar SchemaContext = helpers.SchemaContext;\n//var anonymousBase = 'vnd.jsonschema:///';\nvar anonymousBase = '/';\n\n/**\n * Creates a new Validator object\n * @name Validator\n * @constructor\n */\nvar Validator = function Validator () {\n  // Allow a validator instance to override global custom formats or to have their\n  // own custom formats.\n  this.customFormats = Object.create(Validator.prototype.customFormats);\n  this.schemas = {};\n  this.unresolvedRefs = [];\n\n  // Use Object.create to make this extensible without Validator instances stepping on each other's toes.\n  this.types = Object.create(types);\n  this.attributes = Object.create(attribute.validators);\n};\n\n// Allow formats to be registered globally.\nValidator.prototype.customFormats = {};\n\n// Hint at the presence of a property\nValidator.prototype.schemas = null;\nValidator.prototype.types = null;\nValidator.prototype.attributes = null;\nValidator.prototype.unresolvedRefs = null;\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param schema\n * @param urn\n * @return {Object}\n */\nValidator.prototype.addSchema = function addSchema (schema, base) {\n  var self = this;\n  if (!schema) {\n    return null;\n  }\n  var scan = scanSchema(base||anonymousBase, schema);\n  var ourUri = base || schema.$id || schema.id;\n  for(var uri in scan.id){\n    this.schemas[uri] = scan.id[uri];\n  }\n  for(var uri in scan.ref){\n    // If this schema is already defined, it will be filtered out by the next step\n    this.unresolvedRefs.push(uri);\n  }\n  // Remove newly defined schemas from unresolvedRefs\n  this.unresolvedRefs = this.unresolvedRefs.filter(function(uri){\n    return typeof self.schemas[uri]==='undefined';\n  });\n  return this.schemas[ourUri];\n};\n\nValidator.prototype.addSubSchemaArray = function addSubSchemaArray(baseuri, schemas) {\n  if(!Array.isArray(schemas)) return;\n  for(var i=0; i<schemas.length; i++){\n    this.addSubSchema(baseuri, schemas[i]);\n  }\n};\n\nValidator.prototype.addSubSchemaObject = function addSubSchemaArray(baseuri, schemas) {\n  if(!schemas || typeof schemas!='object') return;\n  for(var p in schemas){\n    this.addSubSchema(baseuri, schemas[p]);\n  }\n};\n\n\n\n/**\n * Sets all the schemas of the Validator instance.\n * @param schemas\n */\nValidator.prototype.setSchemas = function setSchemas (schemas) {\n  this.schemas = schemas;\n};\n\n/**\n * Returns the schema of a certain urn\n * @param urn\n */\nValidator.prototype.getSchema = function getSchema (urn) {\n  return this.schemas[urn];\n};\n\n/**\n * Validates instance against the provided schema\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {Array}\n */\nValidator.prototype.validate = function validate (instance, schema, options, ctx) {\n  if((typeof schema !== 'boolean' && typeof schema !== 'object') || schema === null){\n    throw new SchemaError('Expected `schema` to be an object or boolean');\n  }\n  if (!options) {\n    options = {};\n  }\n  // This section indexes subschemas in the provided schema, so they don't need to be added with Validator#addSchema\n  // This will work so long as the function at uri.resolve() will resolve a relative URI to a relative URI\n  var id = schema.$id || schema.id;\n  var base = urilib.resolve(options.base||anonymousBase, id||'');\n  if(!ctx){\n    ctx = new SchemaContext(schema, options, [], base, Object.create(this.schemas));\n    if (!ctx.schemas[base]) {\n      ctx.schemas[base] = schema;\n    }\n    var found = scanSchema(base, schema);\n    for(var n in found.id){\n      var sch = found.id[n];\n      ctx.schemas[n] = sch;\n    }\n  }\n  if(options.required && instance===undefined){\n    var result = new ValidatorResult(instance, schema, options, ctx);\n    result.addError('is required, but is undefined');\n    return result;\n  }\n  var result = this.validateSchema(instance, schema, options, ctx);\n  if (!result) {\n    throw new Error('Result undefined');\n  }else if(options.throwAll && result.errors.length){\n    throw new ValidatorResultError(result);\n  }\n  return result;\n};\n\n/**\n* @param Object schema\n* @return mixed schema uri or false\n*/\nfunction shouldResolve(schema) {\n  var ref = (typeof schema === 'string') ? schema : schema.$ref;\n  if (typeof ref=='string') return ref;\n  return false;\n}\n\n/**\n * Validates an instance against the schema (the actual work horse)\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @private\n * @return {ValidatorResult}\n */\nValidator.prototype.validateSchema = function validateSchema (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  // Support for the true/false schemas\n  if(typeof schema==='boolean') {\n    if(schema===true){\n      // `true` is always valid\n      schema = {};\n    }else if(schema===false){\n      // `false` is always invalid\n      schema = {type: []};\n    }\n  }else if(!schema){\n    // This might be a string\n    throw new Error(\"schema is undefined\");\n  }\n\n  if (schema['extends']) {\n    if (Array.isArray(schema['extends'])) {\n      var schemaobj = {schema: schema, ctx: ctx};\n      schema['extends'].forEach(this.schemaTraverser.bind(this, schemaobj));\n      schema = schemaobj.schema;\n      schemaobj.schema = null;\n      schemaobj.ctx = null;\n      schemaobj = null;\n    } else {\n      schema = helpers.deepMerge(schema, this.superResolve(schema['extends'], ctx));\n    }\n  }\n\n  // If passed a string argument, load that schema URI\n  var switchSchema = shouldResolve(schema);\n  if (switchSchema) {\n    var resolved = this.resolve(schema, switchSchema, ctx);\n    var subctx = new SchemaContext(resolved.subschema, options, ctx.path, resolved.switchSchema, ctx.schemas);\n    return this.validateSchema(instance, resolved.subschema, options, subctx);\n  }\n\n  var skipAttributes = options && options.skipAttributes || [];\n  // Validate each schema attribute against the instance\n  for (var key in schema) {\n    if (!attribute.ignoreProperties[key] && skipAttributes.indexOf(key) < 0) {\n      var validatorErr = null;\n      var validator = this.attributes[key];\n      if (validator) {\n        validatorErr = validator.call(this, instance, schema, options, ctx);\n      } else if (options.allowUnknownAttributes === false) {\n        // This represents an error with the schema itself, not an invalid instance\n        throw new SchemaError(\"Unsupported attribute: \" + key, schema);\n      }\n      if (validatorErr) {\n        result.importErrors(validatorErr);\n      }\n    }\n  }\n\n  if (typeof options.rewrite == 'function') {\n    var value = options.rewrite.call(this, instance, schema, options, ctx);\n    result.instance = value;\n  }\n  return result;\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.schemaTraverser = function schemaTraverser (schemaobj, s) {\n  schemaobj.schema = helpers.deepMerge(schemaobj.schema, this.superResolve(s, schemaobj.ctx));\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.superResolve = function superResolve (schema, ctx) {\n  var ref = shouldResolve(schema);\n  if(ref) {\n    return this.resolve(schema, ref, ctx).subschema;\n  }\n  return schema;\n};\n\n/**\n* @private\n* @param Object schema\n* @param Object switchSchema\n* @param SchemaContext ctx\n* @return Object resolved schemas {subschema:String, switchSchema: String}\n* @throws SchemaError\n*/\nValidator.prototype.resolve = function resolve (schema, switchSchema, ctx) {\n  switchSchema = ctx.resolve(switchSchema);\n  // First see if the schema exists under the provided URI\n  if (ctx.schemas[switchSchema]) {\n    return {subschema: ctx.schemas[switchSchema], switchSchema: switchSchema};\n  }\n  // Else try walking the property pointer\n  var parsed = urilib.parse(switchSchema);\n  var fragment = parsed && parsed.hash;\n  var document = fragment && fragment.length && switchSchema.substr(0, switchSchema.length - fragment.length);\n  if (!document || !ctx.schemas[document]) {\n    throw new SchemaError(\"no such schema <\" + switchSchema + \">\", schema);\n  }\n  var subschema = helpers.objectGetPath(ctx.schemas[document], fragment.substr(1));\n  if(subschema===undefined){\n    throw new SchemaError(\"no such schema \" + fragment + \" located in <\" + document + \">\", schema);\n  }\n  return {subschema: subschema, switchSchema: switchSchema};\n};\n\n/**\n * Tests whether the instance if of a certain type.\n * @private\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @param type\n * @return {boolean}\n */\nValidator.prototype.testType = function validateType (instance, schema, options, ctx, type) {\n  if(type===undefined){\n    return;\n  }else if(type===null){\n    throw new SchemaError('Unexpected null in \"type\" keyword');\n  }\n  if (typeof this.types[type] == 'function') {\n    return this.types[type].call(this, instance);\n  }\n  if (type && typeof type == 'object') {\n    var res = this.validateSchema(instance, type, options, ctx);\n    return res === undefined || !(res && res.errors.length);\n  }\n  // Undefined or properties not on the list are acceptable, same as not being defined\n  return true;\n};\n\nvar types = Validator.prototype.types = {};\ntypes.string = function testString (instance) {\n  return typeof instance == 'string';\n};\ntypes.number = function testNumber (instance) {\n  // isFinite returns false for NaN, Infinity, and -Infinity\n  return typeof instance == 'number' && isFinite(instance);\n};\ntypes.integer = function testInteger (instance) {\n  return (typeof instance == 'number') && instance % 1 === 0;\n};\ntypes.boolean = function testBoolean (instance) {\n  return typeof instance == 'boolean';\n};\ntypes.array = function testArray (instance) {\n  return Array.isArray(instance);\n};\ntypes['null'] = function testNull (instance) {\n  return instance === null;\n};\ntypes.date = function testDate (instance) {\n  return instance instanceof Date;\n};\ntypes.any = function testAny (instance) {\n  return true;\n};\ntypes.object = function testObject (instance) {\n  // TODO: fix this - see #15\n  return instance && (typeof instance === 'object') && !(Array.isArray(instance)) && !(instance instanceof Date);\n};\n\nmodule.exports = Validator;\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tconst parts = string.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tconst labels = string.split('.');\n\tconst encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = array => String.fromCodePoint(...array);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tlet oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tlet inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tlet basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue == n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","\r\n/* spellchecker: disable */\r\n\r\nimport { assert, log, logIf, LogLevel } from './auxiliaries';\r\nimport { GLsizei2 } from './tuples';\r\n\r\nimport { ChangeLookup } from './changelookup';\r\nimport { Context } from './context';\r\nimport { Framebuffer } from './framebuffer';\r\nimport { Initializable } from './initializable';\r\nimport { NdcFillingTriangle } from './ndcfillingtriangle';\r\nimport { Program } from './program';\r\nimport { Shader } from './shader';\r\nimport { Texture2D } from './texture2d';\r\nimport { Wizard } from './wizard';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * This pass accumulates the color attachment 0 of a framebuffer, e.g., the result of an intermediate frame, into an\r\n * accumulation buffer. For accumulation the frame number is used to derive the accumulation weight. For rendering to\r\n * texture, a textured ndc-filling triangle is used.\r\n *\r\n * The accumulation pass can be used as follows:\r\n * ```\r\n * this.accumulate.initialize();\r\n * this.accumulate.texture = this.intermediateFBO.texture(gl2facade.COLOR_ATTACHMENT0);\r\n * this.accumulate.update();\r\n * this.accumulate.frame(frameNumber);\r\n * ```\r\n */\r\nexport class AccumulatePass extends Initializable {\r\n\r\n    /**\r\n     * Read-only access to the objects context, used to get context information and WebGL API access.\r\n     */\r\n    protected _context: Context;\r\n\r\n    /**\r\n     * Alterable auxiliary object for tracking changes on this object's input and lazy updates.\r\n     */\r\n    protected readonly _altered = Object.assign(new ChangeLookup(), {\r\n        any: false, texture: false, precision: false, passThrough: false,\r\n    });\r\n\r\n\r\n    /** @see {@link texture} */\r\n    protected _texture: Texture2D;\r\n\r\n    /** @see {@link precision} */\r\n    protected _precision: Wizard.Precision = Wizard.Precision.half;\r\n\r\n    /** @see {@link passThrough} */\r\n    protected _passThrough: boolean;\r\n\r\n    /**\r\n     * Two rgba-framebuffers used for accumulation (buffer ping-ponging is used for alternating the buffers for read\r\n     * and write access due to a limitation in WebGL).\r\n     */\r\n    protected _accumulationFBOs: [Framebuffer, Framebuffer];\r\n    protected _accumulationTextures: [Texture2D, Texture2D];\r\n\r\n\r\n    /**\r\n     * Stores the index of the last buffer written to.\r\n     */\r\n    protected _write: GLuint = 0;\r\n\r\n    /**\r\n     * Geometry used to draw on. This is not provided by default to allow for geometry sharing. If no triangle is given,\r\n     * the ndc triangle will be created and managed internally.\r\n     */\r\n    protected _ndcTriangle: NdcFillingTriangle;\r\n\r\n    /**\r\n     * Tracks ownership of the ndc-filling triangle.\r\n     */\r\n    protected _ndcTriangleShared = false;\r\n\r\n    protected _program: Program;\r\n    protected _uWeight: WebGLUniformLocation;\r\n\r\n\r\n    constructor(context: Context) {\r\n        super();\r\n        this._context = context;\r\n    }\r\n\r\n\r\n    /**\r\n     * Specializes this pass's initialization. This pass requires an ndc-filling triangle, a single accumulation\r\n     * program, and two accumulation framebuffers for ping pong (simultaneous read and write is currently not allowed\r\n     * by webgl). All attribute and dynamic uniform locations are cached.\r\n     * @param ndcTriangle - If specified, assumed to be used as shared geometry. If none is specified, a ndc-filling\r\n     * triangle will be created internally.\r\n     */\r\n    @Initializable.initialize()\r\n    initialize(ndcTriangle?: NdcFillingTriangle): boolean {\r\n        const gl = this._context.gl;\r\n\r\n        this._accumulationFBOs = [\r\n            new Framebuffer(this._context, 'AccumPingFBO'),\r\n            new Framebuffer(this._context, 'AccumPongFBO')];\r\n\r\n        this._accumulationTextures = [\r\n            new Texture2D(this._context, 'AccumPingTexture'),\r\n            new Texture2D(this._context, 'AccumPongTexture')];\r\n\r\n        if (ndcTriangle === undefined) {\r\n            this._ndcTriangle = new NdcFillingTriangle(this._context, 'NdcFillingTriangle-Accumulate');\r\n        } else {\r\n            this._ndcTriangle = ndcTriangle;\r\n            this._ndcTriangleShared = true;\r\n        }\r\n\r\n        /* Configure program-based accumulate. */\r\n\r\n        const vert = new Shader(this._context, gl.VERTEX_SHADER, 'ndcvertices.vert (accumulate)');\r\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n        vert.initialize(require('./shaders/ndcvertices.vert'));\r\n        const frag = new Shader(this._context, gl.FRAGMENT_SHADER, 'accumulate.frag');\r\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n        frag.initialize(require('./shaders/accumulate.frag'));\r\n\r\n        this._program = new Program(this._context, 'AccumulateProgram');\r\n        this._program.initialize([vert, frag], false);\r\n\r\n        if (!this._ndcTriangle.initialized) {\r\n            this._ndcTriangle.initialize();\r\n        }\r\n        this._program.attribute('a_vertex', this._ndcTriangle.vertexLocation);\r\n        this._program.link();\r\n\r\n        this._uWeight = this._program.uniform('u_weight');\r\n        this._program.bind();\r\n        gl.uniform1f(this._uWeight, 0.0);\r\n        gl.uniform1i(this._program.uniform('u_accumulationTexture'), 0);\r\n        gl.uniform1i(this._program.uniform('u_currentFrameTexture'), 1);\r\n        this._program.unbind();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Specializes this pass's uninitialization. Program and geometry resources are released (if allocated). Cached\r\n     * uniform and attribute locations are invalidated.\r\n     */\r\n    @Initializable.uninitialize()\r\n    uninitialize(): void {\r\n        if (!this._ndcTriangleShared && this._ndcTriangle.initialized) {\r\n            this._ndcTriangle.uninitialize();\r\n        }\r\n        this._program.uninitialize();\r\n\r\n        this._accumulationFBOs[0].uninitialize();\r\n        this._accumulationFBOs[1].uninitialize();\r\n        this._accumulationTextures[0].uninitialize();\r\n        this._accumulationTextures[1].uninitialize();\r\n\r\n        this._write = 0;\r\n    }\r\n\r\n    /**\r\n     * Initialize accumulation textures and FBOs (if not initialized yet). Then verifies if the texture's size has\r\n     * changed, and if so, resizes the accumulation buffers.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    update(): void {\r\n        if (!this._texture || !this._texture.valid) {\r\n            log(LogLevel.Warning, `valid texture for accumulation update expected, given ${this._texture}`);\r\n            return;\r\n        }\r\n\r\n        if (this._passThrough) {\r\n            return;\r\n        }\r\n\r\n        const sizeAltered = this._altered.texture || this._accumulationTextures[0].width !== this._texture.width ||\r\n            this._accumulationTextures[0].height !== this._texture.height;\r\n        if (!this._altered.any && !sizeAltered) {\r\n            assert(this._accumulationFBOs[0].valid && this._accumulationFBOs[1].valid,\r\n                `valid accumulation framebuffers expected`);\r\n            return;\r\n        }\r\n\r\n        const gl = this._context.gl;\r\n        const gl2facade = this._context.gl2facade;\r\n\r\n        /* Create and initialize accumulation texture and FBOs. */\r\n\r\n        const textureSize = this._texture.size;\r\n\r\n        if (!this._accumulationTextures[0].initialized) {\r\n            const internalFormat = Wizard.queryInternalTextureFormat(this._context, gl.RGBA, this._precision);\r\n            this._accumulationTextures[0].initialize(textureSize[0], textureSize[1],\r\n                internalFormat[0], gl.RGBA, internalFormat[1]);\r\n            this._accumulationTextures[1].initialize(textureSize[0], textureSize[1],\r\n                internalFormat[0], gl.RGBA, internalFormat[1]);\r\n\r\n        } else {\r\n            if (this._altered.texture || sizeAltered) {\r\n                this._accumulationTextures[0].resize(this._texture.width, this._texture.height);\r\n                this._accumulationTextures[1].resize(this._texture.width, this._texture.height);\r\n            }\r\n            if (this._altered.precision) {\r\n                const internalFormat = Wizard.queryInternalTextureFormat(this._context, gl.RGBA, this._precision);\r\n                this._accumulationTextures[0].reformat(internalFormat[0], gl.RGBA, internalFormat[1]);\r\n                this._accumulationTextures[1].reformat(internalFormat[0], gl.RGBA, internalFormat[1]);\r\n            }\r\n        }\r\n\r\n        if (!this._accumulationFBOs[0].initialized) {\r\n            this._accumulationFBOs[0].initialize([[gl2facade.COLOR_ATTACHMENT0, this._accumulationTextures[0]]]);\r\n            this._accumulationFBOs[1].initialize([[gl2facade.COLOR_ATTACHMENT0, this._accumulationTextures[1]]]);\r\n        }\r\n\r\n        assert(this._accumulationFBOs[0].valid && this._accumulationFBOs[1].valid,\r\n            `valid accumulation framebuffers expected`);\r\n\r\n        this._altered.reset();\r\n    }\r\n\r\n    /**\r\n     * An accumulation frame binds the two accumulation textures (ping-pong framebuffer), one for read, the other for\r\n     * write/accumulating into. A screen-aligned triangle is used to fill the viewport and mix the input texture with\r\n     * the weight of 1 / (frameNumber + 1) with the previous accumulation result. If no texture is specified, pass\r\n     * through is used.\r\n     * @param frameNumber - Frame number used to select the current read and write framebuffer as well as frame weight.\r\n     * @param viewport - If specified, the viewport for accumulation will be set to the given width and height. If not,\r\n     * the currently set viewport is used.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    frame(frameNumber: number, viewport?: GLsizei2): void {\r\n        assert(this._accumulationFBOs[0].valid && this._accumulationFBOs[1].valid,\r\n            `valid framebuffer objects for accumulation expected (initialize or update was probably not called)`);\r\n\r\n        if (this._passThrough || this._texture === undefined) {\r\n            return;\r\n        }\r\n        logIf(!this._texture || !this._texture.valid, LogLevel.Warning,\r\n            `valid texture for accumulation frame expected, given ${this._texture}`);\r\n\r\n        const gl = this._context.gl;\r\n\r\n        if (viewport !== undefined) {\r\n            gl.viewport(0, 0, viewport[0], viewport[1]);\r\n        }\r\n\r\n        const readIndex = frameNumber % 2;\r\n        const writeIndex = this._write = 1 - readIndex;\r\n\r\n        const accumTexture = this._accumulationTextures[readIndex];\r\n        const frameTexture = this._texture;\r\n\r\n        accumTexture.bind(gl.TEXTURE0);\r\n        frameTexture.bind(gl.TEXTURE1);\r\n\r\n        this._program.bind();\r\n        gl.uniform1f(this._uWeight, 1.0 / (frameNumber + 1));\r\n\r\n        this._accumulationFBOs[writeIndex].bind(gl.DRAW_FRAMEBUFFER); // bind draw only does not work for IE and EDGE\r\n        this._ndcTriangle.bind();\r\n        this._ndcTriangle.draw();\r\n        this._ndcTriangle.unbind();\r\n        this._accumulationFBOs[writeIndex].unbind(gl.DRAW_FRAMEBUFFER);\r\n\r\n        /** Every pass is expected to bind its own program when drawing, thus, unbinding is not necessary. */\r\n        // this.program.unbind();\r\n\r\n        accumTexture.unbind(gl.TEXTURE0);\r\n        frameTexture.unbind(gl.TEXTURE1);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets the texture that is to be accumulated. The ping and pong render textures will be resized on next frame\r\n     * automatically if the texture size changed.\r\n     * @param texture - Framebuffer that is to be accumulated.\r\n     */\r\n    set texture(texture: Texture2D) {\r\n        this.assertInitialized();\r\n        if (this._texture !== texture) {\r\n            this._texture = texture;\r\n            this._altered.alter('texture');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Allows to specify the accumulation precision.\r\n     */\r\n    set precision(precision: Wizard.Precision) {\r\n        this.assertInitialized();\r\n        if (this._precision !== precision) {\r\n            this._precision = precision;\r\n            this._altered.alter('precision');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Allows to skip accumulation. If pass through is enabled, nothing will be rendered on frame at all and the\r\n     * ping pong render textures will be reduced to a minimum size of [1, 1] until pass through is disabled.\r\n     */\r\n    set passThrough(passThrough: boolean) {\r\n        this.assertInitialized();\r\n\r\n        if (this._passThrough === passThrough) {\r\n            return;\r\n        }\r\n\r\n        if (this._passThrough && this._accumulationTextures[0].initialized) {\r\n            this._accumulationTextures[0].uninitialize();\r\n            this._accumulationTextures[1].uninitialize();\r\n        }\r\n        if (this._passThrough && this._accumulationFBOs[0].initialized) {\r\n            this._accumulationFBOs[0].uninitialize();\r\n            this._accumulationFBOs[1].uninitialize();\r\n        }\r\n\r\n        this._passThrough = passThrough;\r\n        this._altered.alter('passThrough');\r\n    }\r\n\r\n    /**\r\n     * Returns the framebuffer last accumulated into. Note: the accumulation buffer is represented by two framebuffers\r\n     * swapped for read and write every frame. The accumulation result is in the first color attachment.\r\n     * @returns - The rgba framebuffer last accumulated into.\r\n     */\r\n    get framebuffer(): Framebuffer | undefined {\r\n        return this._passThrough ? undefined : this._accumulationFBOs[this._write];\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { Observable, ReplaySubject } from 'rxjs';\r\n\r\nimport { assert, prettyPrintBytes } from './auxiliaries';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * This register enables monitoring of memory (de)allocations and is intended for use in WebGL context for internal GPU\r\n * memory allocation tracking. For it, a unique identifier for registration has to be created:\r\n * ```\r\n * let gpuAllocReg = this.context.gpuAllocationRegister;\r\n * const identifier = gpuAllocReg.createUniqueIdentifier('gpu-object');\r\n * ```\r\n *\r\n * Then allocations, deallocations, and reallocations can be registered:\r\n * ```\r\n * gpuAllocReg.allocate(identifier, this.sizeofRGBAColorAttachment());\r\n * gpuAllocReg.allocate(identifier, this.sizeofDepthStencilAttachment());\r\n * // ... reallocation\r\n * gpuAllocReg.reallocate(identifier,\r\n *     this.sizeofRGBAColorAttachment() + this.sizeofDepthStencilAttachment());\r\n * // ... uninitialize\r\n * gpuAllocReg.reallocate(identifier, 0);\r\n * ```\r\n *\r\n * Requesting the allocated memory can be done as follows:\r\n * ```\r\n * // memory allocated by identifier:\r\n * console.log(mfCanvas.context.gpuAllocationRegister.toString());\r\n * //> IntermediateFBO: 10.582MiB, AccumulationPingFBO: 21.163MiB, AccumulationPongFBO: 21.163MiB\r\n *\r\n * // memory allocated over all identifiers:\r\n * console.log(mfCanvas.context.gpuAllocationRegister.bytesToString());\r\n * //> 52.908MiB\r\n * ```\r\n */\r\nexport class AllocationRegister {\r\n\r\n    /**\r\n     * Map that provides access to the accumulated memory allocations for all registered identifiers.\r\n     */\r\n    protected _bytesByIdentifier = new Map<string, GLsizei>();\r\n\r\n    /** @see {@link bytes} */\r\n    protected _bytes: GLsizei = 0;\r\n    protected _bytesSubject = new ReplaySubject<[GLsizei, string]>(1);\r\n\r\n    /**\r\n     * Utility for communicating this._bytes changes to its associated subject.\r\n     */\r\n    protected bytesNext(): void {\r\n        this._bytesSubject.next([this._bytes, this.bytesToString()]);\r\n    }\r\n\r\n\r\n    /**\r\n     * Asserts existence of an identifier.\r\n     * @param identifier - Identifier to assert the existence of.\r\n     */\r\n    protected assertIdentifier(identifier: string): void {\r\n        assert(this._bytesByIdentifier.has(identifier), `allocation identifier unknown`);\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates a unique identifier based on a given identifier: if the identifier is already unique it is returned as\r\n     * is. If not, an enumerated identifier is returned, e.g., 'TempFBO-2' when 'TempFBO' already exists. This also\r\n     * enables tracking for the identifier, thus, it should always be called before tracking/monitoring.\r\n     * @param identifier - Requested identifier for allocation registration.\r\n     * @returns - Unique identifier (might differ from given identifier) for which allocation registration is enabled.\r\n     */\r\n    createUniqueIdentifier(identifier: string): string {\r\n        let uniqueIdentifier: string = identifier;\r\n        let unificationSuffix = 2;\r\n\r\n        while (this._bytesByIdentifier.has(uniqueIdentifier)) {\r\n            uniqueIdentifier = `${identifier}-${unificationSuffix}`;\r\n            ++unificationSuffix;\r\n        }\r\n\r\n        this._bytesByIdentifier.set(uniqueIdentifier, 0);\r\n        return uniqueIdentifier;\r\n    }\r\n\r\n    /**\r\n     * Removes a previously created unique identifier from the allocation registry.\r\n     * @param identifier - Identifier that is to be deleted from allocation registration.\r\n     */\r\n    deleteUniqueIdentifier(identifier: string): void {\r\n        assert(this._bytesByIdentifier.has(identifier), `identifier expected to be known for allocation registration`);\r\n        this._bytesByIdentifier.delete(identifier);\r\n    }\r\n\r\n    /**\r\n     * Registers allocated bytes for a given identifier.\r\n     * @param identifier - Identifier to register the allocated bytes for.\r\n     * @param allocate - Allocated bytes to register for identifier.\r\n     */\r\n    allocate(identifier: string, allocate: number): void {\r\n        this.assertIdentifier(identifier);\r\n\r\n        assert(allocate >= 0, `positive number of bytes expected for allocation, given ${allocate}`);\r\n\r\n        /* Nothing to do if no bytes are allocated */\r\n        if (allocate === 0) {\r\n            return;\r\n        }\r\n\r\n        const bytes = (this._bytesByIdentifier.get(identifier)!) + allocate;\r\n        this._bytesByIdentifier.set(identifier, bytes);\r\n\r\n        this._bytes = this._bytes + allocate; // allocate total\r\n        this.bytesNext();\r\n    }\r\n\r\n    /**\r\n     * Registers deallocated bytes for a given identifier.\r\n     * @param identifier - Identifier to register the deallocated bytes for.\r\n     * @param allocate - Number of deallocated bytes to register for identifier.\r\n     */\r\n    deallocate(identifier: string, deallocate: number): void {\r\n        this.assertIdentifier(identifier);\r\n\r\n        const bytes = this._bytesByIdentifier.get(identifier)!;\r\n        assert(deallocate >= 0, `positive number of bytes expected for deallocation, given ${deallocate}`);\r\n        assert(deallocate <= bytes, `deallocation cannot exceed previous allocations of ${bytes}, given ${deallocate}`);\r\n\r\n        /* Nothing to do if no bytes are deallocated */\r\n        if (deallocate === 0) {\r\n            return;\r\n        }\r\n\r\n        this._bytesByIdentifier.set(identifier, bytes - deallocate);\r\n\r\n        this._bytes = this._bytes - deallocate; // deallocate total\r\n        this.bytesNext();\r\n    }\r\n\r\n    /**\r\n     * Resets the previously allocated bytes for the given identifier and registers the given allocated bytes instead.\r\n     * @param identifier - Identifier to register the reallocated bytes for.\r\n     * @param allocate - Number of reallocated bytes to register for identifier.\r\n     */\r\n    reallocate(identifier: string, reallocate: number): void {\r\n        this.assertIdentifier(identifier);\r\n        assert(reallocate >= 0, `positive number of bytes expected for reallocation, given ${reallocate}`);\r\n\r\n        const previousBytes = this._bytesByIdentifier.get(identifier)!;\r\n\r\n        /* Nothing to do if same size should be reallocated */\r\n        if (previousBytes === reallocate) {\r\n            return;\r\n        }\r\n\r\n        this._bytes = this._bytes - previousBytes; // deallocate total\r\n        this._bytesByIdentifier.set(identifier, reallocate);\r\n\r\n        this._bytes = this._bytes + reallocate; // allocate total\r\n        this.bytesNext();\r\n    }\r\n\r\n    /**\r\n     * Provides access to the allocated bytes for an identifier as well as the overall allocated bytes (when identifier\r\n     * is undefined, default). If the identifier is undefined, the overall allocated number of bytes is returned.\r\n     * @param identifier - Identifier to return the allocated bytes for.\r\n     * @param allocate - Number of allocated bytes registered for identifier.\r\n     */\r\n    allocated(identifier?: string): number {\r\n        if (identifier === undefined) {\r\n            return this._bytes;\r\n        }\r\n        this.assertIdentifier(identifier);\r\n        return this._bytesByIdentifier.get(identifier)!;\r\n    }\r\n\r\n    /**\r\n     * Provides a pretty printed string of the allocated bytes of this register and their identifier. The output for a\r\n     * register of three objects could be as follows:\r\n     * ```\r\n     * IntermediateFBO: 10.582MiB, AccumulationPingFBO: 21.163MiB, AccumulationPongFBO: 21.163MiB\r\n     * ```\r\n     * @returns - Pretty printed string of all memory allocations.\r\n     */\r\n    toString(): string {\r\n        const output = new Array<string>();\r\n        this._bytesByIdentifier.forEach((bytes: number, identifier: string) => {\r\n            output.push(`${identifier}: ${prettyPrintBytes(bytes)}`);\r\n        });\r\n        return output.join(', ');\r\n    }\r\n\r\n    /**\r\n     * Provides a pretty printed string of the overall number of bytes or a specific identifier. If the identifier is\r\n     * undefined, the overall number of bytes is pretty printed.\r\n     * @param identifier - Identifier to pretty print the bytes for.\r\n     * @returns - Pretty printed string of the requested number of bytes.\r\n     */\r\n    bytesToString(identifier?: string): string {\r\n        return prettyPrintBytes(this.allocated(identifier));\r\n    }\r\n\r\n\r\n    /**\r\n     * Cache for the overall number of allocated bytes (over all identifiers). This should always be the sum of the\r\n     * bytes allocated over each identifier, which can be validated using validate().\r\n     *\r\n     * This property can be observed, e.g., `allocationRegister.bytesObservable.subscribe()`.\r\n     */\r\n    get bytes(): GLsizei {\r\n        return this._bytes;\r\n    }\r\n\r\n    /**\r\n     * Observable that can be used to subscribe to bytes value changes. Yields a 2-tuple of overall allocated bytes as\r\n     * number and pretty printed string.\r\n     */\r\n    get bytes$(): Observable<[GLsizei, string]> {\r\n        return this._bytesSubject.asObservable();\r\n    }\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { RandomSquareKernel } from './randomsquarekernel';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * An anti-aliasing kernel which provides NDC offsets for anti-aliasing, e.g., when using multi-frame sampling.\r\n */\r\nexport class AntiAliasingKernel extends RandomSquareKernel {\r\n\r\n    /**\r\n     * AntiAliasingKernel is fixed to one-dimension (x-axis) and 2-components per sample.\r\n     * @param width - Width of the kernel along its x-axis.\r\n     */\r\n    constructor(width: GLsizei) {\r\n        super(width);\r\n    }\r\n\r\n    /**\r\n     * Invokes regeneration of all values. If width is either 8 or 64 pre-built kernels will be loaded (golden set). In\r\n     * any other case, a random square kernel will be created.\r\n     */\r\n    protected generate(): void {\r\n        switch (this._width) {\r\n            case 8:\r\n                // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n                this.fromJSON(require('./data/goldenset08.json'));\r\n                break;\r\n\r\n            case 64:\r\n                // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n                this.fromJSON(require('./data/goldenset64.json'));\r\n                break;\r\n\r\n            case 128:\r\n                // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n                this.fromJSON(require('./data/goldenset128.json'));\r\n                break;\r\n\r\n            default:\r\n                super.generate();\r\n        }\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { clamp } from './gl-matrix-extensions';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * If true, assertions immediately return on invocation (variable can be set via webpack define plugin).\r\n */\r\ndeclare let DISABLE_ASSERTIONS: boolean;\r\n\r\n/**\r\n * If defined, logs of equal or higher verbosity level are skipped (variable can be set via webpack define plugin).\r\n */\r\ndeclare let LOG_VERBOSITY_THRESHOLD: number; // -1 disables all logs\r\n\r\n\r\n/** Namespace that comprises various utils (also cleans up documentation). */\r\nnamespace auxiliaries {\r\n\r\n    /* istanbul ignore next line - LOG_VERBOSITY_THRESHOLD has to be defined by the build environment*/\r\n    let logVerbosityThreshold = typeof LOG_VERBOSITY_THRESHOLD !== 'undefined' ? LOG_VERBOSITY_THRESHOLD : 3;\r\n\r\n    /**\r\n     * Allows to specify the log verbosity. The default verbosity depends on the bundle type, e.g., a production bundle\r\n     * might use a verbosity of 1, a local development bundle might favor a verbosity of 2. Even though verbosity levels\r\n     * can be used arbitrarily, a verbosity of 0 is intended for user info only, 1 for developers, and 2 for developers\r\n     * of this module. However, this semantic breaks when reusing this logging mechanism in other modules as well...\r\n     * @param verbosity - Log level threshold, -1:disabled, 0:user, 1:developer, and 2:module developer.\r\n     * @returns - The current log verbosity.\r\n     */\r\n    export function logVerbosity(verbosity?: number): number {\r\n        if (verbosity !== undefined) {\r\n            logVerbosityThreshold = Math.max(-1, verbosity);\r\n        }\r\n        return logVerbosityThreshold;\r\n    }\r\n\r\n    /**\r\n     * Log verbosity levels.\r\n     */\r\n    export enum LogLevel { Debug = 3, Info = 2, Warning = 1, Error = 0 }\r\n\r\n    /**\r\n     * Evaluates the provided statement and throws an evaluation error if false.\r\n     * ```\r\n     * assert(foo <= threshold, `value of foo ${foo} exceeds threshold of ${threshold}`);\r\n     * ```\r\n     * @param statement - Result of an statement expected to be true.\r\n     * @param message - Message to be passed to the error (if thrown).\r\n     */\r\n    const assertImpl = (statement: boolean, message: string): void => {\r\n        if (statement) {\r\n            return;\r\n        }\r\n        /* The parameters are intentionally not forwarded to console.assert since it does not interrupt execution. */\r\n        throw new EvalError(message);\r\n    };\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\r\n    const assertEmpty = (statement: boolean, message: string): void => { };\r\n\r\n    export let assert = assertImpl;\r\n    /* istanbul ignore next line - DISABLE_ASSERTIONS has to be defined by the build environment*/\r\n    if (typeof DISABLE_ASSERTIONS !== 'undefined' && DISABLE_ASSERTIONS) {\r\n        assert = assertEmpty;\r\n    }\r\n\r\n    /**\r\n     * Allows to specify whether or not assertions should be enabled or disabled/ignored.\r\n     * @param enable - If true, assertions will be evaluated and might throw errors.\r\n     * @returns whether assertions are enabled\r\n     */\r\n    export function assertions(enable?: boolean): boolean {\r\n        if (enable !== undefined) {\r\n            assert = enable ? assertImpl : assertEmpty;\r\n        }\r\n        return assert !== assertEmpty;\r\n    }\r\n\r\n    /**\r\n     * Writes a warning to the console when the evaluated statement is false.\r\n     * ```\r\n     * log(,`scale changed to ${scale}, given ${this._scale}`);\r\n     * ```\r\n     * @param statement - Result of an statement expected to be true.\r\n     * @param verbosity - Verbosity of log level: user, developer, or module developer.\r\n     * @param message - Message to be passed to the log (if verbosity high enough).\r\n     */\r\n    export function log(verbosity: LogLevel, ...message: Array<any>): void {\r\n        if (verbosity > logVerbosityThreshold) {\r\n            return;\r\n        }\r\n        console.log(`[${verbosity}]`, ...message);\r\n    }\r\n\r\n    /**\r\n     * Writes a lo message to the console when the evaluated statement is false.\r\n     * ```\r\n     * logIf(!vec2.equals(this._scale, scale), LogLevel.Info, `scale changed to ${scale}, given ${this._scale}`);\r\n     * ```\r\n     * @param statement - Result of an statement expected to be true.\r\n     * @param verbosity - Verbosity of log level: debug, info, warning, or error.\r\n     * @param message - Message to be passed to the log (if thrown and verbosity high enough).\r\n     */\r\n    export function logIf(statement: boolean, verbosity: LogLevel, ...message: Array<any>): void {\r\n        if (!statement) {\r\n            return;\r\n        }\r\n        log(verbosity, ...message);\r\n    }\r\n\r\n    /**\r\n     * Starts performance measure using the performance API. This call initiates a performance mark and should be\r\n     * followed by a `logPerformanceStop` call later on. Furthermore, the measurement can be tracked using, e.g., the\r\n     * Chrome built-in performance profiler. Example:\r\n     * ```\r\n     * gloperate.auxiliaries.logPerformanceStart('initialization');\r\n     * ...\r\n     * gloperate.auxiliaries.logPerformanceStop('initialization');\r\n     * ```\r\n     * The example above should output something like: `[3] initialization | 5.635s`.\r\n     * @param mark - Name for the performance measure and base name for the start mark (`<mark>-start`).\r\n     */\r\n    export function logPerformanceStart(mark: string): void {\r\n        const start = `${mark}-start`;\r\n        assert(performance.getEntriesByName(mark).length === 0,\r\n            `expected mark identifier to not already exists, given ${mark}`);\r\n        assert(performance.getEntriesByName(start).length === 0,\r\n            `expected mark identifier to not already exists, given ${start}`);\r\n\r\n        performance.mark(start);\r\n    }\r\n\r\n    /**\r\n     * Invokes `logPerformanceStart` iff the statement resolves successfully.\r\n     * @param statement - Result of an statement expected to be true in order to invoke logPerformanceStart.\r\n     * @param mark - Name for the performance measure mark ... @see {@link logPerformanceStart}.\r\n     */\r\n    export function logPerformanceStartIf(statement: boolean, mark: string): void {\r\n        if (!statement) {\r\n            return;\r\n        }\r\n        logPerformanceStart(mark);\r\n    }\r\n\r\n    /**\r\n     * This creates a second, end mark for the given mark name, then creates a performance measure between the start\r\n     * and end mark (`<mark>-start` and `<mark>-end`), resolves the duration for logging and, finally, removes/cleans\r\n     * both marks and the measure. The duration is pretty printed ranging from nanoseconds to seconds. Example:\r\n     * ```\r\n     * gloperate.auxiliaries.logPerformanceStart('initialization');\r\n     * ...\r\n     * gloperate.auxiliaries.logPerformanceStop('initialization', '#items processed: ' + items.length , 48);\r\n     * ```\r\n     * The example above should output something like: `[3] initialization           #items processed: 4096 | 7.172ms`.\r\n     * @param mark - Name for the performance measure and base name for the end mark (`<mark>-end`).\r\n     * @param message - Optional message to provide to the debug-log output.\r\n     * @param measureIndent - Optional indentation of the measure (useful if multiple measurements shall be aligned).\r\n     */\r\n    export function logPerformanceStop(mark: string, message: string | undefined, measureIndent: number = 0): void {\r\n        const start = `${mark}-start`;\r\n        const end = `${mark}-end`;\r\n        assert(performance.getEntriesByName(mark).length === 0,\r\n            `expected mark identifier to not already exists, given ${mark}`);\r\n        assert(performance.getEntriesByName(end).length === 0,\r\n            `expected mark identifier to not already exists, given ${end}`);\r\n\r\n        performance.mark(end);\r\n        performance.measure(mark, start, end);\r\n\r\n        const measures = performance.getEntriesByName(mark);\r\n        const measure = measures[0];\r\n\r\n        performance.clearMarks(start);\r\n        performance.clearMarks(end);\r\n        performance.clearMeasures(mark);\r\n\r\n        const minIndent = message === undefined || message!.length === 0 ? 0 : 2;\r\n        const indent = Math.max(minIndent, measureIndent - mark.length - (message ? message!.length : 0) - 1);\r\n\r\n        const prettyMeasure = prettyPrintMilliseconds(measure.duration);\r\n        log(LogLevel.Debug, `${mark}${' '.repeat(indent)}${message ? message : ''} | ${prettyMeasure}`);\r\n    }\r\n\r\n    /**\r\n     * Invokes `logPerformanceStop` under the condition that the statement is true.\r\n     * @param statement - Result of an expression expected to be true in order to invoke logPerformanceStop.\r\n     * @param mark - Name for the performance measure mark ... @see {@link logPerformanceStart}.\r\n     * @param message - Optional message to provide to the debug-log output ... @see {@link logPerformanceStart}.\r\n     * @param measureIndent - Optional indentation of the measure ... @see {@link logPerformanceStart}.\r\n     */\r\n    export function logPerformanceStopIf(statement: boolean,\r\n        mark: string, message: string | undefined, measureIndent: number = 0): void {\r\n        if (!statement) {\r\n            return;\r\n        }\r\n        logPerformanceStop(mark, message, measureIndent);\r\n    }\r\n\r\n\r\n    /**\r\n     * Generates a random value within a given range [min,max].\r\n     * @param min - Minimum random value possible.\r\n     * @param max - Maximum random value possible.\r\n     * @returns - Random number in the range [min,max].\r\n     */\r\n    export function rand(min: number = 0.0, max: number = 1.0): number {\r\n        return Math.random() * (max - min) + min;\r\n    }\r\n\r\n    /**\r\n     * Tests with binary operations if the number is power of two.\r\n     * @param x The number to test.\r\n     */\r\n    export function isPowerOfTwo(x: number): boolean {\r\n        return Number.isInteger(x) && Number.isInteger(Math.log2(x));\r\n    }\r\n\r\n    /**\r\n     * Computes the next upper power of two for the given number. Math is based on\r\n     * {@link https://graphics.stanford.edu/~seander/bithacks.html}.\r\n     * @param x - Number to compute next upper power of two for.\r\n     */\r\n    export function upperPowerOfTwo(x: number): number {\r\n        --x;\r\n        x |= x >> 1;\r\n        x |= x >> 2;\r\n        x |= x >> 4;\r\n        x |= x >> 8;\r\n        x |= x >> 16;\r\n        return ++x;\r\n    }\r\n\r\n    /**\r\n     * Byte suffixes based on ISO/IEC 80000 used for pretty printing of bytes.\r\n     */\r\n    const byteSuffixes: Array<string> = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi', 'Ei', 'Zi', 'Yi'];\r\n\r\n    /**\r\n     * Prints bytes using ISO/IEC 80000 postfixes for bytes and fixed number of decimal places (3 decimal places if\r\n     * bytes >= KiB).\r\n     * ```\r\n     * prettyPrintBytes(27738900); // returns '26.454MiB'\r\n     * ```\r\n     * @param bytes - Number of bytes in plain bytes.\r\n     */\r\n    export function prettyPrintBytes(bytes: number): string {\r\n        const prefix: number = bytes > 0 ? Math.floor(Math.log(bytes) / Math.log(1024)) : 0;\r\n        const value = bytes / Math.pow(1024, prefix);\r\n        return `${prefix > 0 ? value.toFixed(3) : value}${byteSuffixes[prefix]}B`;\r\n    }\r\n\r\n\r\n    /**\r\n     * Suffixes used for pretty printing of time values in milliseconds.\r\n     */\r\n    const msSuffixes: Array<string> = ['ms', 'ns', 'μs', 'ms', 's'];\r\n    /**\r\n     * Scales used for pretty printing of time values in milliseconds.\r\n     */\r\n    const msScales: Array<number> = [0, 1e+6, 1e+3, 1e+0, 1e-3];\r\n\r\n    /**\r\n     * Prints given milliseconds in an appropriate seconds-based time unit and fixed number of decimal places.\r\n     * ```\r\n     * prettyPrintMilliseconds(0.03277); // returns '32.770μs'\r\n     * ```\r\n     * @param milliseconds - Number of milliseconds as floating point number.\r\n     */\r\n    export function prettyPrintMilliseconds(milliseconds: number): string {\r\n        let prefix: number = milliseconds > 0 ?\r\n            Math.max(1, Math.floor(Math.log(milliseconds * 10) / Math.log(1e+3)) + 3) : 0;\r\n        prefix = clamp(prefix, 0, 4);\r\n\r\n        const value = milliseconds * msScales[prefix];\r\n        return `${value.toFixed(3)}${msSuffixes[prefix]}`;\r\n    }\r\n\r\n\r\n    /**\r\n     * Tests if specific bits are set in a given bitfield and returns true if so, false otherwise.\r\n     */\r\n    export function bitInBitfield(flags: GLbitfield, flag: GLbitfield | undefined): boolean {\r\n        if (flag === undefined) {\r\n            return false;\r\n        }\r\n        return (flags & flag) === flag;\r\n    }\r\n\r\n    /**\r\n     * Conversion multiplier for radians to degrees conversion (180 / PI).\r\n     */\r\n    export const RAD2DEG = 57.295779513082320;\r\n\r\n    /**\r\n     * Conversion multiplier for degrees to radians conversion (PI / 180).\r\n     */\r\n    export const DEG2RAD = 0.017453292519943295;\r\n\r\n    /**\r\n     * Queries window.location.search, or, if not present, window.location.search of the window's top frame.\r\n     */\r\n    export function GETsearch(): string {\r\n        let search = window.location.search;\r\n        if (!search) {\r\n            search = window.top?.location?.search || '';\r\n        }\r\n        return search;\r\n    }\r\n\r\n    /**\r\n     * Queries the value of a GET parameter.\r\n     * @param parameter - Name/identifier of the parameter to query for.\r\n     */\r\n    export function GETparameter(parameter: string): string | undefined {\r\n        const re = new RegExp(`${parameter}=([^&]+)`);\r\n        let match = window.location.search.match(re);\r\n        if (!match) {\r\n            // For iframe contents (i. e., the embedded /examples/ files), look within the top frame's search params\r\n            match = window.top?.location?.search.match(re) || null;\r\n        }\r\n        if (!match) {\r\n            return undefined;\r\n        }\r\n        return match[1];\r\n    }\r\n\r\n    /**\r\n     * Path separator used for path related functions such as dirname and basename.\r\n     */\r\n    export const PATH_SEPARATOR = '/';\r\n\r\n    /**\r\n     * Returns the directory name of a given (file) path. If no path separator is found, an empty dir name is returned.\r\n     * @param path - Path string the directory name should be returned of.\r\n     */\r\n    export function dirname(path: string): string {\r\n        if (path.includes(PATH_SEPARATOR) === false) {\r\n            return '';\r\n        }\r\n        return path.substr(0, path.lastIndexOf(PATH_SEPARATOR)).trimLeft();\r\n    }\r\n\r\n    /**\r\n     * Returns the base name of a given file path. If no path separator is found, the input path is returned.\r\n     * @param path - Path string the file/base name should be returned of.\r\n     */\r\n    export function basename(path: string): string {\r\n        if (path.includes(PATH_SEPARATOR) === false) {\r\n            return path;\r\n        }\r\n        return path.substr(path.lastIndexOf(PATH_SEPARATOR) + 1).trimRight();\r\n    }\r\n\r\n}\r\n\r\nexport = auxiliaries;\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { vec4 } from 'gl-matrix';\r\n\r\nimport { assert, logIf, LogLevel } from './auxiliaries';\r\nimport { v4 } from './gl-matrix-extensions';\r\n\r\nimport { Context } from './context';\r\nimport { Framebuffer } from './framebuffer';\r\nimport { Initializable } from './initializable';\r\nimport { NdcFillingTriangle } from './ndcfillingtriangle';\r\nimport { Program } from './program';\r\nimport { Shader } from './shader';\r\nimport { Texture2D } from './texture2d';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * This rendering pass blits the color attachment of a given rgba-framebuffer into the target buffer provided on frame.\r\n * For rendering, a direct blit is used. However, if this is not supported, a textured, screen-aligned triangle is used\r\n * for blitting as fallback.\r\n *\r\n * The blit pass can be used as follows:\r\n * ```\r\n * this._blitPass = new BlitPass(this._context);\r\n * this._blitPass.initialize();\r\n *\r\n * this._blitPass.readBuffer = gl2facade.COLOR_ATTACHMENT0;\r\n * // this._blitPass.srcBounds = vec4.fromValues(0, 0, this._sourceSize[0], this._sourceSize[1]);\r\n * this._blitPass.filter = gl.LINEAR;\r\n * this._blitPass.target = this._defaultFBO;\r\n * this._blitPass.drawBuffer = gl.BACK;\r\n *\r\n * this.blitPass.framebuffer = this.intermediateFBO;\r\n * // this.blitPass.dstBounds = vec4.fromValues(dstX0, dstY0, dstX1, dstY1);\r\n * this.blitPass.frame();\r\n * ```\r\n */\r\nexport class BlitPass extends Initializable {\r\n\r\n    /**\r\n     * Read-only access to the objects context, used to get context information and WebGL API access.\r\n     */\r\n    protected _context: Context;\r\n\r\n    /** @see {@link target} */\r\n    protected _target: Framebuffer;\r\n\r\n    /** @see {@link framebuffer} */\r\n    protected _framebuffer: Framebuffer;\r\n\r\n    /** @see {@link readBuffer} */\r\n    protected _readBuffer: GLenum;\r\n\r\n    /** @see {@link drawBuffer} */\r\n    protected _drawBuffer: GLenum;\r\n\r\n    /** @see {@link filter} */\r\n    protected _filter: GLenum;\r\n\r\n    /** @see {@link srcBounds} */\r\n    protected _srcBounds: vec4 | undefined;\r\n\r\n    /** @see {@link dstBounds} */\r\n    protected _dstBounds: vec4 | undefined;\r\n\r\n    /* Indirect blit and fallback implementation. */\r\n\r\n    /** @see {@link forceProgramBlit} */\r\n    protected _enforceProgramBlit = false;\r\n\r\n    /**\r\n     * Geometry used to draw on. This is not provided by default to allow for geometry sharing. If no triangle is given,\r\n     * the ndc triangle will be created and managed internally.\r\n     */\r\n    protected _ndcTriangle: NdcFillingTriangle;\r\n\r\n    /**\r\n     * Tracks ownership of the ndc-filling triangle.\r\n     */\r\n    protected _ndcTriangleShared = false;\r\n\r\n    protected _program: Program;\r\n\r\n    /**\r\n     * Uniform for passing the filter to blit: true for nearest, false otherwise (linear).\r\n     */\r\n    protected _uNearest: WebGLUniformLocation;\r\n\r\n    /**\r\n     * Uniform for passing the source bounds to blit.\r\n     */\r\n    protected _uSrcBounds: WebGLUniformLocation;\r\n\r\n    /**\r\n     * Uniform for passing the destination bounds to blit.\r\n     */\r\n    protected _uDstBounds: WebGLUniformLocation;\r\n\r\n\r\n    constructor(context: Context) {\r\n        super();\r\n        this._context = context;\r\n    }\r\n\r\n    /**\r\n     * Uses direct blit via glBlitFramebuffer for blitting a single read buffer into the given target's draw buffer.\r\n     */\r\n    private functionBlit(): void {\r\n        const gl = this._context.gl;\r\n\r\n        this._target.bind(gl.DRAW_FRAMEBUFFER);\r\n        this._framebuffer.bind(gl.READ_FRAMEBUFFER);\r\n        gl.readBuffer(this._readBuffer);\r\n        if (\r\n            this._drawBuffer >= gl.COLOR_ATTACHMENT1 &&\r\n            this._drawBuffer <= gl.COLOR_ATTACHMENT15\r\n        ) {\r\n            const offset = this._drawBuffer - gl.COLOR_ATTACHMENT0;\r\n            const drawBuffers = new Array(offset + 1).fill(gl.NONE);\r\n            drawBuffers[offset] = this._drawBuffer;\r\n            gl.drawBuffers(drawBuffers);\r\n        } else {\r\n            gl.drawBuffers([this._drawBuffer]);\r\n        }\r\n\r\n        /**\r\n         * The glClear is somehow required to make the blit work. Reducing the clear area to zero is intended to reduce\r\n         * the actual load of clear.\r\n         */\r\n        gl.enable(gl.SCISSOR_TEST);\r\n        gl.scissor(0, 0, 0, 0);\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n        gl.disable(gl.SCISSOR_TEST);\r\n\r\n        const srcBounds = this._srcBounds ? this._srcBounds : [0, 0, this._framebuffer.width, this._framebuffer.height];\r\n        const dstBounds = this._dstBounds ? this._dstBounds : [0, 0, this._target.width, this._target.height];\r\n\r\n        gl.blitFramebuffer(\r\n            srcBounds[0], srcBounds[1], srcBounds[2], srcBounds[3],\r\n            dstBounds[0], dstBounds[1], dstBounds[2], dstBounds[3],\r\n            gl.COLOR_BUFFER_BIT, this._filter);\r\n\r\n        this._framebuffer.unbind(gl.READ_FRAMEBUFFER);\r\n        this._target.unbind(gl.DRAW_FRAMEBUFFER);\r\n    }\r\n\r\n    /**\r\n     * Uses indirect blit by drawing a textured, screen-aligned triangle into the given target framebuffer.\r\n     * @param program - The program the is used for minimal blit.\r\n     */\r\n    private programBlit(): void {\r\n        if (this._program === undefined) {\r\n            this.createProgram();\r\n        }\r\n\r\n        assert(this._ndcTriangle && this._ndcTriangle.initialized, `expected an initialized ndc triangle`);\r\n        const gl = this._context.gl;\r\n\r\n        const srcBounds: vec4 = this._srcBounds ? this._srcBounds :\r\n            vec4.fromValues(0, 0, this._framebuffer.width, this._framebuffer.height);\r\n        const dstBounds: vec4 = this._dstBounds ? this._dstBounds :\r\n            vec4.fromValues(0, 0, this._target.width, this._target.height);\r\n\r\n        const srcBoundsNormalized: vec4 = vec4.div(v4(), srcBounds,\r\n            [this._framebuffer.width, this._framebuffer.height, this._framebuffer.width, this._framebuffer.height]);\r\n        const dstBoundsNormalized: vec4 = vec4.div(v4(), dstBounds,\r\n            [this._target.width, this._target.height, this._target.width, this._target.height]);\r\n\r\n        gl.viewport(dstBounds[0], dstBounds[1], dstBounds[2] - dstBounds[0], dstBounds[3] - dstBounds[1]);\r\n\r\n        gl.disable(gl.DEPTH_TEST);\r\n        gl.depthMask(false);\r\n\r\n        this._program.bind();\r\n        gl.uniform4fv(this._uSrcBounds, srcBoundsNormalized);\r\n        gl.uniform4fv(this._uDstBounds, dstBoundsNormalized);\r\n        gl.uniform1i(this._uNearest, this.filter === gl.nearest);\r\n\r\n        const texture = this._framebuffer.texture(this._readBuffer) as Texture2D;\r\n        texture.bind(gl.TEXTURE0);\r\n\r\n        const target = this._context.isWebGL2 ? gl.DRAW_FRAMEBUFFER : gl.FRAMEBUFFER;\r\n        this._target.bind(target);\r\n        this._ndcTriangle.bind();\r\n        this._ndcTriangle.draw();\r\n        this._ndcTriangle.unbind();\r\n        this._target.unbind(target);\r\n\r\n        texture.unbind();\r\n\r\n        gl.enable(gl.DEPTH_TEST);\r\n        gl.depthMask(true);\r\n\r\n        /* Every pass is expected to bind its own program when drawing, thus, unbinding is not necessary. */\r\n        // this.program.unbind();\r\n    }\r\n\r\n    /**\r\n     * Used to create (on-demand) the blit program for program based blitting. This function can be specialized, e.g.,\r\n     * for creating custom blit passes such as the `DebugPass` {@link DebugPass}. This method assumes the program to be\r\n     * undefined.\r\n     */\r\n    protected createProgram(): boolean {\r\n        assert(this._program === undefined, `expected blit program to be undefined before its creation`);\r\n        const gl = this._context.gl;\r\n\r\n        const vert = new Shader(this._context, gl.VERTEX_SHADER, 'blit.vert (blit)');\r\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n        vert.initialize(require('./shaders/blit.vert'));\r\n        const frag = new Shader(this._context, gl.FRAGMENT_SHADER, 'blit.frag (blit)');\r\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n        frag.initialize(require('./shaders/blit.frag'));\r\n\r\n        this._program = new Program(this._context, 'BlitProgram');\r\n        this._program.initialize([vert, frag], false);\r\n\r\n        if (!this._ndcTriangle.initialized) {\r\n            this._ndcTriangle.initialize();\r\n        }\r\n        this._program.attribute('a_vertex', this._ndcTriangle.vertexLocation);\r\n        this._program.link();\r\n\r\n        this._uSrcBounds = this._program.uniform('u_srcBounds');\r\n        this._uDstBounds = this._program.uniform('u_dstBounds');\r\n        this._uNearest = this._program.uniform('u_nearest');\r\n\r\n        this._program.bind();\r\n        gl.uniform1i(this._program.uniform('u_source'), 0);\r\n        this._program.unbind();\r\n\r\n        return this._program.valid;\r\n    }\r\n\r\n    /**\r\n     * Specializes this pass's initialization. This pass either requires blitFramebuffer support or creates screen-\r\n     * aligned triangle geometry and a single program. All attribute and dynamic uniform locations are cached.\r\n     * @param ndcTriangle - If specified, assumed to be used as shared geometry. If none is specified, a ndc-filling\r\n     * triangle will be created internally.\r\n     */\r\n    @Initializable.initialize()\r\n    initialize(ndcTriangle?: NdcFillingTriangle): boolean {\r\n        const gl = this._context.gl;\r\n\r\n        if (ndcTriangle === undefined) {\r\n            this._ndcTriangle = new NdcFillingTriangle(this._context, 'NdcFillingTriangle-Blit');\r\n        } else {\r\n            this._ndcTriangle = ndcTriangle;\r\n            this._ndcTriangleShared = true;\r\n        }\r\n\r\n        this._filter = gl.NEAREST;\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Specializes this pass's uninitialization. Program and geometry resources are released (if allocated). Cached\r\n     * uniform and attribute locations are invalidated.\r\n     */\r\n    @Initializable.uninitialize()\r\n    uninitialize(): void {\r\n        if (!this._ndcTriangleShared && this._ndcTriangle.initialized) {\r\n            this._ndcTriangle.uninitialize();\r\n        }\r\n        this._program.uninitialize();\r\n    }\r\n\r\n    /**\r\n     * A blit frame either blits or draws the color attachment of the given framebuffer to the target framebuffer. For\r\n     * program based/indirect blit a viewport filling area, i.e., a screen-aligned triangle is used.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    frame(): void {\r\n        logIf(!this._target || !this._target.valid, LogLevel.Warning, `valid target expected, given ${this._target}`);\r\n        logIf(!this._framebuffer || !this._framebuffer.valid, LogLevel.Warning,\r\n            `valid framebuffer for blitting from expected, given ${this._framebuffer}`);\r\n\r\n        const gl = this._context.gl;\r\n        switch (this._readBuffer) {\r\n            /* falls through */\r\n            case gl.DEPTH_ATTACHMENT:\r\n            case gl.STENCIL_ATTACHMENT:\r\n            case gl.DEPTH_STENCIL_ATTACHMENT:\r\n                return this.programBlit();\r\n            default:\r\n                break;\r\n        }\r\n\r\n        /* BlitFramebuffer is not an extension and, thus, it does not need to be enabled. */\r\n        if (this._context.supportsBlitFramebuffer && this._enforceProgramBlit === false) {\r\n            return this.functionBlit();\r\n        }\r\n        this.programBlit();\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets the framebuffer that is to be blitted.\r\n     * @param framebuffer - Framebuffer that is to be blitted.\r\n     */\r\n    set framebuffer(framebuffer: Framebuffer) {\r\n        this.assertInitialized();\r\n        this._framebuffer = framebuffer;\r\n    }\r\n\r\n    /**\r\n     * The read buffer to blit from (currently, this is expected to refer to a texture attachment of this._framebuffer).\r\n     * @param readBuffer - GLenum that is to be queried from the FBO.\r\n     */\r\n    set readBuffer(readBuffer: GLenum) {\r\n        this.assertInitialized();\r\n        this._readBuffer = readBuffer;\r\n    }\r\n\r\n    /**\r\n     * The draw buffer to blit to (currently, this is expected to refer to a texture attachment of this._target or\r\n     * gl.BACK). Please note that this will be ignored if WebGL 1 is used without a WEBGL_draw_buffer extension.\r\n     * Furthermore, if the drawBuffer is gl.BACK, a DefaultBuffer is expected as target.\r\n     * @param drawBuffer - GLenum that specifies the draw buffer.\r\n     */\r\n    set drawBuffer(drawBuffer: GLenum) {\r\n        this.assertInitialized();\r\n        this._drawBuffer = drawBuffer;\r\n    }\r\n\r\n    /**\r\n     * Framebuffer to blit the given framebuffer (@see framebuffer} into.\r\n     * @param target - Framebuffer to blit into.\r\n     */\r\n    set target(target: Framebuffer) {\r\n        this.assertInitialized();\r\n        this._target = target;\r\n    }\r\n\r\n    /**\r\n     * Specifies the interpolation to be applied if the image is stretched. Must be GL_NEAREST or GL_LINEAR.\r\n     */\r\n    set filter(filter: GLenum) {\r\n        this._filter = filter;\r\n    }\r\n\r\n    /**\r\n     * Specify the bounds of the source rectangle within the read buffer of the read framebuffer.\r\n     * @param bounds - [srcX0, srcY0, srcX1, srcY1] as used in glBlitFramebuffer. If bounds is\r\n     * undefined, the full size of the source buffer (framebuffer) will be used.\r\n     */\r\n    set srcBounds(bounds: vec4 | undefined) {\r\n        this._srcBounds = bounds ? vec4.clone(bounds) : undefined;\r\n    }\r\n\r\n    /**\r\n     * Specify the bounds of the destination rectangle within the write buffer of the write framebuffer.\r\n     * @param bounds - [srcX0, srcY0, srcX1, srcY1] as used in glBlitFramebuffer. If bounds is\r\n     * undefined, the full size of the destination (target) buffer will be used.\r\n     */\r\n    set dstBounds(bounds: vec4 | undefined) {\r\n        this._dstBounds = bounds ? vec4.clone(bounds) : undefined;\r\n    }\r\n\r\n\r\n    /**\r\n     * Specify whether or not experimental WebGL blit can be used if available.\r\n     * @param enforce - If true, program based blit instead of WebGL experimental blit function will be used.\r\n     */\r\n    set enforceProgramBlit(enforce: boolean) {\r\n        this._enforceProgramBlit = enforce;\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { assert } from './auxiliaries';\r\n\r\nimport { Bindable } from './bindable';\r\nimport { Initializable } from './initializable';\r\nimport { AbstractObject } from './object';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * Wrapper around an OpenGL array or element array buffer. This buffer may be used to be attached to multiple VAOs.\r\n */\r\nexport class Buffer extends AbstractObject<WebGLBuffer> implements Bindable {\r\n\r\n    /**\r\n     * Default buffer, e.g., used for unbind.\r\n     */\r\n    static readonly DEFAULT_BUFFER = undefined;\r\n\r\n\r\n    /** @see {@link target} */\r\n    protected _target: GLenum | undefined = Buffer.DEFAULT_BUFFER;\r\n\r\n    /**\r\n     * Create a buffer object on the GPU.\r\n     */\r\n    protected create(target: GLenum): WebGLBuffer | undefined {\r\n        const gl = this._context.gl;\r\n\r\n        this._object = gl.createBuffer();\r\n        /* note that gl.isBuffer requires the buffer to be bound */\r\n        this._valid = this._object instanceof WebGLBuffer;\r\n\r\n        if (this._valid) {\r\n            assert(target === gl.ARRAY_BUFFER || target === gl.ELEMENT_ARRAY_BUFFER,\r\n                `either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER expected as buffer target`);\r\n            this._target = target;\r\n        }\r\n        return this._object;\r\n    }\r\n\r\n    /**\r\n     * Delete the buffer object on the GPU. This should have the reverse effect of `create`.\r\n     */\r\n    protected delete(): void {\r\n        assert(this._object instanceof WebGLBuffer, `expected WebGLBuffer object`);\r\n        this._context.gl.deleteBuffer(this._object);\r\n\r\n        this._object = undefined;\r\n        this._valid = false;\r\n\r\n        this._target = Buffer.DEFAULT_BUFFER;\r\n    }\r\n\r\n    /**\r\n     * Binds the buffer object as buffer to predefined target.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    bind(): void {\r\n        assert(this._target === this._context.gl.ARRAY_BUFFER || this._target === this._context.gl.ELEMENT_ARRAY_BUFFER,\r\n            `expected either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER as buffer target`);\r\n        this._context.gl.bindBuffer(this._target, this._object);\r\n    }\r\n\r\n    /**\r\n     * Binds null as current buffer to predefined target;\r\n     */\r\n    @Initializable.assert_initialized()\r\n    unbind(): void {\r\n        this.context.gl.bindBuffer(this._target, Buffer.DEFAULT_BUFFER);\r\n    }\r\n\r\n    /**\r\n     * Creates the buffer object's data store and updates the objects status.\r\n     * @param data - Data that will be copied into the objects data store.\r\n     * @param usage - Usage pattern of the data store.\r\n     * @param bind - Allows to skip binding the object (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the object (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    data(data: ArrayBufferView | ArrayBuffer | GLsizeiptr, usage: GLenum,\r\n        bind: boolean = true, unbind: boolean = true): void {\r\n        const gl = this.context.gl;\r\n\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n        gl.bufferData(this._target, data, usage);\r\n        if (unbind) {\r\n            this.unbind();\r\n        }\r\n\r\n        this._valid = gl.isBuffer(this._object) && gl.getError() === gl.NO_ERROR;\r\n\r\n        const byteLength = typeof data === `number` ? data : data.byteLength;\r\n        const bytes: GLsizei = this._valid ? byteLength : 0;\r\n\r\n        this.context.allocationRegister.reallocate(this._identifier, bytes);\r\n    }\r\n\r\n    /**\r\n     * Updates a subset of a buffer object's data store.\r\n     * @param dstByteOffset - Offset in bytes where the data replacement will start.\r\n     * @param srcData - Data that will be copied into the data store.\r\n     * @param srcOffset - Element index offset where to start reading the buffer.\r\n     * @param length - Length of the data to copy into the data store.\r\n     * @param bind - Allows to skip binding the object (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the object (e.g., when binding is handled outside).\r\n     */\r\n    subData(dstByteOffset: GLintptr, srcData: ArrayBufferView | ArrayBuffer,\r\n        srcOffset: GLuint = 0, length: GLuint = 0, bind: boolean = true, unbind: boolean = true): void {\r\n\r\n        const gl = this.context.gl;\r\n\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n        this.context.gl2facade.bufferSubData(this._target!, dstByteOffset, srcData, srcOffset, length);\r\n        if (unbind) {\r\n            this.unbind();\r\n        }\r\n\r\n        this._valid = gl.getError() === gl.NO_ERROR;\r\n    }\r\n\r\n    /**\r\n     * Specifies the memory layout of the buffer for a binding point.\r\n     * @param index - Index of the vertex attribute that is to be setup and enabled.\r\n     * @param size - Number of components per vertex attribute.\r\n     * @param type - Data type of each component in the array.\r\n     * @param normalized - Whether integer data values should be normalized when being casted to a float.\r\n     * @param stride - Offset in bytes between the beginning of consecutive vertex attributes.\r\n     * @param offset - Offset in bytes of the first component in the vertex attribute array.\r\n     * @param bind - Allows to skip binding the object (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the object (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    attribEnable(index: GLuint, size: GLint, type: GLenum, normalized: GLboolean = false,\r\n        stride: GLsizei = 0, offset: GLintptr = 0, bind: boolean = true, unbind: boolean = true): void {\r\n\r\n        const gl = this.context.gl;\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n        gl.vertexAttribPointer(index, size, type, normalized, stride, offset);\r\n        gl.enableVertexAttribArray(index);\r\n        if (unbind) {\r\n            this.unbind();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Disables a buffer binding point.\r\n     * @param index - Index of the vertex attribute that is to be disabled.\r\n     * @param bind - Allows to skip binding the object (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the object (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    attribDisable(index: GLuint, bind: boolean = true, unbind: boolean = true): void {\r\n        const gl = this.context.gl;\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n        gl.disableVertexAttribArray(index);\r\n        if (unbind) {\r\n            this.unbind();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the number of bytes this object approximately allocates on the GPU.\r\n     */\r\n    get bytes(): number {\r\n        this.assertInitialized();\r\n        return this.context.allocationRegister.allocated(this._identifier);\r\n    }\r\n\r\n    /**\r\n     * Target to which the buffer object is bound (either GL_ARRAY_BUFFER or GL_ELEMENT_ARRAY_BUFFER).\r\n     * Readonly access to the target (as specified on initialization) the buffer will be bound to.\r\n     */\r\n    get target(): GLenum | undefined {\r\n        this.assertInitialized();\r\n        return this._target;\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { mat4, vec3 } from 'gl-matrix';\r\nimport { m4 } from './gl-matrix-extensions';\r\n\r\nimport { DEG2RAD, log, LogLevel, RAD2DEG } from './auxiliaries';\r\nimport { duplicate2, GLsizei2 } from './tuples';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * Virtual 3D camera specified by eye, center, up, fovy, near, far, and a viewport size. It provides access to cached\r\n * view, projection, and view projection matrices. Cached by means of whenever one of the attributes change, all\r\n * matrices are invalidated and recalculated only once and only when requested. Please note that eye denotes the\r\n * position in a virtual 3D scene and center denotes the position which is being looked at.\r\n */\r\nexport class Camera {\r\n\r\n    private static readonly DEFAULT_EYE: vec3 = vec3.fromValues(0.0, 0.0, 1.0);\r\n    private static readonly DEFAULT_CENTER: vec3 = vec3.fromValues(0.0, 0.0, 0.0);\r\n    private static readonly DEFAULT_UP: vec3 = vec3.fromValues(0.0, 1.0, 0.0);\r\n\r\n    private static readonly DEFAULT_FOVY = 45.0;\r\n\r\n    private static readonly DEFAULT_NEAR = 2.0;\r\n    private static readonly DEFAULT_FAR = 8.0;\r\n\r\n\r\n    /** @see {@link eye} */\r\n    protected _eye: vec3;\r\n\r\n    /** @see {@link center} */\r\n    protected _center: vec3;\r\n\r\n    /** @see {@link up} */\r\n    protected _up: vec3;\r\n\r\n    /** @see {@link fovy} */\r\n    protected _fovy = Camera.DEFAULT_FOVY;\r\n\r\n    /** @see {@link near} */\r\n    protected _near = Camera.DEFAULT_NEAR;\r\n\r\n    /** @see {@link far} */\r\n    protected _far = Camera.DEFAULT_FAR;\r\n\r\n    /** @see {@link viewport} */\r\n    protected _viewport: GLsizei2 = [1, 1];\r\n\r\n    /** @see {@link aspect} */\r\n    protected _aspect: GLfloat = 1.0;\r\n\r\n    /** @see {@link view} */\r\n    protected _view: mat4 | undefined;\r\n    /** @see {@link viewInverse} */\r\n    protected _viewInverse: mat4 | undefined;\r\n\r\n    /** @see {@link projection} */\r\n    protected _projection: mat4 | undefined;\r\n    /** @see {@link projectionInverse} */\r\n    protected _projectionInverse: mat4 | undefined;\r\n\r\n    /** @see {@link viewProjection} */\r\n    protected _viewProjection: mat4 | undefined;\r\n    /** @see {@link viewProjectionInverse} */\r\n    protected _viewProjectionInverse: mat4 | undefined;\r\n\r\n\r\n    /** @see {@link postViewProjection} */\r\n    protected _postViewProjection: mat4 | undefined;\r\n\r\n    /** @see {@link altered} */\r\n    protected _altered = false;\r\n\r\n\r\n    /**\r\n     * Computes a vertical field of view angle based on the display height and distance to eye. Since both parameters\r\n     * are highly dependent of the device, this function can only be used to derive a rough estimate for a reasonable\r\n     * field of view. Note that both parameters should be passed using the same unit, e.g., inch or centimeters.\r\n     * @param elementDisplayHeight - Height of an element on the display.\r\n     * @param eyeToDisplayDistance - Distance from the users eye to that element.\r\n     * @returns - Vertical field of view angle in radian.\r\n     */\r\n    static calculateFovY(elementDisplayHeight: number, eyeToDisplayDistance: number): number {\r\n        return Math.atan(elementDisplayHeight * 0.5 / eyeToDisplayDistance) * 2.0;\r\n    }\r\n\r\n    /**\r\n     * Constructor setting up the camera's eye, center and up vectors.\r\n     * @param eye - The viewpoint of the virtual camera\r\n     * @param center - The look-at point in the scene\r\n     * @param up - The up-vector of the virtual camera\r\n     */\r\n    constructor(eye?: vec3, center?: vec3, up?: vec3) {\r\n        this._eye = eye ? vec3.clone(eye) : vec3.clone(Camera.DEFAULT_EYE);\r\n        this._center = center ? vec3.clone(center) : vec3.clone(Camera.DEFAULT_CENTER);\r\n        this._up = up ? vec3.clone(up) : vec3.clone(Camera.DEFAULT_UP);\r\n    }\r\n\r\n\r\n    /**\r\n     * Invalidates derived matrices, i.e., view, projection, and view-projection. The view should be invalidated on\r\n     * eye, center, and up changes. The projection should be invalidated on fovy, viewport, near, and far changes.\r\n     * The view projection invalidates whenever either one or both view and projection are to be invalidated.\r\n     */\r\n    protected invalidate(invalidateView: boolean, invalidateProjection: boolean,\r\n        invalidateOnlyViewProjection: boolean = false): void {\r\n        if (invalidateView) {\r\n            this._view = undefined;\r\n            this._viewInverse = undefined;\r\n        }\r\n        if (invalidateProjection) {\r\n            this._projection = undefined;\r\n            this._projectionInverse = undefined;\r\n        }\r\n        if (invalidateView || invalidateProjection || invalidateOnlyViewProjection) {\r\n            this._viewProjection = undefined;\r\n            this._viewProjectionInverse = undefined;\r\n        }\r\n        this._altered = true;\r\n    }\r\n\r\n    /**\r\n     * Position of the virtual camera in a virtual 3D scene, the point of view.\r\n     */\r\n    get eye(): vec3 {\r\n        return this._eye;\r\n    }\r\n\r\n    /**\r\n     * Sets the eye. Invalidates the view.\r\n     */\r\n    set eye(eye: vec3) {\r\n        if (vec3.equals(this._eye, eye)) {\r\n            return;\r\n        }\r\n        this._eye = vec3.clone(eye);\r\n        this.invalidate(true, false);\r\n    }\r\n\r\n    /**\r\n     * Look-at point into a virtual 3D scene.\r\n     */\r\n    get center(): vec3 {\r\n        return this._center;\r\n    }\r\n\r\n    /**\r\n     * Sets the center. Invalidates the view.\r\n     */\r\n    set center(center: vec3) {\r\n        if (vec3.equals(this._center, center)) {\r\n            return;\r\n        }\r\n        this._center = vec3.clone(center);\r\n        this.invalidate(true, false);\r\n    }\r\n\r\n    /**\r\n     * Up-vector of the virtual camera.\r\n     */\r\n    get up(): vec3 {\r\n        return this._up;\r\n    }\r\n\r\n    /**\r\n     * Sets the up vector. Invalidates the view.\r\n     */\r\n    set up(up: vec3) {\r\n        if (vec3.equals(this._up, up)) {\r\n            return;\r\n        }\r\n        this._up = vec3.clone(up);\r\n        this.invalidate(true, false);\r\n    }\r\n\r\n    /**\r\n     * Vertical field of view in degree.\r\n     */\r\n    get fovy(): GLfloat {\r\n        return this._fovy;\r\n    }\r\n\r\n    /**\r\n     * Sets the vertical field-of-view in degrees. Invalidates the projection.\r\n     */\r\n    set fovy(fovy: GLfloat) {\r\n        if (this._fovy === fovy) {\r\n            return;\r\n        }\r\n        this._fovy = fovy;\r\n        this.invalidate(false, true);\r\n    }\r\n\r\n    /**\r\n     * Sets the horizontal field-of-view in degrees. Invalidates the projection.\r\n     * Note that internally, this will be translated to the corresponding the vertical field.\r\n     */\r\n    set fovx(fovx: GLfloat) {\r\n        const horizontalAngle = fovx * DEG2RAD;\r\n        const verticalAngle = 2.0 * Math.atan(Math.tan(horizontalAngle / 2.0) * (1.0 / this.aspect));\r\n\r\n        const fovy = verticalAngle * RAD2DEG;\r\n        if (this._fovy === fovy) {\r\n            return;\r\n        }\r\n        this._fovy = fovy;\r\n        this.invalidate(false, true);\r\n    }\r\n\r\n    /**\r\n     * With this function the view of a physical camera can be emulated. The width and focal length of\r\n     * a lens are used to generate the correct field of view.\r\n     * Blender camera presets can be imported by using the camera setting 'HorizontalFit' and using the\r\n     * width and focal length values in this function.\r\n     * See: https://www.scantips.com/lights/fieldofviewmath.html\r\n     * @param sensorWidth - Width of the sensor in mm\r\n     * @param focalLength - Focal length of the lens in mm\r\n     */\r\n    fovFromLens(sensorWidth: number, focalLength: number): void {\r\n        const horizontalAngle = 2.0 * Math.atan(sensorWidth / (2.0 * focalLength));\r\n        this.fovx = horizontalAngle * RAD2DEG;\r\n    }\r\n\r\n    /**\r\n     * Distance of near-plane in view coordinates.\r\n     */\r\n    get near(): GLfloat {\r\n        return this._near;\r\n    }\r\n\r\n    /**\r\n     * Sets the distance to the near clipping plane. Invalidates the projection.\r\n     */\r\n    set near(near: GLfloat) {\r\n        if (this._near === near) {\r\n            return;\r\n        }\r\n        if (near >= this._far) {\r\n            log(LogLevel.Warning, `near expected to be smaller than far (${this._far}), given ${near}`);\r\n        }\r\n        this._near = near;\r\n        this.invalidate(false, true);\r\n    }\r\n\r\n    /**\r\n     * Distance of far-plane in view coordinates.\r\n     */\r\n    get far(): GLfloat {\r\n        return this._far;\r\n    }\r\n\r\n    /**\r\n     * Sets the distance to the far clipping plane. Invalidates the projection.\r\n     */\r\n    set far(far: GLfloat) {\r\n        if (this._far === far) {\r\n            return;\r\n        }\r\n        if (this._near >= far) {\r\n            log(LogLevel.Warning, `far expected to be greater than near (${this._near}), given ${far}`);\r\n        }\r\n        this._far = far;\r\n        this.invalidate(false, true);\r\n    }\r\n\r\n    /**\r\n     * Sets the viewport size. Invalidates the projection.\r\n     */\r\n    set viewport(size: GLsizei2) {\r\n        if (this._viewport[0] === size[0] && this._viewport[1] === size[1]) {\r\n            return;\r\n        }\r\n        this._viewport = duplicate2<GLsizei>(size);\r\n        this.invalidate(false, true);\r\n    }\r\n\r\n    /**\r\n     * The size of the target viewport used to determine the aspect ratio for subsequent perspective matrix projection\r\n     * computation.\r\n     */\r\n    get viewport(): GLsizei2 {\r\n        return this._viewport;\r\n    }\r\n\r\n    /**\r\n     * Access to the viewport width.\r\n     */\r\n    get width(): GLsizei {\r\n        return this._viewport[0];\r\n    }\r\n\r\n    /**\r\n     * Access to the viewport height.\r\n     */\r\n    get height(): GLsizei {\r\n        return this._viewport[1];\r\n    }\r\n\r\n    /**\r\n     * Sets the aspect ratio (width over height). However, this is not derived from viewport to allow for\r\n     * differentiation between viewport size and scale.\r\n     */\r\n    set aspect(aspect: GLfloat) {\r\n        if (this._aspect === aspect) {\r\n            return;\r\n        }\r\n        this._aspect = aspect;\r\n    }\r\n\r\n    /**\r\n     * Computes the ratio of width over height (set explicitly for differentiation between viewport size and scale).\r\n     */\r\n    get aspect(): GLfloat {\r\n        return this._aspect;\r\n    }\r\n\r\n    /**\r\n     * Either returns the cached view matrix or derives the current one after invalidation and caches it.\r\n     */\r\n    get view(): mat4 {\r\n        if (this._view) { // return cached value\r\n            return this._view;\r\n        }\r\n        this._view = mat4.lookAt(m4(), this._eye, this._center, this._up);\r\n        return this._view;\r\n    }\r\n\r\n    /**\r\n     * Either returns the inverse cached view matrix or derives the current one after invalidation and caches it.\r\n     */\r\n    get viewInverse(): mat4 | undefined {\r\n        if (this._viewInverse !== undefined) { // return cached value\r\n            return this._viewInverse;\r\n        }\r\n        this._viewInverse = mat4.invert(m4(), this.view);\r\n        return this._viewInverse;\r\n    }\r\n\r\n    /**\r\n     * Either returns the cached projection matrix or derives the current one after invalidation and caches it.\r\n     */\r\n    get projection(): mat4 {\r\n        if (this._projection) { // return cached value\r\n            return this._projection;\r\n        }\r\n        this._projection = mat4.perspective(m4(), this.fovy * DEG2RAD, this.aspect, this.near, this.far);\r\n        return this._projection;\r\n    }\r\n\r\n    /**\r\n     * Either returns the cached inverse projection matrix or derives the current one after invalidation and caches it.\r\n     */\r\n    get projectionInverse(): mat4 | undefined {\r\n        if (this._projectionInverse !== undefined) { // return cached value\r\n            return this._projectionInverse;\r\n        }\r\n        this._projectionInverse = mat4.invert(m4(), this.projection);\r\n        return this._projectionInverse;\r\n    }\r\n\r\n    /**\r\n     * Returns the view projection matrix based on view and projection. This is also cached (since matrix\r\n     * multiplication is involved).\r\n     */\r\n    get viewProjection(): mat4 {\r\n        if (this._viewProjection) { // return cached value\r\n            return this._viewProjection;\r\n        }\r\n        this._viewProjection = mat4.multiply(m4(), this.projection, this.view);\r\n        this._viewProjection = mat4.multiply(m4(), this.postViewProjection, this._viewProjection);\r\n        return this._viewProjection;\r\n    }\r\n\r\n    /**\r\n     * Returns the inverse view projection matrix based on view and projection. This is also cached (since matrix\r\n     * multiplication is involved).\r\n     */\r\n    get viewProjectionInverse(): mat4 | undefined {\r\n        if (this._viewProjectionInverse !== undefined) { // return cached value\r\n            return this._viewProjectionInverse;\r\n        }\r\n        this._viewProjectionInverse = mat4.invert(m4(), this.viewProjection);\r\n        return this._viewProjectionInverse;\r\n    }\r\n\r\n    /**\r\n     * Returns the matrix which contains the operations that are applied to the viewProjection matrix.\r\n     * For now this is only used by the TiledRenderer to adjust the NDC-coordinates to the tile.\r\n     */\r\n    get postViewProjection(): mat4 {\r\n        if (this._postViewProjection) {\r\n            return this._postViewProjection;\r\n        } else {\r\n            return mat4.identity(m4());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the matrix which contains the operations that are applied to the viewProjection matrix.\r\n     * For now this is only used by the TiledRenderer to adjust the NDC-coordinates to the tile.\r\n     */\r\n    set postViewProjection(matrix: mat4) {\r\n        this._postViewProjection = matrix;\r\n        this.invalidate(false, false, true);\r\n    }\r\n\r\n    /**\r\n     * Whether or not any other public property has changed. Please note that the alteration status is detached from\r\n     * caching state of lazily computed properties.\r\n     */\r\n    get altered(): boolean {\r\n        return this._altered;\r\n    }\r\n\r\n    /**\r\n     * Intended for resetting alteration status.\r\n     */\r\n    set altered(status: boolean) {\r\n        this._altered = status;\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { vec2 } from 'gl-matrix';\r\n\r\nimport { Camera } from './camera';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\nexport abstract class CameraModifier {\r\n\r\n    /** @see {@link camera} */\r\n    protected _camera: Camera | undefined = undefined;\r\n\r\n    /**\r\n     * Copy of a camera for ongoing camera modifications based on previous/initial camera settings.\r\n     */\r\n    protected _reference = new Camera();\r\n\r\n    /**\r\n     * Reference to the initial point starting the camera modification.\r\n     */\r\n    protected _initialPoint: vec2;\r\n\r\n    /**\r\n     * Reference to the current point updating the camera modification.\r\n     */\r\n    protected _currentPoint: vec2;\r\n\r\n\r\n    /**\r\n     * Should apply all previously calculated transformations to the camera set. Note that this does not invalidate the\r\n     * rendering. Invalidation of rendering is done by the event handler (triggering a rendering update which in turn\r\n     * checks if the camera was altered, and if so, redraws).\r\n     */\r\n    abstract update(): void;\r\n\r\n\r\n    /**\r\n     * The camera that is to be modified in response to various events.\r\n     */\r\n    set camera(camera: Camera | undefined) {\r\n        if (this._camera === camera) {\r\n            return;\r\n        }\r\n        this._camera = camera;\r\n        if (camera === undefined) {\r\n            return;\r\n        }\r\n        Object.assign(this._reference, camera);\r\n        this.update();\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { Observable, ReplaySubject } from 'rxjs';\r\n\r\nimport { vec2, vec4 } from 'gl-matrix';\r\nimport { clamp2, parseVec2, parseVec4 } from './gl-matrix-extensions';\r\n\r\nimport { assert, log, logIf, LogLevel } from './auxiliaries';\r\nimport { GLclampf2, GLsizei2, tuple2, tuple4 } from './tuples';\r\n\r\n\r\nimport { Color } from './color';\r\nimport { Context } from './context';\r\nimport { Controller } from './controller';\r\nimport { EyeGazeDataStreams } from './eyegazedatastream';\r\nimport { EyeGazeEventProvider } from './eyegazeeventprovider';\r\nimport { MouseEventProvider } from './mouseeventprovider';\r\nimport { PointerEventProvider } from './pointereventprovider';\r\nimport { Renderer } from './renderer';\r\nimport { Resizable } from './resizable';\r\nimport { TouchEventProvider } from './toucheventprovider';\r\nimport { KeyboardEventProvider } from './keyboardeventprovider';\r\nimport { Wizard } from './wizard';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * A canvas is associated to a single canvas element (DOM) and integrates or delegates event handling as well as\r\n * control over the rendering loop and the attached renderer respectively. Furthermore, the canvas can bind a single\r\n * renderer (non owning) and sets up communication between controller, renderer, and navigation. The controller invokes\r\n * the renderer's update, frame, and swap methods. The navigation manipulates the renderer's camera. The renderer can\r\n * invalidate itself which causes a controller update.\r\n *\r\n * Note: Since only the multi-frame number is used by the renderer and the controller, the canvas provides getter,\r\n * setter, and change callback setter. Debug-frame and frame number are managed exclusively by the controller.\r\n *\r\n * Note: the canvas should hold any properties that are required to be passed onto a newly bound renderer (in the case\r\n * multiple renderer are used with a canvas). The clear color is one example of such a property.\r\n */\r\nexport class Canvas extends Resizable {\r\n\r\n    /**\r\n     * Default color that is used if none is set via data attributes.\r\n     */\r\n    protected static readonly DEFAULT_CLEAR_COLOR: Color = new Color([0.203, 0.227, 0.250, 1.0]);\r\n\r\n    /**\r\n     * Default frame precision, e.g., accumulation format when multi-frame rendering is used.\r\n     */\r\n    protected static readonly DEFAULT_FRAME_PRECISION: Wizard.Precision = Wizard.Precision.auto;\r\n\r\n    /**\r\n     * Default multi-frame number used if none is set via data attributes.\r\n     */\r\n    protected static readonly DEFAULT_MULTI_FRAME_NUMBER = 0;\r\n\r\n\r\n    /** @see {@link context} */\r\n    protected _context: Context;\r\n\r\n    /** @see {@link controller} */\r\n    protected _controller: Controller;\r\n\r\n    /** @see {@link renderer} */\r\n    protected _renderer: Renderer | undefined;\r\n\r\n\r\n    /** @see {@link clearColor} */\r\n    protected _clearColor: Color;\r\n\r\n\r\n    /**\r\n     * @see {@link framePrecision}\r\n     * This property can be observed, e.g., `aCanvas.framePrecisionObservable.subscribe()`.\r\n     */\r\n    protected _framePrecision: Wizard.Precision;\r\n    protected _framePrecisionSubject = new ReplaySubject<Wizard.Precision>(1);\r\n\r\n\r\n    /**\r\n     * @see {@link size}\r\n     * This property can be observed, e.g., `aCanvas.sizeObservable.subscribe()`.\r\n     * Zero-initialization prevents drawing on an invalid canvas size, i.e., a canvas size [1, 1] is technically valid\r\n     * for rendering, which might lead to rendering on an [1, 1] canvas before the first 'real' size is set (e.g., via\r\n     * resize event), resulting in visually unpleasant initial frames in some (slow) applications.\r\n     */\r\n    protected _size: GLsizei2 = [0, 0];\r\n    protected _sizeSubject = new ReplaySubject<GLsizei2>(1);\r\n\r\n    /**\r\n     * @see {@link frameScale}\r\n     * This property can be observed, `aCanvas.frameScaleObservable.subscribe()`.\r\n     */\r\n    protected _frameScale: GLclampf2;\r\n    protected _frameScaleSubject = new ReplaySubject<GLclampf2>(1);\r\n\r\n    /**\r\n     * @see {@link frameSize}\r\n     * This property can be observed, `aCanvas.frameSizeObservable.subscribe()`.\r\n     */\r\n    protected _frameSize: GLsizei2;\r\n    protected _frameSizeSubject = new ReplaySubject<GLsizei2>(1);\r\n\r\n    /**\r\n     * Flag used to determine whether frame size or frame scale is the dominant configuration.\r\n     */\r\n    protected _favorSizeOverScale: boolean;\r\n\r\n\r\n    /** @see {@link element} */\r\n    protected _element: HTMLCanvasElement;\r\n\r\n    /** @see {@link mouseEventProvider} */\r\n    protected _mouseEventProvider: MouseEventProvider;\r\n\r\n    /** @see {@link touchEventProvider} */\r\n    protected _touchEventProvider: TouchEventProvider;\r\n\r\n    /** @see {@link pointerEventProvider} */\r\n    protected _pointerEventProvider: PointerEventProvider;\r\n\r\n    /** @see {@link eyeGazeEventProvider} */\r\n    protected _eyeGazeEventProvider: EyeGazeEventProvider;\r\n\r\n    /** @see {@link keyboardEventProvider} */\r\n    protected _keyboardEventProvider: KeyboardEventProvider;\r\n\r\n    protected _lostContextExtension: WEBGL_lose_context | undefined;\r\n\r\n\r\n    /**\r\n     * Create and initialize a multi-frame controller, setup a default multi-frame number and get the canvas's webgl\r\n     * context as well as the canvas resolution. The context and resolution will be passed on to the set renderer and\r\n     * its stages/passes appropriately. The canvas does not provide lazy initialization and is strictly bound to a\r\n     * single canvas element (DOM) that cannot be changed.\r\n     *\r\n     * Note: the multi-frame number can be set using a data attribute in the canvas element called\r\n     * 'data-multi-frame-number'.\r\n     *\r\n     * The canvas supports the following data attributes:\r\n     * - data-multi-frame-number {number} - integer greater than 0\r\n     * - data-clear-color {Color} - rgba color for clearing\r\n     * - data-frame-scale {GLclampf2} - width and height frame scale in [0.0,1.0]\r\n     * - data-frame-size {GLizei2} - width and height frame size in pixel\r\n     * - data-frame-precision {RenderPrecision} - precision for, e.g., frame accumulation\r\n     * , either 'float', 'half', 'byte', or 'auto'.\r\n     *\r\n     * Note: data-frame-size takes precedence if both frame-scale and frame-size data attributes are provided.\r\n     * @param element - Canvas element or element id {string} to be used for querying the canvas element.\r\n     * @param attributes - Overrides the internal default attributes @see{Context.DEFAULT_ATTRIBUTES}.\r\n     */\r\n    constructor(element: HTMLCanvasElement | string, attributes?: WebGLContextAttributes) {\r\n        super(); // setup resize event handling\r\n\r\n        this._element = element instanceof HTMLCanvasElement ? element :\r\n            document.getElementById(element) as HTMLCanvasElement;\r\n\r\n        this._element.addEventListener('webglcontextcreationerror', (e: WebGLContextEvent) => {\r\n            console.log(e.statusMessage || 'Unknown error');\r\n        }, false);\r\n\r\n        /* Register element for style mutation changes to invoke resize events. */\r\n        this.observe(this._element);\r\n\r\n        this._mouseEventProvider = new MouseEventProvider(this._element, 200);\r\n        this._touchEventProvider = new TouchEventProvider(this._element, 200);\r\n        this._pointerEventProvider = new PointerEventProvider(this._element, 200);\r\n        this._keyboardEventProvider = new KeyboardEventProvider(this._element, 200);\r\n\r\n        /**\r\n         * Disable default handling of touch events by the browser.\r\n         * Touch events are handled using PointerEventProvider.\r\n         */\r\n        this._element.style.touchAction = 'none';\r\n\r\n        const dataset = this._element.dataset;\r\n\r\n        /* Requesting a context asserts when no context could be created. */\r\n        this._context = Context.request(this._element, attributes);\r\n        this.configureController(dataset);\r\n\r\n        this.configureSizeAndScale(dataset);\r\n\r\n        this.configureContextLostAndRestore();\r\n        this.configureContextLostAndRestoreEmulation();\r\n\r\n        /* Retrieve clear color from data attributes or set default. */\r\n        let dataClearColor: vec4 | undefined;\r\n        if (dataset.clearColor) {\r\n            dataClearColor = parseVec4(dataset.clearColor);\r\n            logIf(dataClearColor === undefined, LogLevel.Warning,\r\n                `data-clear-color could not be parsed, given '${dataset.clearColor}'`);\r\n        }\r\n        this._clearColor = dataClearColor ?\r\n            new Color(tuple4<GLclampf>(dataClearColor)) : Canvas.DEFAULT_CLEAR_COLOR;\r\n\r\n        /* Retrieve frame precision (e.g., accumulation format) from data attributes or set default */\r\n        let dataFramePrecision = dataset.accumulationFormat ?\r\n            dataset.accumulationFormat as Wizard.Precision : Canvas.DEFAULT_FRAME_PRECISION;\r\n        if (!(dataFramePrecision in Wizard.Precision)) {\r\n            dataFramePrecision = Canvas.DEFAULT_FRAME_PRECISION;\r\n            log(LogLevel.Warning,\r\n                `unknown frame precision '${dataset.accumulationFormat}' changed to '${dataFramePrecision}'`);\r\n        }\r\n        this._framePrecision = dataFramePrecision;\r\n        this.framePrecisionNext();\r\n    }\r\n\r\n    /**\r\n     * Creates and initializes a new controller that is used for this canvas. If provided via data attributes\r\n     * multi-frame number and debug-frame number are set.\r\n     * @param dataset - The attributes data-multi-frame-number and data-debug-frame-number are supported.\r\n     */\r\n    protected configureController(dataset: DOMStringMap): void {\r\n        /* Create and setup a multi-frame controller. */\r\n        this._controller = new Controller();\r\n        this._controller.block(); // Remain in block mode until renderer is bound and configured.\r\n\r\n        /* Retrieve multi-frame number from data attributes or set default. */\r\n        let dataMFNum: number | undefined;\r\n        if (dataset.multiFrameNumber) {\r\n            dataMFNum = parseInt(dataset.multiFrameNumber, 10);\r\n            logIf(isNaN(dataMFNum), LogLevel.Warning,\r\n                `data-multi-frame-number could not be parsed, given '${dataset.multiFrameNumber}'`);\r\n        }\r\n\r\n        /* Retrieve debug-frame number from data attributes or set default. */\r\n        let dataDFNum: number | undefined;\r\n        if (dataset.debugFrameNumber) {\r\n            dataDFNum = parseInt(dataset.debugFrameNumber, 10);\r\n            logIf(isNaN(dataDFNum), LogLevel.Warning,\r\n                `data-debug-frame-number could not be parsed, given '${dataset.debugFrameNumber}'`);\r\n        }\r\n\r\n        this._controller.multiFrameNumber = dataMFNum ? dataMFNum : Canvas.DEFAULT_MULTI_FRAME_NUMBER;\r\n        this._controller.debugFrameNumber = dataDFNum ? dataDFNum : 0;\r\n\r\n        const mfNumChanged = dataMFNum ? dataMFNum !== this._controller.multiFrameNumber : false;\r\n        logIf(mfNumChanged, LogLevel.Warning, `data-multi-frame-number changed to `\r\n            + `${this._controller.multiFrameNumber}, given '${dataset.multiFrameNumber}'`);\r\n\r\n        const dfNumChanged = dataDFNum ? dataDFNum !== this._controller.debugFrameNumber : false;\r\n        logIf(dfNumChanged, LogLevel.Warning, `data-debug-frame-number changed to `\r\n            + `${this._controller.debugFrameNumber}, given '${dataset.debugFrameNumber}'`);\r\n    }\r\n\r\n\r\n    /**\r\n     * Initializes the frame size and scale. By default, the scale is 1.0 for width and height and the size reflects\r\n     * the native canvas size.\r\n     * @param dataset - The attributes data-frame-size and data-frame-scale are supported.\r\n     */\r\n    protected configureSizeAndScale(dataset: DOMStringMap): void {\r\n\r\n        /* Setup frame scale with respect to the canvas size. */\r\n        let dataFrameScale: vec2 | undefined;\r\n        if (dataset.frameScale) {\r\n            dataFrameScale = parseVec2(dataset.frameScale);\r\n            logIf(dataset.frameScale !== undefined && dataFrameScale === undefined, LogLevel.Warning,\r\n                `data-frame-scale could not be parsed, given '${dataset.frameScale}'`);\r\n        }\r\n        this._frameScale = dataFrameScale ? tuple2<GLfloat>(dataFrameScale) : [1.0, 1.0];\r\n\r\n        /* Setup frame size. */\r\n        let dataFrameSize: vec2 | undefined;\r\n        if (dataset.frameSize) {\r\n            dataFrameSize = parseVec2(dataset.frameSize);\r\n            logIf(dataset.frameSize !== undefined && dataFrameSize === undefined, LogLevel.Warning,\r\n                `data-frame-size could not be parsed, given '${dataset.frameSize}'`);\r\n        }\r\n        this._favorSizeOverScale = dataFrameSize !== undefined;\r\n        this._frameSize = dataFrameSize ? tuple2<GLsizei>(dataFrameSize) : [this._size[0], this._size[1]];\r\n\r\n        this.onResize(); // invokes frameScaleNext and frameSizeNext\r\n    }\r\n\r\n    /**\r\n     * Register 'webglcontextlost' and 'webglcontextrestored' to handle lost and restoration\r\n     * of WebGL contexts.\r\n     */\r\n    protected configureContextLostAndRestore(): void {\r\n        this._element.addEventListener('webglcontextlost', (event) => {\r\n            event.preventDefault();\r\n            this.onContextLost();\r\n        }, false);\r\n        this._element.addEventListener('webglcontextrestored', () => {\r\n            this.onContextRestore();\r\n        }, false);\r\n    }\r\n\r\n    /**\r\n     * Obtain the WEBGL_lose_context extension, store it with this canvas instance and use it\r\n     * for emulation of the context lost and restore feature.\r\n     */\r\n    protected configureContextLostAndRestoreEmulation(): void {\r\n        this._lostContextExtension = this._context.gl.getExtension('WEBGL_lose_context');\r\n    }\r\n\r\n    /**\r\n     * Handle a WebGL context lost event.\r\n     * This is for both natural and emulated lost contexts.\r\n     */\r\n    protected onContextLost(): void {\r\n        log(LogLevel.Warning, 'WebGL Context lost. Discarding renderer...');\r\n        this._controller.cancel();\r\n        this._controller.block();\r\n\r\n        if (this._renderer) {\r\n            this._renderer.discard();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle a WebGL context restore event.\r\n     * This is for both natural and emulated restored contexts.\r\n     */\r\n    protected onContextRestore(): void {\r\n        log(LogLevel.Warning, 'WebGL Context restored. Reinitializing renderer...');\r\n        const renderer = this._renderer;\r\n        this.unbind();\r\n        this.bind(renderer);\r\n        this._controller.unblock();\r\n\r\n        /*\r\n        *  Dirtiest force of redraw that is required for Firefox.\r\n        *  More subtle redraw strategies seems to not be working for my Firefox 75.0\r\n        *  This results in blank flashes for one frame, but on other browsers this is\r\n        *  the behavior without redraw any way so we can perform this code on any system.\r\n        *\r\n        *  TODO: need to check for mobile, though.\r\n        */\r\n        const formerVisibility = this._element.style.visibility;\r\n        this._element.style.visibility = 'hidden';\r\n        // tslint:disable-next-line:no-unused-expression\r\n        this._element.offsetHeight;\r\n        this._element.style.visibility = formerVisibility;\r\n        /* */\r\n    }\r\n\r\n    /**\r\n     * Convenience function that triggers the canvas size retrieval. The native width and height of the canvas dom\r\n     * element is cached (in pixel).\r\n     */\r\n    protected retrieveSize(): void {\r\n        const size = Resizable.elementSize(this._element);\r\n        if (size === undefined) {\r\n            this._size = [0, 0];\r\n            return;\r\n        }\r\n        this._size = [size[0], size[1]];\r\n        this.sizeNext();\r\n    }\r\n\r\n    /**\r\n     * Resize is invoked by the resizable mixin. It retrieves the canvas size and promotes it to the renderer.\r\n     */\r\n    protected onResize(): void {\r\n        this.retrieveSize();\r\n\r\n        /* If the canvas does not have a size, block rendering. This can happen if the canvas is, e.g., hidden and\r\n        DOM layouting leads to width of zero. */\r\n        if (this._size[0] === 0 || this._size[1] === 0) {\r\n            log(LogLevel.Debug, `canvas width or height is invalid, resize discarded and controller blocked`);\r\n            this._controller.block();\r\n            return;\r\n        }\r\n\r\n        /**\r\n         * Set canvas rendering size to pixel size of the canvas. This assures a 1 to 1 mapping of native pixels to\r\n         * fragments and thus should prevent upscaling.\r\n         */\r\n        this._element.width = this._size[0];\r\n        this._element.height = this._size[1];\r\n\r\n        if (this._renderer) {\r\n            this._controller.block();\r\n        }\r\n\r\n        if (this._favorSizeOverScale) {\r\n            this.frameSize = this._frameSize;\r\n        } else {\r\n            this.frameScale = this._frameScale;\r\n        }\r\n\r\n        if (this._renderer) {\r\n            this._controller.unblock();\r\n            /* Swapping here fixes flickering while resizing the canvas for safari. */\r\n            this._renderer.swap();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Utility for communicating this._framePrecision changes to its associated subject.\r\n     */\r\n    protected framePrecisionNext(): void {\r\n        this._framePrecisionSubject.next(this._framePrecision);\r\n    }\r\n\r\n    /**\r\n     * Utility for communicating this._size changes to its associated subject.\r\n     */\r\n    protected sizeNext(): void {\r\n        this._sizeSubject.next(this._size);\r\n    }\r\n\r\n    /**\r\n     * Utility for communicating this._frameScale changes to its associated subject.\r\n     */\r\n    protected frameScaleNext(): void {\r\n        this._frameScaleSubject.next(this._frameScale);\r\n    }\r\n\r\n    /**\r\n     * Utility for communicating this._frameSize changes to its associated subject.\r\n     */\r\n    protected frameSizeNext(): void {\r\n        this._frameSizeSubject.next(this._frameSize);\r\n    }\r\n\r\n\r\n    /**\r\n     * The renderer (if not undefined) will be connected to the controller and navigation. The controller will\r\n     * immediately trigger a multi-frame, thereby causing the renderer to render frames.\r\n     *\r\n     * Note that no renderer should be bound to multiple canvases\r\n     * simultaneously. The reference is non owning.\r\n     *\r\n     * @param renderer - Either undefined or an uninitialized renderer.\r\n     */\r\n    protected bind(renderer: Renderer | undefined): void {\r\n        if (this._renderer === renderer) {\r\n            return;\r\n        }\r\n        this.unbind(); // block controller\r\n        if (renderer === undefined) {\r\n            return;\r\n        }\r\n        assert(this._controller.blocked, `expected controller to be blocked`);\r\n        this._renderer = renderer;\r\n\r\n        /**\r\n         * Note: a renderer that is to be bound to a canvas is expected to be not initialized. For it, initializable\r\n         * throws on re-initialization. Similarly to the frame callback for the controller, the controller's update\r\n         * method is assigned to the pipelines invalidation event.\r\n         */\r\n        this._renderer.initialize(this.context, (force) => this._controller.update(force),\r\n            {\r\n                pointerEventProvider: this._pointerEventProvider,\r\n                mouseEventProvider: this._mouseEventProvider,\r\n                eyeGazeEventProvider: this._eyeGazeEventProvider,\r\n                keyboardEventProvider: this._keyboardEventProvider,\r\n            });\r\n\r\n        this._renderer.frameSize = this._frameSize;\r\n        this._renderer.clearColor = this._clearColor.rgba;\r\n        this._renderer.framePrecision = this._framePrecision;\r\n        this._renderer.debugTexture = -1;\r\n\r\n        /**\r\n         * Note: again, no asserts required since controller and renderer already take care of that.\r\n         * Assign the renderer's update, frame, and swap method to the controller's frame and swap event callback.\r\n         * The assignments trigger immediate update and subsequently updates on invalidation.\r\n         */\r\n        this._controller.controllable = this._renderer;\r\n        this._controller.unblock();\r\n    }\r\n\r\n    /**\r\n     * Unbinds the current renderer from the canvas as well as the controller and navigation, and uninitializes the\r\n     * renderer.\r\n     */\r\n    protected unbind(): void {\r\n        if (this._renderer === undefined) {\r\n            return;\r\n        }\r\n\r\n        this._controller.block();\r\n        /**\r\n         * Since canvas is not the owner of the renderer it should not dispose it. However, the canvas manages the\r\n         * initialization of bound pipelines.\r\n         */\r\n        this._controller.controllable = undefined;\r\n        this._renderer = undefined;\r\n    }\r\n\r\n\r\n    /**\r\n     * Uninitializes and deletes the controller as well as all other properties.\r\n     */\r\n    dispose(): void {\r\n        super.dispose();\r\n\r\n        if (this._renderer) {\r\n            this._renderer.uninitialize();\r\n            this.unbind();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Allows for explicit trigger of onResize, e.g., in case resize event-handling is managed explicitly ...\r\n     */\r\n    resize(): void {\r\n        this.onResize();\r\n    }\r\n\r\n\r\n    /**\r\n     * Single controller that is managing the rendering control flow of a bound renderer.\r\n     * @returns - The controller used by the canvas.\r\n     */\r\n    get controller(): Controller {\r\n        return this._controller;\r\n    }\r\n\r\n    /**\r\n     * The currently bound renderer. If no renderer is bound, undefined is returned. If a renderer is bound, it should\r\n     * always be initialized (renderer initialization handled by the canvas).\r\n     * @returns - The currently bound renderer.\r\n     */\r\n    get renderer(): Renderer | undefined {\r\n        return this._renderer;\r\n    }\r\n\r\n    /**\r\n     * Binds a renderer to the canvas. A previously bound renderer will be unbound (see bind and unbind).\r\n     * @param renderer - A renderer object or undefined.\r\n     */\r\n    set renderer(renderer: Renderer | undefined) {\r\n        this.bind(renderer);\r\n    }\r\n\r\n    /**\r\n     * Targeted scale for rendering with respect to the canvas size. This property can be observed, e.g.,\r\n     * `canvas.frameScaleObservable.subscribe()`.\r\n     * @returns - The frame scale in [0.0, 1.0].\r\n     */\r\n    get frameScale(): GLclampf2 {\r\n        return this._frameScale;\r\n    }\r\n\r\n    /**\r\n     * Set the targeted scale for rendering with respect to the canvas size. The scale will be clamped to [0.0,1.0]. A\r\n     * scale of 0.0 results in 1px frame resolution for the respective component.\r\n     * The frame scale allows to detach the rendering resolution from the native canvas resolution, e.g., in order to\r\n     * decrease rendering cost. The frame resolution can also be specified explicitly by width and height. Non-finite\r\n     * values will be ignored.\r\n     * @param frameScale - Scale of rendering.\r\n     * @returns - The frame scale in [0.0,1.0].\r\n     */\r\n    set frameScale(frameScale: GLclampf2) {\r\n        if (!isFinite(frameScale[0]) || !isFinite(frameScale[1])) {\r\n            log(LogLevel.Warning, `expected finite frame size, non-finite values ignored, given [${frameScale}]`);\r\n            return;\r\n        }\r\n        /* Always apply frame scale, e.g., when canvas is resized scale remains same, but frame size will change. */\r\n        logIf(frameScale[0] < 0.0 || frameScale[0] > 8.0, LogLevel.Info,\r\n            `frame width scale clamped to [0.0,2.0], given ${frameScale[0]}`);\r\n        logIf(frameScale[1] < 0.0 || frameScale[1] > 8.0, LogLevel.Info,\r\n            `frame height scale clamped to [0.0,2.0], given ${frameScale[0]}`);\r\n\r\n        const scale = vec2.create();\r\n        clamp2(scale, frameScale, [0.0, 0.0], [8.0, 8.0]);\r\n\r\n        const size = vec2.create();\r\n        vec2.mul(size, this._size, scale);\r\n        vec2.max(size, [1, 1], size);\r\n        vec2.round(size, size);\r\n\r\n        /* Adjust scale based on rounded (integer) frame size. */\r\n        vec2.div(scale, size, this._size);\r\n        logIf(!vec2.exactEquals(scale, frameScale), 2,\r\n            `frame scale was adjusted to ${scale.toString()}, given ${frameScale.toString()}`);\r\n\r\n        this._frameScale = tuple2<GLclampf>(scale);\r\n        this._frameSize = tuple2<GLsizei>(size);\r\n        this._favorSizeOverScale = false;\r\n\r\n        this.frameScaleNext();\r\n        this.frameSizeNext();\r\n\r\n        if (this._renderer) {\r\n            this._renderer.frameSize = this._frameSize;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Observable that can be used to subscribe to frame scale changes.\r\n     */\r\n    get frameScale$(): Observable<GLclampf2> {\r\n        return this._frameScaleSubject.asObservable();\r\n    }\r\n\r\n\r\n    /**\r\n     * Targeted resolution (width and height) for rendering in pixel. This property can be observed, e.g.,\r\n     * `canvas.frameSizeObservable.subscribe()`.\r\n     * @returns - The frame size in pixel (must not be physical/native pixels).\r\n     */\r\n    get frameSize(): GLsizei2 {\r\n        return this._frameSize;\r\n    }\r\n\r\n    /**\r\n     * Set the targeted size for rendering in pixels. The size will be clamped to [1, canvas-size]. The frame size\r\n     * allows to detach the rendering resolution from the native canvas resolution, e.g., in order to decrease\r\n     * rendering cost. Non-finite values will be ignored.\r\n     * The render resolution can also be specified implicitly by width and height in scale (@see frameScale).\r\n     * @param frameSize - Size for rendering in pixel (must not be physical/native pixels).\r\n     * @returns - The frame size in [1, canvas-size].\r\n     */\r\n    set frameSize(frameSize: GLsizei2) {\r\n        if (!isFinite(frameSize[0]) || !isFinite(frameSize[1])) {\r\n            log(LogLevel.Warning, `expected finite frame size, non-finite values ignored, given [${frameSize}]`);\r\n            return;\r\n        }\r\n        logIf(frameSize[0] < 1 || frameSize[0] > 8 * this._size[0], LogLevel.Info,\r\n            `frame width scale clamped to [1,${this._size[0]}], given ${frameSize[0]}`);\r\n        logIf(frameSize[1] < 1 || frameSize[1] > 8 * this._size[1], LogLevel.Info,\r\n            `frame height scale clamped to [1, ${this._size[1]}], given ${frameSize[1]}`);\r\n\r\n        const size = vec2.create();\r\n        clamp2(size, frameSize, [1.0, 1.0], [8 * this._size[0], 8 * this._size[1]]);\r\n        vec2.round(size, size);\r\n\r\n        logIf(!vec2.exactEquals(size, frameSize), LogLevel.Warning,\r\n            `frame size was adjusted to ${size.toString()}, given ${frameSize.toString()}`);\r\n\r\n        const scale = vec2.create();\r\n        vec2.div(scale, size, this._size);\r\n\r\n        this._frameScale = tuple2<GLclampf>(scale);\r\n        this._frameSize = tuple2<GLsizei>(size);\r\n        /* Switch back to default mode (scale based) when frame size matches canvas size. */\r\n        this._favorSizeOverScale = !vec2.exactEquals(this._frameSize, this._size);\r\n\r\n        this.frameScaleNext();\r\n        this.frameSizeNext();\r\n\r\n        if (this._renderer) {\r\n            this._renderer.frameSize = this._frameSize;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Observable that can be used to subscribe to frame size changes.\r\n     */\r\n    get frameSize$(): Observable<GLsizei2> {\r\n        return this._frameSizeSubject.asObservable();\r\n    }\r\n\r\n\r\n    /**\r\n     * Getter for the canvas's clear color. The clear color is provided to the renderer (on bind). Since this is a\r\n     * canvas specific setting it is stored here, not in a renderer or controller.\r\n     * @returns - Color object passed to any renderer bound to this canvas.\r\n     */\r\n    get clearColor(): Color {\r\n        return this._clearColor;\r\n    }\r\n\r\n    /**\r\n     * Sets the clear color that is then passed to the currently bound renderer as well as to any pipelines bound in\r\n     * the future. The provided color will be clamped to [0.0;1.0] for every component.\r\n     * @param clearColor - Color object that will be referenced.\r\n     */\r\n    set clearColor(clearColor: Color) {\r\n        this._clearColor = clearColor;\r\n        if (this._renderer) {\r\n            this._renderer.clearColor = this._clearColor.rgba;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Getter for the targeted frame precision. This property can be observed, e.g.,\r\n     * `canvas.framePrecisionObservable.subscribe()`.\r\n     * @returns - Accumulation format as string passed to any renderer bound.\r\n     */\r\n    get framePrecision(): Wizard.Precision {\r\n        return this._framePrecision;\r\n    }\r\n\r\n    /**\r\n     * Sets the targeted frame precision that is then passed to the currently bound renderer as well as to any renderers\r\n     * bound in the future. This might be used for frame accumulation in multi-frame based rendering.\r\n     * @param precision - Frame precision, 'float', 'half', 'byte' or 'auto' are supported.\r\n     */\r\n    set framePrecision(precision: Wizard.Precision) {\r\n        this._framePrecision = precision;\r\n\r\n        if (this._renderer) {\r\n            this._renderer.framePrecision = this._framePrecision;\r\n            this._framePrecision = this._renderer.framePrecision; // might change due to missing support\r\n        }\r\n        this.framePrecisionNext();\r\n    }\r\n\r\n    /**\r\n     * Observable that can be used to subscribe to frame precision changes.\r\n     */\r\n    get framePrecision$(): Observable<string> {\r\n        return this._framePrecisionSubject.asObservable();\r\n    }\r\n\r\n\r\n    /**\r\n     * Provides access to the WebGL context (leaky abstraction).\r\n     */\r\n    get context(): Context {\r\n        return this._context;\r\n    }\r\n\r\n    /**\r\n     * Getter for the created rendering backend (webgl context type).\r\n     * @returns - Backend that was created on construction, either 'webgl' or 'webgl2' based on which one was created\r\n     * successfully. If no context could be created undefined is returned.\r\n     */\r\n    get backend(): string {\r\n        return this._context.backendString as string;\r\n    }\r\n\r\n\r\n    /**\r\n     * Size of the canvas measured in physical/native screen pixels. This is the 'managed' canvas width and height. The\r\n     * unmanaged canvas width and height are available via context.gl.canvas.width and context.gl.canvas.height (which\r\n     * should always be the same).\r\n     * This property can be observed, e.g., `allocationRegister.bytesObservable.subscribe()`.\r\n     * @returns - The canvas width and height in physical/native screen pixels as 2-tuple.\r\n     */\r\n    get size(): GLsizei2 {\r\n        return this._size;\r\n    }\r\n\r\n    /**\r\n     * Observable that can be used to subscribe to canvas size changes.\r\n     */\r\n    get size$(): Observable<GLsizei2> {\r\n        return this._sizeSubject.asObservable();\r\n    }\r\n\r\n\r\n    /**\r\n     * Width of the canvas measured in physical/native screen pixels. This is the 'managed' canvas width. The\r\n     * unmanaged canvas width is available via context.gl.canvas_width (which should always be the same).\r\n     * @returns - The canvas width in physical/native screen pixels.\r\n     */\r\n    get width(): GLsizei {\r\n        return this._size[0];\r\n    }\r\n\r\n    /**\r\n     * Height of the canvas measured in physical/native screen pixels. This is the 'managed' canvas height. The\r\n     * unmanaged canvas height is available via context.gl.canvas_height (which should always be the same).\r\n     * @returns - The canvas height in physical/native screen pixels.\r\n     */\r\n    get height(): GLsizei {\r\n        return this._size[1];\r\n    }\r\n\r\n\r\n    /**\r\n     * Canvas element within the HTML5 document.\r\n     */\r\n    get element(): HTMLElement {\r\n        return this._element;\r\n    }\r\n\r\n\r\n    /**\r\n     * Canvas mouse event provider referring to the canvas element.\r\n     */\r\n    get mouseEventProvider(): MouseEventProvider {\r\n        return this._mouseEventProvider;\r\n    }\r\n\r\n    /**\r\n     * Canvas touch event provider referring to the canvas element.\r\n     */\r\n    get touchEventProvider(): TouchEventProvider {\r\n        return this._touchEventProvider;\r\n    }\r\n\r\n    get keyboardEventProvider(): KeyboardEventProvider {\r\n        return this._keyboardEventProvider;\r\n    }\r\n\r\n    /**\r\n     * Emulate a WebGL context loss.\r\n     * This functionality requires to have configureContextLostAndRestoreEmulation() called before.\r\n     * This function is usually called within the constructor of this canvas.\r\n     */\r\n    public testLoseContext(): void {\r\n        if (this._lostContextExtension === undefined) {\r\n            return;\r\n        }\r\n\r\n        this._lostContextExtension.loseContext();\r\n    }\r\n\r\n    /**\r\n     * Emulate a WebGL context restore.\r\n     * This functionality requires to have configureContextLostAndRestoreEmulation() called before.\r\n     * This function is usually called within the constructor of this canvas.\r\n     */\r\n    public testRestoreContext(): void {\r\n        if (this._lostContextExtension === undefined) {\r\n            return;\r\n        }\r\n\r\n        this._lostContextExtension.restoreContext();\r\n    }\r\n\r\n    /**\r\n     * Eye gaze event provider referring to the canvas element.\r\n     */\r\n    get eyeGazeEventProvider(): EyeGazeEventProvider {\r\n        return this._eyeGazeEventProvider;\r\n    }\r\n\r\n    /**\r\n     * Activates the eye gaze event provider referring to the canvas element.\r\n     */\r\n    public activateEyeGazeEventProvider(eyeGazeDataStreams: EyeGazeDataStreams, serverAddress: string): void {\r\n        this._eyeGazeEventProvider = new EyeGazeEventProvider(eyeGazeDataStreams, serverAddress);\r\n    }\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { Canvas } from './canvas';\r\nimport { assert } from './auxiliaries';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\ndeclare let MediaRecorder: any;\r\n\r\ntype CanvasCaptureMediaStream = any;\r\ntype MediaRecorder = any;\r\ntype ImagesAvailableCallback = (images: Array<Blob>) => void;\r\n\r\n/**\r\n * Class to record the contents of a Canvas.\r\n * Some time after stopping the CanvasRecorder the recorded images will be available as Array of Blobs. The images can\r\n * be retrieved by setting the onImagesAvailable callback.\r\n * Exemplary usage:\r\n * ```\r\n * const recorder = new gloperate.CanvasRecorder(canvas);\r\n * recorder.start(30, 'video/webm', 2.0 * 2**20);\r\n * ...\r\n * recorder.stop();\r\n * recorder.download();\r\n * ```\r\n */\r\nexport class CanvasRecorder {\r\n\r\n    protected _canvas: Canvas;\r\n\r\n    protected _stream: CanvasCaptureMediaStream;\r\n    protected _recorder: MediaRecorder;\r\n    protected _state: CanvasRecorder.State;\r\n\r\n    protected _images: Array<Blob>;\r\n    protected _mimeType: string;\r\n    protected _onImagesAvailable: ImagesAvailableCallback | undefined;\r\n\r\n    /**\r\n     * Checks whether recording the canvas is supported.\r\n     */\r\n    static isSupported(): boolean {\r\n        return (window as any).MediaRecorder !== undefined;\r\n    }\r\n\r\n    /**\r\n     * Checks whether the given MIME type is supported.\r\n     * @param type - MIME type to check.\r\n     */\r\n    static isMIMETypeSupported(type: string): boolean {\r\n        return MediaRecorder.isTypeSupported(type);\r\n    }\r\n\r\n    /**\r\n     * Creates a CanvasRecorder. Throws, if it is not supported on the used platform.\r\n     * @param canvas - The canvas to record.\r\n     */\r\n    constructor(canvas: Canvas) {\r\n        assert(CanvasRecorder.isSupported(), 'Recording the canvas is not supported.');\r\n\r\n        this._canvas = canvas;\r\n        this._state = CanvasRecorder.State.INACTIVE;\r\n        this._images = new Array<Blob>();\r\n    }\r\n\r\n    /**\r\n     * Starts recording the the canvas. If the given fps is 0 it won't automatically record. Instead {@link frame} has\r\n     * to be called every time a new frame should get recorded. Must not be called with negative fps, while already\r\n     * recording or with an unsupported MIME type.\r\n     * @param fps - Maximum fps to record in.\r\n     * @param mimeType - The MIME video type.\r\n     */\r\n    start(fps: number, mimeType: string = 'video/webm', bitsPerSecond: number = 4 * 2 ** 20): void {\r\n\r\n        assert(fps >= 0, 'FPS has to be positive');\r\n        assert(this._state === CanvasRecorder.State.INACTIVE, 'Recorder has to be inactive.');\r\n        assert(CanvasRecorder.isMIMETypeSupported(mimeType), `MIME type: ${mimeType} is not supported.`);\r\n\r\n        this._stream = (this._canvas.element as any).captureStream(fps);\r\n        this._recorder = new MediaRecorder(this._stream, { mimeType, bitsPerSecond });\r\n        this._images.length = 0;\r\n        this._mimeType = mimeType;\r\n\r\n\r\n        this._recorder.ondataavailable = (event: any) => this._images.push(event.data);\r\n        this._recorder.onstop = () => { if (this._onImagesAvailable) this._onImagesAvailable(this._images); }\r\n\r\n        this._recorder.start();\r\n\r\n        this._state = CanvasRecorder.State.RECORDING;\r\n    }\r\n\r\n    /**\r\n     * Stops recording the canvas. Must not be called while not already recording.\r\n     */\r\n    stop(): void {\r\n        assert(this._state !== CanvasRecorder.State.INACTIVE, 'Recorder must not be inactive.');\r\n\r\n        const tracks = this._stream.getTracks();\r\n        assert(tracks.length === 1, 'CanvasRecorder uses outdated version of MediaStream API.');\r\n\r\n        this._recorder.stop();\r\n        tracks[0].stop();\r\n\r\n        this._recorder = undefined;\r\n        this._stream = undefined;\r\n\r\n        this._state = CanvasRecorder.State.INACTIVE;\r\n    }\r\n\r\n    /**\r\n     * Pauses recording. Can be later resumed with {@link resume}.\r\n     * Must not be called while not already recording.\r\n     */\r\n    pause(): void {\r\n        assert(this._state !== CanvasRecorder.State.INACTIVE, 'Recorder must not be inactive.');\r\n\r\n        this._recorder.pause();\r\n\r\n        this._state = CanvasRecorder.State.PAUSED;\r\n    }\r\n\r\n    /**\r\n     * Resumes recording.\r\n     * Must not be called while not already recording.\r\n     */\r\n    resume(): void {\r\n        assert(this._state !== CanvasRecorder.State.INACTIVE, 'Recorder must not be inactive.');\r\n\r\n        this._recorder.resume();\r\n\r\n        this._state = CanvasRecorder.State.RECORDING;\r\n    }\r\n\r\n    /**\r\n     * Explicitly records a single frame from the canvas. This can be used when {@link start} was called with fps = 0.\r\n     */\r\n    frame(): void {\r\n        assert(this._state === CanvasRecorder.State.RECORDING, 'Recorder has to be recording.');\r\n\r\n        const tracks = this._stream.getTracks();\r\n        assert(tracks.length === 1, 'CanvasRecorder uses unknown implementation of MediaStream API.');\r\n        assert(this._stream.requestFrame || tracks[0].requestFrame,\r\n            'CanvasRecorder uses unknown implementation of MediaStream API.');\r\n\r\n        // Per MDN captureStream should return a MediaStream, which contains exactly 1 CanvasCaptureMediaStreamTrack.\r\n        // Chrome + new Edge implements it exactly like that. Firefox instead returns CanvasCaptureMediaStream, which\r\n        // contains exactly 1 MediaStreamTrack. Since neither a MediaStream nor a MediaStreamTrack offer the possibility\r\n        // to request a frame we have to differentiate between the two.\r\n        if (this._stream.requestFrame) {\r\n            this._stream.requestFrame();\r\n        } else {\r\n            tracks[0].requestFrame();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates a temporary hyperlink element and triggers a download of the blob with the given file name. Both, the\r\n     * hyperlink element and the blob url are removed automatically shortly after the hyperlink click was triggered.\r\n     */\r\n    download(fileName: string): void {\r\n\r\n        const url = URL.createObjectURL(this.blob);\r\n        const element: HTMLElement = document.createElement('a');\r\n\r\n        element.style.display = 'none';\r\n        element.setAttribute('href', url);\r\n        element.setAttribute('download', fileName);\r\n\r\n        document.body.appendChild(element);\r\n        element.click();\r\n\r\n        setTimeout(() => {\r\n            document.body.removeChild(element);\r\n            window.URL.revokeObjectURL(url);\r\n        }, 256);\r\n    }\r\n\r\n    /**\r\n     * Returns the recorded images. Note: Images are not necessarily immediately available after stopping.\r\n     */\r\n    get images(): Array<Blob> {\r\n        return this._images;\r\n    }\r\n\r\n    /**\r\n     * Returns the state the CanvasRecorder currently is in.\r\n     */\r\n    get state(): CanvasRecorder.State {\r\n        return this._state;\r\n    }\r\n\r\n    /**\r\n     * Returns a new blob of all recorded, available images.\r\n     */\r\n    get blob(): Blob {\r\n        return new Blob(this._images, { type: this._mimeType });\r\n    }\r\n\r\n    /**\r\n     * Sets the onImagesAvailable callback.\r\n     */\r\n    set onImagesAvailable(callback: ImagesAvailableCallback) {\r\n        this._onImagesAvailable = callback;\r\n    }\r\n}\r\n\r\n\r\nexport namespace CanvasRecorder {\r\n\r\n    export enum State {\r\n        INACTIVE,\r\n        RECORDING,\r\n        PAUSED,\r\n    }\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { assert } from './auxiliaries';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * Utility class to replicate the structure of all alterable properties of a class to. This was initially designed\r\n * to be used in combination with an `alterable` decorator (but instance-based property decoration does not work\r\n * yet). For now though, this is used for explicit alterable structure replication and management.\r\n * ```\r\n * const alterable = {\r\n *     any: false,\r\n *     data: { any: false, alpha: false, beta: false },\r\n *     modifier: false };\r\n *\r\n * const altered = Object.assign(new ChangeLookup(), alterable);\r\n * altered.alter('data.beta');\r\n * if(altered.data.any) { ... }\r\n * ```\r\n */\r\nexport class ChangeLookup {\r\n\r\n    /**\r\n     * Also allow for string-based index access in TypeScript.\r\n     */\r\n    [index: string]: boolean | any;\r\n\r\n\r\n    /**\r\n     * One step of the recursive traversal of a given properties path in order to invalidate the alteration states.\r\n     * Please note, that this is design is not intended for very large structures since no caching is applied.\r\n     * @param path - Relative path w.r.t. to the given property.\r\n     * @param property - Property to continue traversal of the given relative path on.\r\n     */\r\n    protected static alter(path: string, property: any): void {\r\n\r\n        // eslint-disable-next-line no-prototype-builtins\r\n        assert(property.hasOwnProperty('any'), `expected alterable object to provide 'any' key`);\r\n        property.any = true;\r\n\r\n        const names = path.split('.');\r\n        const name = names.shift()!;\r\n\r\n        // eslint-disable-next-line no-prototype-builtins\r\n        assert(name === '' || property.hasOwnProperty(name),\r\n            `expected object to have key '${name}' in order to capture alterations`);\r\n\r\n        if (name !== '' && typeof property[name] !== 'object') {\r\n            property[name] = true;\r\n            return;\r\n        }\r\n\r\n        if (name !== '' && names.length > 0) {\r\n            ChangeLookup.alter(names.join('.'), property[name]);\r\n            return;\r\n        }\r\n\r\n        const parent = name !== '' ? property[name] : property;\r\n        for (const child of Object.getOwnPropertyNames(parent)) {\r\n            if (child === 'any') {\r\n                continue;\r\n            }\r\n            ChangeLookup.alter(child, parent);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Resets all nested alteration states of a given parent property recursively. Children of object type are\r\n     * recursively reset. Every other child is directly set to false (including any).\r\n     * @param property - Property to reset alteration states of.\r\n     */\r\n    protected static reset(property: any): void {\r\n        for (const name of Object.getOwnPropertyNames(property)) {\r\n            if (typeof property[name] === 'object') {\r\n                ChangeLookup.reset(property[name]);\r\n                continue;\r\n            }\r\n            property[name] = false;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Alters the given key as well as the `any` element of all parent objects. For example, the key 'foo.bar' would\r\n     * cause `altered.foo.bar` and `altered.foo.any` as well as `altered.any` to be true. Note that the `altered`\r\n     * object should only be modified using this method to avoid erroneous states.\r\n     * @param path - Full object path to the altered key (keys joined using '.', e.g., 'foo.bar'). If the path is\r\n     * referring to an object, the alteration is propagated top-down to all children.\r\n     */\r\n    alter(path: string): void {\r\n        return ChangeLookup.alter(path, this);\r\n    }\r\n\r\n    /**\r\n     * Reset all alteration states to false.\r\n     */\r\n    reset(): void {\r\n        return ChangeLookup.reset(this);\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { vec4 } from 'gl-matrix';\r\nimport { clamp, mix } from './gl-matrix-extensions';\r\n\r\nimport { assert, log, LogLevel } from './auxiliaries';\r\nimport { clampf, clampf3, clampf4, duplicate4, equals4, GLclampf3, GLclampf4, GLclampf5 } from './tuples';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/** @todo remove this when webgl types are working again. */\r\nexport type GLubyte = number;\r\n\r\n\r\n/**\r\n * Color class that allows for specification and conversion of colors in various color spaces. Please not that most of\r\n * the color conversion math is based on  {@link https://www.easyrgb.com/en/math.php}. The internal color representation\r\n * is a 4-tuple of GLclampf components in RGB color space and additional alpha. All color conversion, e.g., getters is\r\n * computed on the fly, not cached, and is not optimized for, e.g., massive pixel processing.\r\n */\r\nexport class Color {\r\n\r\n    protected static readonly DEFAULT_ALPHA: GLclampf = 1.0;\r\n    protected static readonly HEX_FORMAT_REGEX = new RegExp(/^(#|0x)?(([0-9a-f]{3}){1,2}|([0-9a-f]{4}){1,2})$/i);\r\n\r\n    protected _rgba: GLclampf4 = [0.0, 0.0, 0.0, Color.DEFAULT_ALPHA];\r\n\r\n\r\n    /** @see {@link altered} */\r\n    protected _altered = false;\r\n\r\n\r\n    /**\r\n     * Converts a hue value into an rgb value.\r\n     */\r\n    protected static hue2rgb(p: GLfloat, q: GLfloat, t: GLfloat): GLfloat {\r\n        assert(t >= -1.0 && t <= 2.0, `t is expected to be between -1 and 2`);\r\n        if (t < 0.0) {\r\n            t += 1.0;\r\n        } else if (t > 1.0) {\r\n            t -= 1.0;\r\n        }\r\n\r\n        if ((6.0 * t) < 1.0) {\r\n            return p + (q - p) * 6.0 * t;\r\n        }\r\n        if ((2.0 * t) < 1.0) {\r\n            return q;\r\n        }\r\n        if ((3.0 * t) < 2.0) {\r\n            return p + (q - p) * 6.0 * (2.0 / 3.0 - t);\r\n        }\r\n        return p;\r\n    }\r\n\r\n    /**\r\n     * Converts a float value to two-character HEX code.\r\n     * @param value - A float value in [0.0, 1.0].\r\n     * @returns - Two-character hexadecimal representation in [00, FF].\r\n     */\r\n    protected static to2CharHexCode(value: number): string {\r\n        return (value < 15.5 / 255.0 ? '0' : '') + Math.round(value * 255.0).toString(16);\r\n    }\r\n\r\n    /**\r\n     * Converts a color from HSL space to RGB space.\r\n     * @param hsl - HSL color tuple: hue, saturation, and lightness, each in [0.0, 1.0].\r\n     * @returns - RGB color tuple: red, green, and blue, each in [0.0, 1.0].\r\n     */\r\n    static hsl2rgb(hsl: GLclampf3): GLclampf3 {\r\n        const hslF = clampf3(hsl, 'HSL input');\r\n\r\n        if (hslF[1] === 0.0) {\r\n            return [hslF[2], hslF[2], hslF[2]];\r\n        }\r\n\r\n        const q = hslF[2] < 0.5 ? hslF[2] * (1.0 + hslF[1]) : (hslF[2] + hslF[1]) - (hslF[1] * hslF[2]);\r\n        const p = 2.0 * hslF[2] - q;\r\n\r\n        return [Color.hue2rgb(p, q, hslF[0] + (1.0 / 3.0))\r\n            , Color.hue2rgb(p, q, hslF[0]), Color.hue2rgb(p, q, hslF[0] - (1.0 / 3.0))];\r\n    }\r\n\r\n    /**\r\n     * Converts a color from HSL space to RGB space.\r\n     * @param rgb - RGB color tuple: red, green, and blue, each in [0.0, 1.0].\r\n     * @returns - HSL color tuple: hue, saturation, and lightness, each in [0.0, 1.0].\r\n     */\r\n    static rgb2hsl(rgb: GLclampf3): GLclampf3 {\r\n        const rgbF = clampf3(rgb, 'RGB input');\r\n        const hsl: GLclampf3 = [0.0, 0.0, 0.0];\r\n\r\n        const min = Math.min(rgbF[0], rgbF[1], rgbF[2]);\r\n        const max = Math.max(rgbF[0], rgbF[1], rgbF[2]);\r\n        const delta = max - min;\r\n\r\n        hsl[2] = (max + min) * 0.5;\r\n\r\n        if (delta === 0.0) {\r\n            return hsl;\r\n        }\r\n\r\n        hsl[1] = hsl[2] < 0.5 ? delta / (max + min) : delta / (2.0 - max - min);\r\n\r\n        const deltaR = (((max - rgbF[0]) / 6.0) + (delta / 2.0)) / delta;\r\n        const deltaG = (((max - rgbF[1]) / 6.0) + (delta / 2.0)) / delta;\r\n        const deltaB = (((max - rgbF[2]) / 6.0) + (delta / 2.0)) / delta;\r\n\r\n        if (rgbF[0] === max) {\r\n            hsl[0] = deltaB - deltaG;\r\n        } else if (rgbF[1] === max) {\r\n            hsl[0] = deltaR - deltaB + (1.0 / 3.0);\r\n        } else { // if (rgbF[2] === max) {\r\n            hsl[0] = deltaG - deltaR + (2.0 / 3.0);\r\n        }\r\n        return hsl;\r\n    }\r\n\r\n    /**\r\n     * Converts a color from LAB space to XYZ space (D65/2° illuminant)\r\n     * @param lab - LAB color tuple: lightness, greenRed, and blueYellow, each in [0.0, 1.0].\r\n     * @returns - XYZ color tuple: x, y, and z, each in [0.0, 1.0].\r\n     */\r\n    static lab2xyz(lab: GLclampf3): GLclampf3 {\r\n        const labF = clampf3(lab, 'LAB input');\r\n\r\n        /** The following computation assumes the value ranges:\r\n         *  L: [0, 100], a: [-128, 127], b: [-128, 127]\r\n         */\r\n        const yr = (100.0 * labF[0] + 16.0) / 116.0;\r\n        const xr = (256.0 * labF[1] - 128.0) / 500.0 + yr;\r\n        const zr = yr - (256.0 * labF[2] - 128.0) / 200.0;\r\n\r\n        const xr3 = Math.pow(xr, 3.0);\r\n        const yr3 = Math.pow(yr, 3.0);\r\n        const zr3 = Math.pow(zr, 3.0);\r\n\r\n        /* D65/2° illuminant for XYZ conversion */\r\n        const x = 0.95047 * (xr3 > 0.008856 ? xr3 : (xr - 16.0 / 116.0) / 7.787);\r\n        const y = 1.00000 * (yr3 > 0.008856 ? yr3 : (yr - 16.0 / 116.0) / 7.787);\r\n        const z = 1.08883 * (zr3 > 0.008856 ? zr3 : (zr - 16.0 / 116.0) / 7.787);\r\n\r\n        return [x, y, z];\r\n    }\r\n\r\n    /**\r\n     * Converts a color from XYZ space to CIE-Lab space.\r\n     * @param xyz - XYZ color tuple: x, y, and z, and refer to the D65/2° illuminant.\r\n     * @returns - LAB color tuple: lightness, greenRed, and blueYellow, each in [0.0, 1.0].\r\n     */\r\n    static xyz2lab(xyz: GLclampf3): GLclampf3 {\r\n        // DO NOT CLAMP! const xyzF = clampf3(xyz, 'XYZ input');\r\n        const xyzF = [xyz[0] / 0.95047, xyz[1] / 1.00000, xyz[2] / 1.08883];\r\n\r\n        /* implicit illuminant of [1.0, 1.0, 1.0] assumed */\r\n        const x = xyzF[0] > 0.008856 ? Math.cbrt(xyzF[0]) : (7.787 * xyzF[0] + (16.0 / 116.0));\r\n        const y = xyzF[1] > 0.008856 ? Math.cbrt(xyzF[1]) : (7.787 * xyzF[1] + (16.0 / 116.0));\r\n        const z = xyzF[2] > 0.008856 ? Math.cbrt(xyzF[2]) : (7.787 * xyzF[2] + (16.0 / 116.0));\r\n\r\n        /* scale to range [0.0, 1.0] - typically L is in [0,-100], a and b in [-128,+127] */\r\n        return clampf3([\r\n            (116.0 * y - 16.0) / 100.0,\r\n            (500.0 * (x - y) + 128.0) / 256.0,\r\n            (200.0 * (y - z) + 128.0) / 256.0]);\r\n    }\r\n\r\n\r\n    /**\r\n     * Converts a color from XYZ space to Adobe-RGB space.\r\n     * @param xyz - XYZ color tuple: x, y, and z, and refer to the D65/2° illuminant.\r\n     * @returns - RGB color tuple: red, green, and blue, each in [0.0, 1.0]\r\n     */\r\n    static xyz2rgb(xyz: GLclampf3): GLclampf3 {\r\n        // DO NOT CLAMP! const xyzF = clampf3(xyz, 'XYZ input');\r\n\r\n        const r = xyz[0] * +2.04137 + xyz[1] * -0.56495 + xyz[2] * -0.34469;\r\n        const g = xyz[0] * -0.96927 + xyz[1] * +1.87601 + xyz[2] * +0.04156;\r\n        const b = xyz[0] * +0.01345 + xyz[1] * -0.11839 + xyz[2] * +1.01541;\r\n\r\n        return clampf3([\r\n            r > 0.0 ? Math.pow(r, 1.0 / 2.19921875) : 0,\r\n            g > 0.0 ? Math.pow(g, 1.0 / 2.19921875) : 0,\r\n            b > 0.0 ? Math.pow(b, 1.0 / 2.19921875) : 0]);\r\n\r\n        // Standard-RGB\r\n        // let r = xyz[0] * +3.2406 + xyz[1] * -1.5372 + xyz[2] * -0.4986;\r\n        // let g = xyz[0] * -0.9689 + xyz[1] * +1.8758 + xyz[2] * +0.0415;\r\n        // let b = xyz[0] * +0.0557 + xyz[1] * -0.2040 + xyz[2] * +1.0570;\r\n\r\n        // r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : 12.92 * r;\r\n        // g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : 12.92 * g;\r\n        // b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : 12.92 * b;\r\n        // return [r, g, b];\r\n    }\r\n\r\n    /**\r\n     * Converts a color from Adobe-RGB space to XYZ space.\r\n     * @param rgb - RGB color tuple: red, green, and blue, each in [0.0, 1.0]\r\n     * @returns - XYZ color tuple: x, y, and z, each in [0.0, 1.0].\r\n     */\r\n    static rgb2xyz(rgb: GLclampf3): GLclampf3 {\r\n        const rgbF = clampf3(rgb, 'RGB input');\r\n\r\n        const r = Math.pow(rgbF[0], 2.19921875);\r\n        const g = Math.pow(rgbF[1], 2.19921875);\r\n        const b = Math.pow(rgbF[2], 2.19921875);\r\n\r\n        const x = r * 0.57667 + g * 0.18555 + b * 0.18819;\r\n        const y = r * 0.29738 + g * 0.62735 + b * 0.07527;\r\n        const z = r * 0.02703 + g * 0.07069 + b * 0.99110;\r\n        return [x, y, z];\r\n    }\r\n\r\n\r\n    /**\r\n     * Converts a color from LAB space to RGB space.\r\n     * @param lab - LAB color tuple: lightness, greenRed, and blueYellow, each in [0.0, 1.0].\r\n     * @returns - RGB color tuple: red, green, and blue, each in [0.0, 1.0]\r\n     */\r\n    static lab2rgb(lab: GLclampf3): GLclampf3 {\r\n        return Color.xyz2rgb(Color.lab2xyz(lab));\r\n    }\r\n\r\n    /**\r\n     * Converts a color from RGB space to LAB space.\r\n     * @param lab - LAB color tuple: lightness, greenRed, and blueYellow, each in [0.0, 1.0].\r\n     * @returns - RGB color tuple: red, green, and blue, each in [0.0, 1.0]\r\n     */\r\n    static rgb2lab(rgb: GLclampf3): GLclampf3 {\r\n        return Color.xyz2lab(Color.rgb2xyz(rgb));\r\n    }\r\n\r\n\r\n    /**\r\n     * Converts a color from CMYK space to RGB space.\r\n     * @param cmyk - CMYK color tuple: cyan, magenta, yellow, and key, each in [0.0, 1.0].\r\n     * @returns - RGB color tuple: red, green, and blue, each in [0.0, 1.0]\r\n     */\r\n    static cmyk2rgb(cmyk: GLclampf4): GLclampf3 {\r\n        const cmykF = clampf4(cmyk, 'CMYK input');\r\n\r\n        const k = 1.0 - cmykF[3];\r\n        return [(1.0 - cmykF[0]) * k, (1.0 - cmykF[1]) * k, (1.0 - cmykF[2]) * k];\r\n    }\r\n\r\n    /**\r\n     * Converts a color from RGB space to CMYK space.\r\n     * @param rgb - RGB color tuple: red, green, and blue, each in [0.0, 1.0]\r\n     * @returns - CMYK color tuple: cyan, magenta, yellow, and key, each in [0.0, 1.0].\r\n     */\r\n    static rgb2cmyk(rgb: GLclampf3): GLclampf4 {\r\n        const rgbF = clampf3(rgb, 'RGB input');\r\n\r\n        const k1 = 1.0 - Math.max(rgbF[0], rgbF[1], rgbF[2]);\r\n        const k2 = 1.0 - k1;\r\n        const k3 = k2 === 0.0 ? 0.0 : 1.0 / k2;\r\n        return [(k2 - rgbF[0]) * k3, (k2 - rgbF[1]) * k3, (k2 - rgbF[2]) * k3, k1];\r\n    }\r\n\r\n\r\n    /**\r\n     * Converts a color from HEX string to RGBA space. The hex string can start with '#' or '0x' or neither of these.\r\n     * @param hex - Hexadecimal color string: red, green, and blue, each in ['00', 'ff'].\r\n     * @returns - RGBA color tuple: red, green, blue, and alpha, each in [0.0, 1.0]. On error [0, 0, 0, 0] is returned.\r\n     */\r\n    static hex2rgba(hex: string): GLclampf4 {\r\n        const rgba: GLclampf4 = [0.0, 0.0, 0.0, Color.DEFAULT_ALPHA];\r\n\r\n        if (!Color.HEX_FORMAT_REGEX.test(hex)) {\r\n            log(LogLevel.Warning, `hexadecimal RGBA color string must conform to either \\\r\n'0x0000', '#0000', '0000', '0x00000000', '#00000000', or '00000000', given '${hex}'`);\r\n            return rgba;\r\n        }\r\n\r\n        const offset = hex.startsWith('0x') ? 2 : hex.startsWith('#') ? 1 : 0;\r\n        const length = Math.floor((hex.length - offset) / 3);\r\n        const stride = length - 1;\r\n\r\n        rgba[0] = parseInt(hex[offset + 0 * length] + hex[offset + 0 * length + stride], 16) / 255.0;\r\n        rgba[1] = parseInt(hex[offset + 1 * length] + hex[offset + 1 * length + stride], 16) / 255.0;\r\n        rgba[2] = parseInt(hex[offset + 2 * length] + hex[offset + 2 * length + stride], 16) / 255.0;\r\n        if ((hex.length - offset) === 4 || (hex.length - offset) === 8) {\r\n            rgba[3] = parseInt(hex[offset + 3 * length] + hex[offset + 3 * length + stride], 16) / 255.0;\r\n        }\r\n\r\n        assert(!isNaN(rgba[0]) && !isNaN(rgba[1]) && !isNaN(rgba[2]) && !isNaN(rgba[3]),\r\n            `expected well formated hexadecimal RGBA string, given '${hex}'`);\r\n        return rgba;\r\n    }\r\n\r\n    /**\r\n     * Converts a color from RGB space to HEX string.\r\n     * @param rgb - RGB color tuple: red, green, and blue, each in [0.0, 1.0]\r\n     * @returns - Hexadecimal color string: red, green, and blue, each in ['00', 'ff'], with '#' prefix\r\n     */\r\n    static rgb2hex(rgb: GLclampf3): string {\r\n        const rgbF = clampf3(rgb, 'RGB input');\r\n\r\n        const r = Color.to2CharHexCode(rgbF[0]);\r\n        const g = Color.to2CharHexCode(rgbF[1]);\r\n        const b = Color.to2CharHexCode(rgbF[2]);\r\n        return '#' + r + g + b;\r\n    }\r\n\r\n    /**\r\n     * Converts a color from RGBA space to HEX string.\r\n     * @param rgba - RGBA color tuple: red, green, blue, and alpha, each in [0.0, 1.0]\r\n     * @returns - Hexadecimal color string: red, green, blue, and alpha, each in ['00', 'ff'], with '#' prefix\r\n     */\r\n    static rgba2hex(rgba: GLclampf4): string {\r\n        const rgbaF = clampf4(rgba, 'RGBA input');\r\n\r\n        const r = Color.to2CharHexCode(rgbaF[0]);\r\n        const g = Color.to2CharHexCode(rgbaF[1]);\r\n        const b = Color.to2CharHexCode(rgbaF[2]);\r\n        const a = Color.to2CharHexCode(rgbaF[3]);\r\n        return '#' + r + g + b + a;\r\n    }\r\n\r\n    /**\r\n     * Performs a linear interpolation between x and y using a to weight between them within the specified color space.\r\n     * @param x - First color stop for lerp/linear interpolation.\r\n     * @param y - Second color stop for lerp/linear interpolation.\r\n     * @param a - Specify the value to use to interpolate between x and y.\r\n     * @param space - The color space that is to be used for linear interpolation of two colors.\r\n     */\r\n    static lerp(x: Color, y: Color, a: number, space: Color.Space = Color.Space.LAB): Color {\r\n        if (a <= 0.0) {\r\n            return new Color(x.rgba);\r\n        } else if (a >= 1.0) {\r\n            return new Color(y.rgba);\r\n        }\r\n\r\n        const result = vec4.create();\r\n        // eslint-disable-next-line default-case\r\n        switch (space) {\r\n            case Color.Space.CMYK:\r\n                vec4.lerp(result, x.cmyk, y.cmyk, a);\r\n                const alpha = mix(x.a, y.a, a);\r\n                return new Color().fromCMYK(result[0], result[1], result[2], result[3], alpha);\r\n\r\n            case Color.Space.LAB:\r\n                vec4.lerp(result, x.laba, y.laba, a);\r\n                return new Color().fromLAB(result[0], result[1], result[2], result[3]);\r\n\r\n            case Color.Space.HSL:\r\n                vec4.lerp(result, x.hsla, y.hsla, a);\r\n                return new Color().fromHSL(result[0], result[1], result[2], result[3]);\r\n\r\n            case Color.Space.RGB:\r\n                vec4.lerp(result, x.rgba, y.rgba, a);\r\n                return new Color().fromRGB(result[0], result[1], result[2], result[3]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of color (a 4-tuple in RGBA space).\r\n     * @param rgba - Either RGB tuple or RGBA tuple. If none is provided, default will be kept.\r\n     * @param alpha - If RGB tuple is provided an additional alpha value can be specified.\r\n     */\r\n    constructor(rgba?: GLclampf3 | GLclampf4, alpha?: GLclampf) {\r\n        if (rgba === undefined) {\r\n            return;\r\n        }\r\n        if (rgba.length === 3 && alpha !== undefined) {\r\n            this.fromF32(rgba[0], rgba[1], rgba[2], alpha);\r\n        } else if (rgba.length === 4) {\r\n            this.fromF32(rgba[0], rgba[1], rgba[2], rgba[3]);\r\n            assert(alpha === undefined, `expected alpha to be undefined when given an 4-tuple in RGBA`);\r\n        } else {\r\n            this.fromF32(rgba[0], rgba[1], rgba[2]);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks whether or not this color matches a second color (based on internal rgba floating representation).\r\n     * @param other - Color to compare color values to.\r\n     * @returns - True iff both colors have the exact same rgba floating point values.\r\n     */\r\n    equals(other: Color): boolean {\r\n        return equals4<GLclampf>(this._rgba, other._rgba);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the internal rgba store using a color in float (32bit) RGBA colors.\r\n     * @param red - Red color component in [0.0, 1.0]\r\n     * @param green - Green color component in [0.0, 1.0]\r\n     * @param blue - Blue color component in [0.0, 1.0]\r\n     * @param alpha - Alpha color component in [0.0, 1.0]\r\n     * @returns - The color instance (this).\r\n     */\r\n    fromF32(red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat = Color.DEFAULT_ALPHA): Color {\r\n        const previous = duplicate4<GLclampf>(this._rgba);\r\n\r\n        this._rgba[0] = clampf(red, `red value`);\r\n        this._rgba[1] = clampf(green, `green value`);\r\n        this._rgba[2] = clampf(blue, `blue value`);\r\n        this._rgba[3] = clampf(alpha, `alpha value`);\r\n\r\n        this._altered = !equals4<GLclampf>(this._rgba, previous);\r\n        return this;\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the internal rgba store using a color in unsigned int (8bit) RGBA colors.\r\n     * @param red - Red color component in [0, 255]\r\n     * @param green - Green color component in [0, 255]\r\n     * @param blue - Blue color component in [0, 255]\r\n     * @param alpha - Alpha color component in [0, 255]\r\n     * @returns - The color instance (this).\r\n     */\r\n    fromUI8(red: GLubyte, green: GLubyte, blue: GLubyte,\r\n        alpha: GLubyte = Math.floor(Color.DEFAULT_ALPHA * 255)): Color {\r\n        const previous = duplicate4<GLclampf>(this._rgba);\r\n\r\n        this._rgba[0] = clamp(red, 0, 255) / 255.0;\r\n        this._rgba[1] = clamp(green, 0, 255) / 255.0;\r\n        this._rgba[2] = clamp(blue, 0, 255) / 255.0;\r\n        this._rgba[3] = clamp(alpha, 0, 255) / 255.0;\r\n\r\n        this._altered = !equals4<GLclampf>(this._rgba, previous);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Specifies the internal rgba store using a color in RGB color space.\r\n     * @param red - Red color component in [0.0, 1.0]\r\n     * @param green - Green color component in [0.0, 1.0]\r\n     * @param blue - Blue color component in [0.0, 1.0]\r\n     * @param alpha - Alpha color component in [0.0, 1.0]\r\n     * @returns - The color instance (this).\r\n     */\r\n    fromRGB(red: GLclampf, green: GLclampf, blue: GLclampf,\r\n        alpha: GLclampf = Color.DEFAULT_ALPHA): Color {\r\n        const previous = duplicate4<GLclampf>(this._rgba);\r\n\r\n        this._rgba = clampf4([red, green, blue, alpha], 'RGBA input');\r\n\r\n        this._altered = !equals4<GLclampf>(this._rgba, previous);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Specifies the internal rgba store using a color in HSL color space.\r\n     * @param hue - Hue color component in [0.0, 1.0]\r\n     * @param saturation - Saturation color component in [0.0, 1.0]\r\n     * @param lightness - Lightness color component in [0.0, 1.0]\r\n     * @param alpha - Alpha color component in [0.0, 1.0]\r\n     * @returns - The color instance (this).\r\n     */\r\n    fromHSL(hue: GLclampf, saturation: GLclampf, lightness: GLclampf,\r\n        alpha: GLclampf = Color.DEFAULT_ALPHA): Color {\r\n        const previous = duplicate4<GLclampf>(this._rgba);\r\n\r\n        const rgb = Color.hsl2rgb([hue, saturation, lightness]);\r\n        const alphaf = clampf(alpha, 'ALPHA input');\r\n\r\n        this._rgba = [rgb[0], rgb[1], rgb[2], alphaf];\r\n\r\n        this._altered = !equals4<GLclampf>(this._rgba, previous);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Specifies the internal rgba store using a color in CIE-Lab color space.\r\n     * @param lightness - Lightness color component in [0.0, 1.0]\r\n     * @param greenRed - Green-Red/a color component in [0.0, 1.0]\r\n     * @param blueYellow - Blue-Yellow/b color component in [0.0, 1.0]\r\n     * @param alpha - Alpha color component in [0.0, 1.0]\r\n     * @returns - The color instance (this).\r\n     */\r\n    fromLAB(lightness: GLclampf, greenRed: GLclampf, blueYellow: GLclampf,\r\n        alpha: GLclampf = Color.DEFAULT_ALPHA): Color {\r\n        const previous = duplicate4<GLclampf>(this._rgba);\r\n\r\n        const rgb = Color.lab2rgb([lightness, greenRed, blueYellow]);\r\n        const alphaf = clampf(alpha, 'ALPHA input');\r\n\r\n        this._rgba = [rgb[0], rgb[1], rgb[2], alphaf];\r\n\r\n        this._altered = !equals4<GLclampf>(this._rgba, previous);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Specifies the internal rgba store using a color in CMYK color space.\r\n     * @param cyan - Cyan color component in [0.0, 1.0]\r\n     * @param magenta - Magenta color component in [0.0, 1.0]\r\n     * @param yellow - Yellow color component in [0.0, 1.0]\r\n     * @param key - Key/Black color component in [0.0, 1.0]\r\n     * @param alpha - Alpha color component in [0.0, 1.0]\r\n     * @returns - The color instance (this).\r\n     */\r\n    fromCMYK(cyan: GLclampf, magenta: GLclampf, yellow: GLclampf, key: GLclampf,\r\n        alpha: GLclampf = Color.DEFAULT_ALPHA): Color {\r\n        const previous = duplicate4<GLclampf>(this._rgba);\r\n\r\n        const rgb = Color.cmyk2rgb([cyan, magenta, yellow, key]);\r\n        const alphaf = clampf(alpha, 'ALPHA input');\r\n\r\n        this._rgba = [rgb[0], rgb[1], rgb[2], alphaf];\r\n\r\n        this._altered = !equals4<GLclampf>(this._rgba, previous);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Specifies the internal rgba store using a hexadecimal color string.\r\n     * @param hex - Hexadecimal color string: red, green, blue, and alpha (optional) each in ['00', 'ff'].\r\n     * @returns - The color instance (this).\r\n     */\r\n    fromHex(hex: string): Color {\r\n        const previous = duplicate4<GLclampf>(this._rgba);\r\n\r\n        this._rgba = Color.hex2rgba(hex);\r\n\r\n        this._altered = !equals4<GLclampf>(this._rgba, previous);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Converts the color to a gray value using the specified algorithm.\r\n     * @param algorithm - The algorithm used for color to gray conversion.\r\n     */\r\n    gray(algorithm: Color.GrayscaleAlgorithm = Color.GrayscaleAlgorithm.LinearLuminance): GLclampf {\r\n\r\n        // eslint-disable-next-line default-case\r\n        switch (algorithm) {\r\n\r\n            /* Does not represent shades of grayscale w.r.t. human perception of luminosity. */\r\n            case Color.GrayscaleAlgorithm.Average:\r\n                return (this._rgba[0] + this._rgba[1] + this._rgba[2]) / 3.0;\r\n\r\n            /* flat (reduced contrast) and dark grayscale */\r\n            case Color.GrayscaleAlgorithm.LeastSaturatedVariant:\r\n                return (Math.max(this._rgba[0], this._rgba[1], this._rgba[2])\r\n                    - Math.min(this._rgba[0], this._rgba[1], this._rgba[2])) * 0.5;\r\n\r\n            /* provides a darker grayscale */\r\n            case Color.GrayscaleAlgorithm.MinimumDecomposition:\r\n                return Math.min(this._rgba[0], this._rgba[1], this._rgba[2]);\r\n\r\n            /* provides a brighter grayscale */\r\n            case Color.GrayscaleAlgorithm.MaximumDecomposition:\r\n                return Math.max(this._rgba[0], this._rgba[1], this._rgba[2]);\r\n\r\n            case Color.GrayscaleAlgorithm.LinearLuminance:\r\n                return this._rgba[0] * 0.2126 + this._rgba[1] * 0.7152 + this._rgba[2] * 0.0722;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Enables generic color access within a specified color space.\r\n     * @param space - Expected color space of the requested color values.\r\n     * @param alpha - Whether or not alpha channel should be provided as well.\r\n     */\r\n    tuple(space: Color.Space, alpha: boolean = true): GLclampf3 | GLclampf4 | GLclampf5 {\r\n        // eslint-disable-next-line default-case\r\n        switch (space) {\r\n            case Color.Space.RGB:\r\n                return alpha ? this.rgba : this.rgb;\r\n            case Color.Space.LAB:\r\n                return alpha ? this.laba : this.lab;\r\n            case Color.Space.CMYK:\r\n                return alpha ? this.cmyka : this.cmyk;\r\n            case Color.Space.HSL:\r\n                return alpha ? this.hsla : this.hsl;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Read access to the RGB components as floating point 3-tuple, each value in range [0.0, 1.0].\r\n     */\r\n    get rgb(): GLclampf3 {\r\n        return [this._rgba[0], this._rgba[1], this._rgba[2]];\r\n    }\r\n\r\n    /**\r\n     * Read access to the RGB components as array of three bytes (8bit unsigned int), each in range [0, 255].\r\n     */\r\n    get rgbUI8(): Uint8Array {\r\n        const ui8Array = new Uint8Array(3);\r\n        ui8Array[0] = Math.round(this._rgba[0] * 255.0);\r\n        ui8Array[1] = Math.round(this._rgba[1] * 255.0);\r\n        ui8Array[2] = Math.round(this._rgba[2] * 255.0);\r\n        return ui8Array;\r\n    }\r\n\r\n    /**\r\n     * Read access to the RGB components as array of three 32bit floats, each in range [0.0, 1.0].\r\n     */\r\n    get rgbF32(): Float32Array {\r\n        const f32Array = new Float32Array(3);\r\n        f32Array[0] = this._rgba[0];\r\n        f32Array[1] = this._rgba[1];\r\n        f32Array[2] = this._rgba[2];\r\n        return f32Array;\r\n    }\r\n\r\n    /**\r\n     * Read access to the RGBA components as floating point 4-tuple, each value in range [0.0, 1.0].\r\n     */\r\n    get rgba(): GLclampf4 {\r\n        return this._rgba;\r\n    }\r\n\r\n    /**\r\n     * Read access to the RGBA components as array of four bytes (8bit unsigned int), each in range [0, 255].\r\n     */\r\n    get rgbaUI8(): Uint8Array {\r\n        const ui8Array = new Uint8Array(4);\r\n        ui8Array[0] = Math.round(this._rgba[0] * 255.0);\r\n        ui8Array[1] = Math.round(this._rgba[1] * 255.0);\r\n        ui8Array[2] = Math.round(this._rgba[2] * 255.0);\r\n        ui8Array[3] = Math.round(this._rgba[3] * 255.0);\r\n        return ui8Array;\r\n    }\r\n\r\n    /**\r\n     * Read access to the RGBA components as array of four 32bit floats, each in range [0.0, 1.0].\r\n     */\r\n    get rgbaF32(): Float32Array {\r\n        return new Float32Array(this._rgba);\r\n    }\r\n\r\n    /**\r\n     * Read access to the Red component as float value in range [0.0, 1.0].\r\n     */\r\n    get r(): GLclampf {\r\n        return this._rgba[0];\r\n    }\r\n\r\n    /**\r\n     * Read access to the Green component as float value in range [0.0, 1.0].\r\n     */\r\n    get g(): GLclampf {\r\n        return this._rgba[1];\r\n    }\r\n\r\n    /**\r\n     * Read access to the Blue component as float value in range [0.0, 1.0].\r\n     */\r\n    get b(): GLclampf {\r\n        return this._rgba[2];\r\n    }\r\n\r\n    /**\r\n     * Read access to the Alpha component as float value in range [0.0, 1.0].\r\n     */\r\n    get a(): GLclampf {\r\n        return this._rgba[3];\r\n    }\r\n\r\n    /**\r\n     * Read access to the RGB components as hexadecimal string.\r\n     */\r\n    get hexRGB(): string {\r\n        return Color.rgb2hex(this.rgb);\r\n    }\r\n\r\n    /**\r\n     * Read access to the RGBA components as hexadecimal string.\r\n     */\r\n    get hexRGBA(): string {\r\n        return Color.rgba2hex(this._rgba);\r\n    }\r\n\r\n    /**\r\n     * Read access to the HSL components as floating point 3-tuple, each value in range [0.0, 1.0].\r\n     */\r\n    get hsl(): GLclampf3 {\r\n        return Color.rgb2hsl(this.rgb);\r\n    }\r\n\r\n    /**\r\n     * Read access to the HSLA components as floating point 4-tuple, each value in range [0.0, 1.0].\r\n     */\r\n    get hsla(): GLclampf4 {\r\n        const hsl = Color.rgb2hsl(this.rgb);\r\n        return [hsl[0], hsl[1], hsl[2], this._rgba[3]];\r\n    }\r\n\r\n    /**\r\n     * Read access to the LAB components as floating point 3-tuple, each value in range [0.0, 1.0].\r\n     */\r\n    get lab(): GLclampf3 {\r\n        return Color.rgb2lab(this.rgb);\r\n    }\r\n\r\n    /**\r\n     * Read access to the LABA components as floating point 4-tuple, each value in range [0.0, 1.0].\r\n     */\r\n    get laba(): GLclampf4 {\r\n        const lab = Color.rgb2lab(this.rgb);\r\n        return [lab[0], lab[1], lab[2], this._rgba[3]];\r\n    }\r\n\r\n    /**\r\n     * Read access to the CMYK components as floating point 4-tuple, each value in range [0.0, 1.0].\r\n     */\r\n    get cmyk(): GLclampf4 {\r\n        return Color.rgb2cmyk(this.rgb);\r\n    }\r\n\r\n    /**\r\n     * Read access to the CMYKA components as floating point 5-tuple, each value in range [0.0, 1.0].\r\n     */\r\n    get cmyka(): GLclampf5 {\r\n        const cmyk = Color.rgb2cmyk(this.rgb);\r\n        return [cmyk[0], cmyk[1], cmyk[2], cmyk[3], this._rgba[3]];\r\n    }\r\n\r\n    /**\r\n     * Whether or not color value has changed.\r\n     */\r\n    get altered(): boolean {\r\n        return this._altered;\r\n    }\r\n\r\n    /**\r\n     * Intended for resetting alteration status.\r\n     */\r\n    set altered(status: boolean) {\r\n        this._altered = status;\r\n    }\r\n\r\n}\r\n\r\n/* istanbul ignore next */\r\nexport namespace Color {\r\n\r\n    export enum GrayscaleAlgorithm {\r\n        Average = 'average',\r\n        LinearLuminance = 'linear-luminance', /* CIE1931 */\r\n        LeastSaturatedVariant = 'least-saturated-variant',\r\n        MinimumDecomposition = 'minimum-decomposition',\r\n        MaximumDecomposition = 'maximum-decomposition',\r\n    }\r\n\r\n    /**\r\n     * Color spaces covered by this class.\r\n     */\r\n    export enum Space {\r\n        RGB = 'rgb',\r\n        HSL = 'hsl',\r\n        LAB = 'lab',\r\n        CMYK = 'cmyk',\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { clamp } from './gl-matrix-extensions';\r\n\r\nimport { assert } from './auxiliaries';\r\nimport { Color } from './color';\r\nimport { fetchJsonAsync } from './fetch';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n// /**\r\n//  * Basic color gradient representation that uses color stops, a color at a specific position, to allow for color\r\n//    queries\r\n//  * at arbitrary positions. The gradient provides {@link Color} instances to facilitate the use of various color\r\n//    spaces.\r\n//  * ```\r\n//  * const gradient = new ColorGradient();\r\n//  * gradient.add(new gloperate.Color([0.09, 0.43, 0.58]), 0.2);\r\n//  * gradient.add(new gloperate.Color([0.97, 0.98, 0.98]), 0.8);\r\n//  * ...\r\n//  * gradient.color(0.66).rgb; // [0.7646666765213013, 0.8516666889190674, 0.8866666555404663]\r\n//  * gradient.lerpSpace = ColorGradient.LerpSpace.LAB;\r\n//  * gradient.color(0.66).rgb; // [0.8264121413230896, 0.8263672590255737, 0.8262822031974792]\r\n//  * ```\r\n//  */\r\nexport class ColorScale {\r\n\r\n    /**\r\n     * Color scale preset file schema.\r\n     */\r\n    private static readonly SCHEMA: any = require('./data/colorscalepresets.schema.json');\r\n\r\n    /** @see{@link hint} */\r\n    protected _hint: ColorScale.InterpolationHint = ColorScale.InterpolationHint.Linear;\r\n\r\n    /** @ee{@link colors} */\r\n    protected _colors = new Array<Color>();\r\n\r\n    /** @see{@link invert} */\r\n    protected _inverted = false;\r\n\r\n\r\n    /**\r\n     * Returns the stride for interleaved arrays of color components based on the array type.\r\n     * @param type - One of the supported color array types.\r\n     */\r\n    protected static stride(type: ColorScale.ArrayType): number {\r\n        switch (type) {\r\n            case ColorScale.ArrayType.RGBA:\r\n            case ColorScale.ArrayType.RGBAf:\r\n                return 4;\r\n            case ColorScale.ArrayType.RGB:\r\n            case ColorScale.ArrayType.RGBf:\r\n            default:\r\n                return 3;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Fetches a color schema file, and, if successful, picks a preset for the specified number of steps. If the named\r\n     * preset cannot be found, a list of all available presets within the file is logged and undefined is returned. If\r\n     * the preset does not specify exact colors for the requested number of steps, the color array with the most colors\r\n     * and linear interpolation in CIE-LAB is used to generate the scale.\r\n     *\r\n     * The following preset libraries are included within webgl-operate but are required to be loaded dynamically (in\r\n     * order to reduce bundle size and memory use):\r\n     * ```\r\n     * ColorScale.fromPreset('./colorbrewer.json', 'YlGnBu', 7);\r\n     * ColorScale.fromPreset('./smithwalt.json', 'viridis', 16);\r\n     * ```\r\n     * And resolving the promise:\r\n     * ```\r\n     * const scale: ColorScale | undefined = undefined;\r\n     * ColorScale.fromPreset('./data/colorbrewer.json', 'YlGnBu', 5).then((value) => scale = value);\r\n     * ```\r\n     * @param url - Uniform resource locator string referencing a json file complying to the JSON color schema.\r\n     * @param preset - Name of a preset to choose from the json file.\r\n     * @param stepCount - Number of steps to be used for the resulting color scheme.\r\n     * @returns - Undefined if loading and validating the json failed or the preset was not found. Else, a color scale.\r\n     */\r\n    static fromPreset(url: string, preset: string, stepCount: number): Promise<ColorScale> {\r\n\r\n        /* This transforms the fetched json data into a color scale. */\r\n        const transform = (data: any): ColorScale | undefined => {\r\n\r\n            /* Find named preset. */\r\n            let p: ColorScale.Preset | undefined;\r\n            for (const item of data) {\r\n                if (item.identifier !== preset) {\r\n                    continue;\r\n                }\r\n                p = item as ColorScale.Preset;\r\n                break;\r\n            }\r\n            if (p === undefined) {\r\n                return undefined;\r\n            }\r\n\r\n            const type = p.format;\r\n            const stride = ColorScale.stride(type);\r\n\r\n            /* Find best color array match for targeted step count. The best match is either the exact number of\r\n            colors or the largest available number. */\r\n            const colorsByStepCount = p.colors;\r\n            let index = colorsByStepCount.length - 1;\r\n            for (let i = 0; i < colorsByStepCount.length; ++i) {\r\n                if (colorsByStepCount[i].length !== stepCount * stride) {\r\n                    continue;\r\n                }\r\n                index = i;\r\n                break;\r\n            }\r\n            const colors = colorsByStepCount[index];\r\n\r\n            /* Check if there is a matching positions array to the selected color array. */\r\n            const positionsByStepCount = p.positions;\r\n            if (positionsByStepCount === undefined) {\r\n                return ColorScale.fromArray(colors, type, stepCount, undefined);\r\n            }\r\n\r\n            let positions: Array<number> | undefined;\r\n            for (let i = 0; i < positionsByStepCount.length; ++i) {\r\n                if (positionsByStepCount![i].length !== colors.length) {\r\n                    continue;\r\n                }\r\n                positions = positionsByStepCount![i];\r\n            }\r\n            return ColorScale.fromArray(colors, type, stepCount, positions);\r\n\r\n        };\r\n        return fetchJsonAsync<ColorScale>(url, transform, ColorScale.SCHEMA.properties);\r\n    }\r\n\r\n    /**\r\n     * Creates a color scale from a set of colors and (optional) positions for a specific step count. If no positions\r\n     * are specified, the colors are spread equally. A step count of 1 returns the first color.\r\n     * @param interleavedColorComponents - Interleaved array of color components, e.g., red, green, and blue.\r\n     * @param type - The array type specifying the number of subsequent color components for each color.\r\n     * @param stepCount - Number of colors to be computed from the color scale.\r\n     * @param positions - Interleaved array of positions, matching the length of the color array divided by stride.\r\n     * @returns - A color scale of fixed number and position of colors for index and linear interpolation access.\r\n     */\r\n    static fromArray(interleavedColorComponents: Array<number>, type: ColorScale.ArrayType,\r\n        stepCount: number, positions?: Array<number>): ColorScale {\r\n        if (stepCount === 0 || interleavedColorComponents.length === 0) {\r\n            return new ColorScale();\r\n        }\r\n\r\n        const array = interleavedColorComponents; // just a shorter handle\r\n        const stride = ColorScale.stride(type);\r\n        const size = array.length / stride;\r\n        const colors = new Array<Color>(size);\r\n\r\n        /* Transform the interleaved array values into instances of Color. */\r\n        for (let i = 0; i < array.length; i += stride) {\r\n            const color = new Color();\r\n            switch (type) {\r\n                case ColorScale.ArrayType.RGB:\r\n                    color.fromUI8(array[i + 0], array[i + 1], array[i + 2]);\r\n                    break;\r\n                case ColorScale.ArrayType.RGBA:\r\n                    color.fromUI8(array[i + 0], array[i + 1], array[i + 2], array[i + 3]);\r\n                    break;\r\n                case ColorScale.ArrayType.RGBf:\r\n                    color.fromF32(array[i + 0], array[i + 1], array[i + 2]);\r\n                    break;\r\n                case ColorScale.ArrayType.RGBAf:\r\n                    color.fromF32(array[i + 0], array[i + 1], array[i + 2], array[i + 3]);\r\n                    break;\r\n                default:\r\n            }\r\n            colors[i / stride] = color;\r\n        }\r\n\r\n        const scale = new ColorScale();\r\n\r\n        /* No further computation required if colors already match step count and no positions are given. */\r\n        if (positions === undefined && stepCount === size) {\r\n            scale._colors = colors;\r\n            return scale;\r\n        }\r\n\r\n        if (stepCount === 1) {\r\n            scale._colors.push(colors[0]);\r\n        }\r\n\r\n        /* Note: At this point, stepCount is always > 1. */\r\n\r\n        /* Provide equally distributed positions if none are given. */\r\n        if (positions === undefined) {\r\n            positions = new Array(size);\r\n            positions[0] = 0.0;\r\n\r\n            for (let i = 1; i < size; ++i) {\r\n                positions[i] = i / (size - 1);\r\n            }\r\n        }\r\n        assert(positions.length === colors.length,\r\n            `expected number of positions (${positions.length}) to match number of colors (${colors.length})`);\r\n\r\n        let lower = 0;\r\n        let upper = lower + 1;\r\n        const last = size - 1;\r\n\r\n        /* Compute requested number of colors using linear interpolation of positioned colors. */\r\n        for (let i = 0; i < stepCount; ++i) {\r\n            const position = i === 0 ? 0 : i / (stepCount - 1);\r\n\r\n            /* If position is before first or after last stop, return that stop respectively. */\r\n            if (position <= positions[lower]) {\r\n                scale._colors.push(colors[lower]);\r\n                continue;\r\n            } else if (positions[last] <= position) {\r\n                scale._colors.push(colors[last]);\r\n                continue;\r\n            }\r\n\r\n            /* There are at least two stops and the position is within these stops ... */\r\n\r\n            for (let u = lower + 1; u < size; ++u) {\r\n                if (positions[u] < position) {\r\n                    continue;\r\n                }\r\n                upper = u;\r\n                lower = u - 1;\r\n                break;\r\n            }\r\n            const a = (position - positions[lower]) / (positions[upper] - positions[lower]);\r\n            scale._colors.push(Color.lerp(colors[lower], colors[upper], a, Color.Space.LAB));\r\n        }\r\n        return scale;\r\n    }\r\n\r\n\r\n    /**\r\n     * Queries the color at a given position by identifying the adjacent stops (lower and upper bound) and either\r\n     * interpolating between these or picking the nearest of both. In case no stop exists, a default color will be\r\n     * returned. If only one color exists, this color is always returned no matter the position. If the position is\r\n     * out of bounds, either the first or last stop's color is returned.\r\n     * @param position - Position in [0.0, 1.0] to linear interpolate the color at.\r\n     * @param space - The color space that is to be used for linear interpolation of two colors.\r\n     * @returns - Color, depending on the gradient type either linearly or nearest filtered color.\r\n     */\r\n    lerp(position: number, space: Color.Space = Color.Space.LAB): Color | undefined {\r\n\r\n        if (this._colors.length === 0) {\r\n            return undefined;\r\n        }\r\n        if (this._colors.length === 1) {\r\n            return this._colors[0];\r\n        }\r\n\r\n\r\n        /* Return first or last color if position is 0.0 or 1.0 respectively. */\r\n        const clamped = clamp(position, 0.0, 1.0);\r\n        if (clamped <= 0.0) {\r\n            return this._colors[0];\r\n        } else if (clamped >= 1.0) {\r\n            return this._colors[this._colors.length - 1];\r\n        }\r\n\r\n        /* Find lower and upper bound for the given position. */\r\n        const posIndex = position * this._colors.length; // Position in index space.\r\n        const lower = Math.floor(posIndex);\r\n        const upper = lower + 1;\r\n\r\n        if (upper >= this._colors.length) {\r\n            return this._colors[this._colors.length - 1];\r\n        }\r\n\r\n        // tslint:disable-next-line: max-line-length\r\n        assert(upper < this._colors.length, `expected upper not exceed maximum color index: ${upper} < ${this._colors.length}`);\r\n\r\n        if (this._hint === ColorScale.InterpolationHint.Nearest) {\r\n            return this._colors[posIndex - lower <= upper - posIndex ? lower : upper];\r\n        }\r\n        return Color.lerp(this._colors[lower], this._colors[upper], posIndex - lower, space);\r\n    }\r\n\r\n    /**\r\n     * Returns the color with specified index. If the index is out of bounds, undefined is returned. Alternatively, the\r\n     * color array can be used directly @see{@link colors}.\r\n     * @param index - Index of the color to access.\r\n     */\r\n    color(index: number): Color | undefined {\r\n        if (index < 0 || index >= this._colors.length) {\r\n            return undefined;\r\n        }\r\n        return this._colors[index];\r\n    }\r\n\r\n    /**\r\n     * Returns the array containing the colors of the color scale.\r\n     */\r\n    get colors(): Array<Color> {\r\n        return this._colors;\r\n    }\r\n    set colors(colors: Array<Color>) {\r\n        this._colors = colors;\r\n    }\r\n\r\n\r\n    /**\r\n     * The interpolation hint used when accessing a color using interpolation, e.g., @see{@link lerp}.\r\n     */\r\n    set hint(hint: ColorScale.InterpolationHint) {\r\n        this._hint = hint;\r\n    }\r\n    get hint(): ColorScale.InterpolationHint {\r\n        return this._hint;\r\n    }\r\n\r\n\r\n    /**\r\n     * Provides read access to the number of colors of this scale. This is a shortcut for this.colors.length.\r\n     */\r\n    get length(): number {\r\n        return this._colors.length;\r\n    }\r\n\r\n    /**\r\n     * Whether or not the scale was inverted based on its initial state.\r\n     */\r\n    get inverted(): boolean {\r\n        return this._inverted;\r\n    }\r\n\r\n    /**\r\n     * Inverts the color scale. Whether or not the scale is inverted can be checked using the\r\n     * inverted read-only property (@link inverted).\r\n     */\r\n    invert(): void {\r\n        this._colors.reverse();\r\n        this._inverted = !this._inverted;\r\n    }\r\n\r\n\r\n    /**\r\n     * Converts the color scale into an array of interleaved unsigned int values of the requested color space.\r\n     * @param space - Color space that is to be used for the array.\r\n     * @param alpha - Whether or not alpha is to be included.\r\n     */\r\n    bitsUI8(space: Color.Space = Color.Space.RGB, alpha: boolean = true): Uint8Array {\r\n        const size = this._colors.length;\r\n        const stride = alpha ? 4 : 3;\r\n        const bits = new Uint8Array(size * stride);\r\n\r\n        for (let i = 0; i < size; ++i) {\r\n            const color = this._colors[i].tuple(space, alpha);\r\n            bits[i * stride + 0] = color[0] * 255;\r\n            bits[i * stride + 1] = color[1] * 255;\r\n            bits[i * stride + 2] = color[2] * 255;\r\n            if (alpha && color.length === 4) {\r\n                bits[i * stride + 3] = color[3] * 255;\r\n            }\r\n        }\r\n        return bits;\r\n    }\r\n\r\n    /**\r\n     * Converts the color scale into an array of interleaved float values of the requested color space.\r\n     * @param space - Color space that is to be used for the array.\r\n     * @param alpha - Whether or not alpha is to be included.\r\n     */\r\n    bitsF32(space: Color.Space = Color.Space.RGB, alpha: boolean = true): Float32Array {\r\n        const size = this._colors.length;\r\n        const stride = alpha ? 4 : 3;\r\n        const bits = new Float32Array(size * stride);\r\n\r\n        for (let i = 0; i < size; ++i) {\r\n            const color = this._colors[i].tuple(space, alpha);\r\n            bits[i * stride + 0] = color[0];\r\n            bits[i * stride + 1] = color[1];\r\n            bits[i * stride + 2] = color[2];\r\n            if (alpha && color.length === 4) {\r\n                bits[i * stride + 3] = color[3];\r\n            }\r\n        }\r\n        return bits;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport namespace ColorScale {\r\n\r\n    /**\r\n     * Color interpolation type for a color scale.\r\n     */\r\n    export enum InterpolationHint {\r\n        Linear = 'linear',\r\n        Nearest = 'nearest',\r\n    }\r\n\r\n    export enum ScaleType {\r\n        sequential = 'sequential',\r\n        diverging = 'diverging',\r\n        qualitative = 'qualitative',\r\n    }\r\n\r\n    export enum ArrayType {\r\n        RGB = 'rgb',\r\n        RGBf = 'rgbf',\r\n        RGBA = 'rgba',\r\n        RGBAf = 'rgbaf',\r\n    }\r\n\r\n    export interface Preset {\r\n        identifier: string;\r\n        type: ScaleType | undefined;\r\n        format: ArrayType;\r\n        colors: Array<Array<number>>;\r\n        positions: Array<Array<number>> | undefined;\r\n    }\r\n\r\n}\r\n\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { assert, log, logIf, LogLevel } from './auxiliaries';\r\nimport { byteSizeOfFormat } from './formatbytesizes';\r\n\r\nimport { AllocationRegister } from './allocationregister';\r\nimport { ContextMasquerade } from './contextmasquerade';\r\nimport { WEBGL1_EXTENSIONS, WEBGL2_DEFAULT_EXTENSIONS, WEBGL2_EXTENSIONS } from './extensions';\r\nimport { ExtensionsHash } from './extensionshash';\r\nimport { GL2Facade } from './gl2facade';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * A controller for either a WebGLRenderingContext or WebGL2RenderingContext. It requests a context, tracks context\r\n * attributes, extensions as well as multi frame specific rendering information and a (gpu)allocation registry.\r\n *\r\n * An instance of `Context` can be created only implicitly by requesting a context given a canvas element and its\r\n * dataset:\r\n * ```\r\n * const element: HTMLCanvasElement = <HTMLCanvasElement>document.getElementById(canvasID);\r\n * this.context = Context.request(element); // element.dataset is used for attributes\r\n * ```\r\n * The context supports the following data-attributes:\r\n * ```\r\n * data-backend: 'auto' | 'webgl' | 'webgl2'\r\n * data-accumulation-format: 'auto' | 'float' | 'half' | 'byte'\r\n * ```\r\n *\r\n * At run-time, cached context features can be queried without a performance impact, e.g., frequent extension-based\r\n * branching:\r\n * ```\r\n * if(this.context.supportsVertexArrayObject) {\r\n *     this.context.vertexArrayObject.bindVertexArrayOES(...);\r\n *     ...\r\n * }\r\n * ```\r\n *\r\n * For convenience, protected extension names such as `EXT_frag_depth` are not prefixed by an underscore.\r\n */\r\nexport class Context {\r\n\r\n    /**\r\n     * Context creation attribute defaults. The defaults are taken directly from the spec.\r\n     */\r\n    protected static readonly DEFAULT_ATTRIBUTES = {\r\n        alpha: true,\r\n        antialias: false, /* Not defaulted to true, since it might interfere with manual blitting. */\r\n        depth: true,\r\n        failIfMajorPerformanceCaveat: false,\r\n        premultipliedAlpha: true,\r\n        preserveDrawingBuffer: false,\r\n        stencil: false,\r\n    };\r\n\r\n    /** @see {@link backend} */\r\n    protected _backend: Context.BackendType | undefined;\r\n\r\n    /**\r\n     * Created context. The actual type depends on the created context.\r\n     * @see {@link gl}\r\n     */\r\n    protected _context: WebGLRenderingContext | WebGL2RenderingContext | undefined;\r\n\r\n    /** @see {@link mask} */\r\n    protected _mask: ContextMasquerade | undefined;\r\n\r\n    /** @see {@link gl2facade} */\r\n    protected _gl2: GL2Facade;\r\n\r\n\r\n    /**\r\n     * Creates a masquerade object that can be used for debugging. This is intended to be called when requesting a\r\n     * context, i.e., before actually requesting it. For creation of a masquerade object, the following masquerade\r\n     * specifiers are evaluated in the following order:\r\n     *  1. msqrd_h GET parameter,\r\n     *  2. msqrd_p GET parameter,\r\n     *  3. data-msqrd-h attribute of the canvas element, and, finally,\r\n     *  4. data-msqrd-p attribute of the canvas element.\r\n     * If no specifier can be found, no object is created and undefined is returned.\r\n     * @param dataset - Dataset of the canvas element that might provide a data-msqrd-{h,p} attribute.\r\n     * @returns - Masquerade object when a specifier was found. If none was found undefined is returned.\r\n     */\r\n    protected static createMasqueradeFromGETorDataAttribute(dataset: DOMStringMap): ContextMasquerade | undefined {\r\n        const mask = ContextMasquerade.fromGET();\r\n        if (mask) {\r\n            return mask;\r\n        }\r\n        if (dataset.msqrdH) {\r\n            return ContextMasquerade.fromHash(dataset.msqrdH as string);\r\n        }\r\n        if (dataset.msqrdP) {\r\n            return ContextMasquerade.fromPreset(dataset.msqrdP as string);\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    // WEBGL 1 & 2 CONTEXT\r\n\r\n    /**\r\n     * Create a WebGL context. Note: this should only be called once in constructor, because the second and subsequent\r\n     * calls to getContext of an element will return null.\r\n     * @param element - Canvas element to request context from.\r\n     * @param attributes - Overrides the internal default attributes @see{Context.DEFAULT_ATTRIBUTES}.\r\n     * @returns - Context providing either a WebGLRenderingContext, WebGL2RenderingContext.\r\n     */\r\n    static request(element: HTMLCanvasElement,\r\n        attributes: WebGLContextAttributes = Context.DEFAULT_ATTRIBUTES): Context {\r\n\r\n        const dataset: DOMStringMap = element.dataset;\r\n        const mask = Context.createMasqueradeFromGETorDataAttribute(dataset);\r\n\r\n        /** Favor backend specification by masquerade over specification by data attribute. */\r\n        let request = mask ? (mask.backend as string) :\r\n            dataset.backend ? (dataset.backend as string).toLowerCase() : 'auto';\r\n\r\n        if (!(request in Context.BackendRequestType)) {\r\n            log(LogLevel.Warning,\r\n                `unknown backend '${dataset.backend}' changed to '${Context.BackendRequestType.auto}'`);\r\n            request = 'auto';\r\n        }\r\n\r\n        switch (request) {\r\n            case Context.BackendRequestType.webgl:\r\n                break;\r\n            case Context.BackendRequestType.experimental:\r\n            case Context.BackendRequestType.webgl1:\r\n            case Context.BackendRequestType.experimental1:\r\n                request = Context.BackendRequestType.webgl;\r\n                break;\r\n            case Context.BackendRequestType.webgl2:\r\n            case Context.BackendRequestType.experimental2:\r\n                request = Context.BackendRequestType.webgl2;\r\n                break;\r\n            default:\r\n                request = Context.BackendRequestType.auto;\r\n        }\r\n\r\n        let context;\r\n        if (request !== Context.BackendRequestType.webgl) {\r\n            context = this.requestWebGL2(element, attributes);\r\n        }\r\n        if (!context) {\r\n            context = this.requestWebGL1(element, attributes);\r\n            logIf(context !== undefined && request === Context.BackendRequestType.webgl2, LogLevel.Info,\r\n                `backend changed to '${Context.BackendRequestType.webgl}', given '${request}'`);\r\n        }\r\n\r\n        assert(!!context, `creating a context failed`);\r\n        return new Context(context, mask);\r\n    }\r\n\r\n    /**\r\n     * Helper that tries to create a WebGL 1 context (requests to 'webgl' and 'experimental-webgl' are made).\r\n     * @param element - Canvas element to request context from.\r\n     * @param attributes - Overrides the internal default attributes @see{Context.CONTEXT_ATTRIBUTES}.\r\n     * @returns {WebGLRenderingContext} - WebGL context object or null.\r\n     */\r\n    protected static requestWebGL1(element: HTMLCanvasElement,\r\n        attributes: WebGLContextAttributes = Context.DEFAULT_ATTRIBUTES): WebGLRenderingContext | undefined {\r\n\r\n        let context = element.getContext(Context.BackendRequestType.webgl, attributes);\r\n        if (context) {\r\n            return context;\r\n        }\r\n        context = element.getContext(Context.BackendRequestType.experimental, attributes) as WebGLRenderingContext;\r\n        return context === null ? undefined : context;\r\n    }\r\n\r\n    /**\r\n     * Helper that tries to create a WebGL 2 context (requests to 'webgl2' and 'experimental-webgl2' are made).\r\n     * @param element - Canvas element to request context from.\r\n     * @param attributes - Overrides the internal default attributes @see{Context.CONTEXT_ATTRIBUTES}.\r\n     * @returns {WebGL2RenderingContext} - WebGL2 context object or undefined.\r\n     */\r\n    protected static requestWebGL2(element: HTMLCanvasElement,\r\n        attributes: WebGLContextAttributes = Context.DEFAULT_ATTRIBUTES)\r\n        : WebGL2RenderingContext | undefined {\r\n\r\n        let context = element.getContext(Context.BackendRequestType.webgl2, attributes);\r\n        if (context) {\r\n            return context;\r\n        }\r\n        context = element.getContext(Context.BackendRequestType.experimental2, attributes) as WebGL2RenderingContext;\r\n        return context === null ? undefined : context;\r\n    }\r\n\r\n\r\n    // CONTEXT ATTRIBUTES\r\n\r\n    /**\r\n     * Cached attributes of the context.\r\n     */\r\n    protected _attributes: WebGLContextAttributes | undefined = undefined;\r\n\r\n    protected queryAttributes(): void {\r\n        const attributes = this._context!.getContextAttributes();\r\n\r\n        // Some browsers, e.g., Brave, might disable querying the attributes.\r\n        if (attributes === null) {\r\n            log(LogLevel.Error, `querying context attributes failed (probably blocked)`);\r\n            return;\r\n        }\r\n\r\n        this._attributes = attributes;\r\n    }\r\n\r\n    /**\r\n     * @link https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.2\r\n     * If the value is true, the drawing buffer has an alpha channel for the purposes of performing OpenGL destination\r\n     * alpha operations and compositing with the page. If the value is false, no alpha buffer is available.\r\n     */\r\n    get alpha(): boolean {\r\n        return this._attributes ? this._attributes!.alpha as boolean : false;\r\n    }\r\n\r\n    /**\r\n     * @link https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.2\r\n     * If the value is true and the implementation supports antialiasing the drawing buffer will perform antialiasing\r\n     * using its choice of technique (multisample/supersample) and quality. If the value is false or the implementation\r\n     * does not support antialiasing, no antialiasing is performed.\r\n     */\r\n    get antialias(): boolean {\r\n        return this._attributes ? this._attributes!.antialias as boolean : false;\r\n    }\r\n\r\n    /**\r\n     * @link https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.2\r\n     * If the value is true, the drawing buffer has a depth buffer of at least 16 bits. If the value is false, no depth\r\n     * buffer is available.\r\n     */\r\n    get depth(): boolean {\r\n        return this._attributes ? this._attributes!.depth as boolean : false;\r\n    }\r\n\r\n    /**\r\n     * @link https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.2\r\n     * If the value is true, context creation will fail if the implementation determines that the performance of the\r\n     * created WebGL context would be dramatically lower than that of a native application making equivalent OpenGL\r\n     * calls...\r\n     */\r\n    get failIfMajorPerformanceCaveat(): boolean {\r\n        return this._attributes ? this._attributes!.failIfMajorPerformanceCaveat as boolean : false;\r\n    }\r\n\r\n    /**\r\n     * @link https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.2\r\n     * If the value is true the page compositor will assume the drawing buffer contains colors with premultiplied alpha.\r\n     * If the value is false the page compositor will assume that colors in the drawing buffer are not premultiplied.\r\n     * This flag is ignored if the alpha flag is false. See Premultiplied Alpha for more information on the effects of\r\n     * the premultipliedAlpha flag.\r\n     */\r\n    get premultipliedAlpha(): boolean {\r\n        return this._attributes ? this._attributes!.premultipliedAlpha as boolean : false;\r\n    }\r\n\r\n    /**\r\n     * @link https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.2\r\n     * If false, once the drawing buffer is presented as described in theDrawing Buffer section, the contents of the\r\n     * drawing buffer are cleared to their default values. All elements of the drawing buffer (color, depth and stencil)\r\n     * are cleared. If the value is true the buffers will not be cleared and will preserve their values until cleared\r\n     * or overwritten by the author.\r\n     */\r\n    get preserveDrawingBuffer(): boolean {\r\n        return this._attributes ? this._attributes!.preserveDrawingBuffer as boolean : false;\r\n    }\r\n\r\n    /**\r\n     * @link https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.2\r\n     * If the value is true, the drawing buffer has a stencil buffer of at least 8 bits. If the value is false, no\r\n     * stencil buffer is available.\r\n     */\r\n    get stencil(): boolean {\r\n        return this._attributes ? this._attributes!.stencil as boolean : false;\r\n    }\r\n\r\n\r\n    // EXTENSIONS\r\n\r\n    /**\r\n     * Cached extension supported by the context.\r\n     */\r\n    protected _extensions: Array<string> = new Array<string>();\r\n\r\n    /**\r\n     * Checks if the given extension is supported. Please note that a 'supports' call asserts whether or not the\r\n     * extension is related to the WebGL version. For example, the following code would lead to an Error:\r\n     * ```\r\n     * this.supports('ANGLE_instanced_arrays'); // asserts in WebGL2 since the extension is incorporated by default\r\n     * ```\r\n     * If the context is masked by a ContextMasquerade the support of an extension might be concealed.\r\n     * @param extension - Extension identifier to query support for.\r\n     * @returns - True if the extension is supported, false otherwise.\r\n     */\r\n    supports(extension: string): boolean {\r\n        if (this._mask && this._mask.extensionsConceal.indexOf(extension) > -1) {\r\n            return false;\r\n        }\r\n\r\n        switch (this._backend) {\r\n            case Context.BackendType.WebGL1:\r\n                assert(WEBGL1_EXTENSIONS.indexOf(extension) > -1, `extension ${extension} not available to WebGL1`);\r\n                break;\r\n\r\n            case Context.BackendType.WebGL2:\r\n                assert(WEBGL2_DEFAULT_EXTENSIONS.indexOf(extension) === -1,\r\n                    `extension ${extension} supported by default in WebGL2`);\r\n                assert(WEBGL2_EXTENSIONS.indexOf(extension) > -1, `extension ${extension} not available to WebGL2`);\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return this._extensions.indexOf(extension) > -1;\r\n    }\r\n\r\n    /**\r\n     * Enable provided extensions. Each extension is only enabled if it is supported. Alternatively the extension can\r\n     * be queried for support and accessed (thereby enabled) directly. Thus, this function only acts as convenience\r\n     * interface for something like a mandatory extension configuration etc. Also, some extensions only effect GLSL\r\n     * capabilities and must be enabled explicitly without accessing the extension object.\r\n     * @param extensions - Array of extensions identifier that are to be enabled.\r\n     */\r\n    enable(extensions: Array<string>): void {\r\n        for (const extension of extensions) {\r\n            if (this.isWebGL1 && WEBGL1_EXTENSIONS.indexOf(extension) === -1) {\r\n                continue;\r\n            }\r\n            if (this.isWebGL2 && WEBGL2_EXTENSIONS.indexOf(extension) === -1) {\r\n                continue;\r\n            }\r\n            if (this.supports(extension) === false) {\r\n                continue;\r\n            }\r\n            this.extension(undefined, extension);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Queries all extensions for the current context and stores the result (supported or not supported). This is\r\n     * relevant to avoid continuous searches or regexp matching or substring queries in the complete extension string.\r\n     * Instead, the support is queried once and can be explicitly request in the public interface using properties.\r\n     *\r\n     * This function should get called only once per Context instance.\r\n     */\r\n    protected queryExtensionSupport(): void {\r\n        const extensions = this._context!.getSupportedExtensions();\r\n\r\n        // Some browsers, e.g., Brave, might disable querying the supported extensions.\r\n        if (extensions === null) {\r\n            log(LogLevel.Error, `querying supported extensions failed (probably blocked)`);\r\n            return;\r\n        }\r\n\r\n        // Only handle masquerade here and not within each supports-query?\r\n        for (const extension of extensions) {\r\n            if (this._mask && this._mask.extensionsConceal.indexOf(extension) > -1) {\r\n                continue;\r\n            }\r\n\r\n            this._extensions.push(extension);\r\n        }\r\n\r\n        if (this._backend === Context.BackendType.WebGL1) {\r\n            this.ANGLE_instanced_arrays_supported = this.supports('ANGLE_instanced_arrays');\r\n\r\n            this.EXT_blend_minmax_supported = this.supports('EXT_blend_minmax');\r\n            this.EXT_color_buffer_half_float_supported = this.supports('EXT_color_buffer_half_float');\r\n            this.EXT_disjoint_timer_query_supported = this.supports('EXT_disjoint_timer_query');\r\n            this.EXT_frag_depth_supported = this.supports('EXT_frag_depth');\r\n            this.EXT_sRGB_supported = this.supports('EXT_sRGB');\r\n            this.EXT_shader_texture_lod_supported = this.supports('EXT_shader_texture_lod');\r\n\r\n            this.OES_element_index_uint_supported = this.supports('OES_element_index_uint');\r\n            this.OES_standard_derivatives_supported = this.supports('OES_standard_derivatives');\r\n            this.OES_texture_float_supported = this.supports('OES_texture_float');\r\n            this.OES_texture_half_float_supported = this.supports('OES_texture_half_float');\r\n            this.OES_vertex_array_object_supported = this.supports('OES_vertex_array_object');\r\n\r\n            this.WEBGL_color_buffer_float_supported = this.supports('WEBGL_color_buffer_float');\r\n            this.WEBGL_depth_texture_supported = this.supports('WEBGL_depth_texture');\r\n            this.WEBGL_draw_buffers_supported = this.supports('WEBGL_draw_buffers');\r\n        }\r\n\r\n        if (this._backend === Context.BackendType.WebGL2) {\r\n            this.EXT_color_buffer_float_supported = this.supports('EXT_color_buffer_float');\r\n            this.EXT_disjoint_timer_query_webgl2_supported = this.supports('EXT_disjoint_timer_query_webgl2');\r\n        }\r\n\r\n        this.EXT_texture_filter_anisotropic_supported = this.supports('EXT_texture_filter_anisotropic');\r\n\r\n        this.OES_texture_float_linear_supported = this.supports('OES_texture_float_linear');\r\n        this.OES_texture_half_float_linear_supported = this.supports('OES_texture_half_float_linear');\r\n\r\n        this.WEBGL_compressed_texture_astc_supported = this.supports('WEBGL_compressed_texture_astc');\r\n        this.WEBGL_compressed_texture_atc_supported = this.supports('WEBGL_compressed_texture_atc');\r\n        this.WEBGL_compressed_texture_etc_supported = this.supports('WEBGL_compressed_texture_etc');\r\n        this.WEBGL_compressed_texture_etc1_supported = this.supports('WEBGL_compressed_texture_etc1');\r\n        this.WEBGL_compressed_texture_pvrtc_supported = this.supports('WEBGL_compressed_texture_pvrtc');\r\n        this.WEBGL_compressed_texture_s3tc_supported = this.supports('WEBGL_compressed_texture_s3tc');\r\n        this.WEBGL_compressed_texture_s3tc_srgb_supported = this.supports('WEBGL_compressed_texture_s3tc_srgb');\r\n        this.WEBGL_debug_renderer_info_supported = this.supports('WEBGL_debug_renderer_info');\r\n        this.WEBGL_debug_shaders_supported = this.supports('WEBGL_debug_shaders');\r\n        this.WEBGL_lose_context_supported = this.supports('WEBGL_lose_context');\r\n    }\r\n\r\n    /**\r\n     * Returns the cached extensions object for the given extension identifier. If no extensions is cached, it is\r\n     * queried. Asserts if the extension is provided by default in the current backend, not supported in general, or\r\n     * unknown to the specification.\r\n     * Please not that the availability of an extension might be concealed by the context's mask.\r\n     * @param out - Member the extension object is cached into.\r\n     * @param extension - Extension identifier to query.\r\n     * @returns - Extension object.\r\n     */\r\n    protected extension(out: any, extension: string): any {\r\n        if (out === undefined) {\r\n            assert(this.supports(extension), `extension ${extension} expected to be supported`);\r\n            out = this._context!.getExtension(extension);\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Context this is of type 'any' for now, since WebGL2RenderingContext not available but supported. This\r\n     * constructor is protected to enforce context creation using `request`. It queries extension support and\r\n     * configures context specifics for convenience, e.g., HALF_FLOAT format.\r\n     */\r\n    protected constructor(context: any, mask: ContextMasquerade | undefined) {\r\n        this._context = context;\r\n        this._mask = mask;\r\n\r\n        const contextString = context.toString();\r\n\r\n        {\r\n            // WebGL chrome debugger renames Context to CaptureContext\r\n            const webgl1 = /WebGLRenderingContext/.test(contextString) ||\r\n                /CaptureContext/.test(contextString);\r\n            const webgl2 = /WebGL2RenderingContext/.test(contextString);\r\n\r\n            this._backend = webgl1 ? Context.BackendType.WebGL1 : webgl2 ? Context.BackendType.WebGL2 : undefined;\r\n        }\r\n\r\n        assert(this._backend !== undefined && this._backend.valueOf() !== Context.BackendType.Invalid.valueOf(),\r\n            `context is neither webgl nor webgl2, given ${contextString}`);\r\n\r\n        this.queryAttributes();\r\n        this.queryExtensionSupport();\r\n\r\n        // undefine all masked functions\r\n        if (this._mask && this._mask.functionsUndefine) {\r\n            for (const func in this._mask.functionsUndefine) {\r\n                (this._context as any)[func] = undefined;\r\n            }\r\n        }\r\n\r\n        // create an instance for a gl2 facade (unifies mandatory interfaces of the webgl and webgl2 api)\r\n        this._gl2 = new GL2Facade(this);\r\n    }\r\n\r\n\r\n    /** @see {@link allocationRegister} */\r\n    protected _allocationRegister = new AllocationRegister();\r\n\r\n    /**\r\n     * The context's GPU allocation register for use of tracking memory allocations.\r\n     */\r\n    get allocationRegister(): AllocationRegister {\r\n        return this._allocationRegister;\r\n    }\r\n\r\n\r\n    /**\r\n     * The created rendering backend (webgl context type), either 'webgl' or 'webgl2' based on which one was\r\n     * created successfully. If no context could be created undefined is returned.\r\n     * @returns - Backend that was created on construction.\r\n     */\r\n    get backend(): Context.BackendType | undefined {\r\n        return this._backend;\r\n    }\r\n\r\n    /**\r\n     * Provides a human-readable string of the backend.\r\n     */\r\n    get backendString(): string | undefined {\r\n        switch (this._backend) {\r\n            case Context.BackendType.WebGL1:\r\n                return 'WebGL';\r\n            case Context.BackendType.WebGL2:\r\n                return 'WebGL2';\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Provides an array of all extensions supported by the used WebGL1/2 context.\r\n     */\r\n    get extensions(): Array<string> {\r\n        return this._extensions;\r\n    }\r\n\r\n    /**\r\n     * Masquerade object applied to a context instance.\r\n     */\r\n    get mask(): ContextMasquerade | undefined {\r\n        return this._mask;\r\n    }\r\n\r\n    /**\r\n     * Access to either the WebGLRenderingContext or WebGL2RenderingContext.\r\n     */\r\n    get gl(): any { // WebGLRenderingContext | WebGL2RenderingContext\r\n        return this._context;\r\n    }\r\n\r\n    /**\r\n     * WebGL2 facade for WebGL2 API like access to features mandatory to this engine.\r\n     */\r\n    get gl2facade(): GL2Facade {\r\n        return this._gl2;\r\n    }\r\n\r\n    /**\r\n     * True if the context is a WebGL1 context, otherwise false.\r\n     */\r\n    get isWebGL1(): boolean {\r\n        return this._backend === Context.BackendType.WebGL1;\r\n    }\r\n\r\n    /**\r\n     * True if the context is a WebGL2 context, otherwise false.\r\n     */\r\n    get isWebGL2(): boolean {\r\n        return this._backend === Context.BackendType.WebGL2;\r\n    }\r\n\r\n\r\n    // EXTENSION QUERIES\r\n\r\n    // WebGL1, WebGL2-default\r\n    protected ANGLE_instanced_arrays: any;\r\n    protected ANGLE_instanced_arrays_supported: boolean;\r\n    get supportsInstancedArrays(): boolean {\r\n        return this.ANGLE_instanced_arrays_supported;\r\n    }\r\n    get instancedArrays(): any {\r\n        return this.extension(this.ANGLE_instanced_arrays, 'ANGLE_instanced_arrays');\r\n    }\r\n\r\n    // WebGL1, WebGL2-default\r\n    protected EXT_blend_minmax: any;\r\n    protected EXT_blend_minmax_supported: boolean;\r\n    get supportsBlendMinmax(): boolean {\r\n        return this.EXT_blend_minmax_supported;\r\n    }\r\n    get blendMinmax(): any {\r\n        return this.extension(this.EXT_blend_minmax, 'EXT_blend_minmax');\r\n    }\r\n\r\n    // WebGL1\r\n    protected EXT_color_buffer_half_float: any;\r\n    protected EXT_color_buffer_half_float_supported: boolean;\r\n    get supportsColorBufferHalfFloat(): boolean {\r\n        return this.EXT_color_buffer_half_float_supported;\r\n    }\r\n    get colorBufferHalfFloat(): any {\r\n        return this.extension(this.EXT_color_buffer_half_float, 'EXT_color_buffer_half_float');\r\n    }\r\n\r\n    // WebGL1\r\n    protected EXT_disjoint_timer_query: any;\r\n    protected EXT_disjoint_timer_query_supported: boolean;\r\n    get supportsDisjointTimerQuery(): boolean {\r\n        return this.EXT_disjoint_timer_query_supported;\r\n    }\r\n    get disjointTimerQuery(): any {\r\n        return this.extension(this.EXT_disjoint_timer_query, 'EXT_disjoint_timer_query');\r\n    }\r\n\r\n    // WebGL2\r\n    protected EXT_disjoint_timer_query_webgl2: any;\r\n    protected EXT_disjoint_timer_query_webgl2_supported: boolean;\r\n    get supportsDisjointTimerQueryWebGL2(): boolean {\r\n        return this.EXT_disjoint_timer_query_webgl2_supported;\r\n    }\r\n    get disjointTimerQueryWebGL2(): any {\r\n        return this.extension(this.EXT_disjoint_timer_query_webgl2, 'EXT_disjoint_timer_query_webgl2');\r\n    }\r\n\r\n    // WebGL1, WebGL2-default\r\n    protected EXT_frag_depth: any;\r\n    protected EXT_frag_depth_supported: boolean;\r\n    get supportsFragDepth(): boolean {\r\n        return this.EXT_frag_depth_supported;\r\n    }\r\n    get fragDepth(): any {\r\n        return this.extension(this.EXT_frag_depth, 'EXT_frag_depth');\r\n    }\r\n\r\n    // WebGL1, WebGL2-default\r\n    protected EXT_sRGB: any;\r\n    protected EXT_sRGB_supported: boolean;\r\n    get supportsSRGB(): boolean {\r\n        return this.EXT_sRGB_supported;\r\n    }\r\n    get sRGB(): any {\r\n        return this.extension(this.EXT_sRGB, 'EXT_sRGB');\r\n    }\r\n\r\n    // WebGL1, WebGL2-default\r\n    protected EXT_shader_texture_lod: any;\r\n    protected EXT_shader_texture_lod_supported: boolean;\r\n    get supportsShaderTextureLOD(): boolean {\r\n        return this.EXT_shader_texture_lod_supported;\r\n    }\r\n    get shaderTextureLOD(): any {\r\n        return this.extension(this.EXT_shader_texture_lod, 'EXT_shader_texture_lod');\r\n    }\r\n\r\n    // WebGL1, WebGL2\r\n    protected EXT_texture_filter_anisotropic: any;\r\n    protected EXT_texture_filter_anisotropic_supported: boolean;\r\n    get supportsTextureFilterAnisotropic(): boolean {\r\n        return this.EXT_texture_filter_anisotropic_supported;\r\n    }\r\n    get textureFilterAnisotropic(): any {\r\n        return this.extension(this.EXT_texture_filter_anisotropic, 'EXT_texture_filter_anisotropic');\r\n    }\r\n\r\n    // WebGL1, WebGL2-default\r\n    protected OES_element_index_uint: any;\r\n    protected OES_element_index_uint_supported: boolean;\r\n    get supportsElementIndexUint(): boolean {\r\n        return this.OES_element_index_uint_supported;\r\n    }\r\n    get elementIndexUint(): any {\r\n        return this.extension(this.OES_element_index_uint, 'OES_element_index_uint');\r\n    }\r\n\r\n    // WebGL1, WebGL2-default\r\n    protected OES_standard_derivatives: any;\r\n    protected OES_standard_derivatives_supported: boolean;\r\n    get supportsStandardDerivatives(): boolean {\r\n        return this.OES_standard_derivatives_supported;\r\n    }\r\n    get standardDerivatives(): any {\r\n        return this.extension(this.OES_standard_derivatives, 'OES_standard_derivatives');\r\n    }\r\n\r\n    // WebGL1, WebGL2-default\r\n    protected OES_texture_float: any;\r\n    protected OES_texture_float_supported: boolean;\r\n    get supportsTextureFloat(): boolean {\r\n        return this.OES_texture_float_supported;\r\n    }\r\n    get textureFloat(): any {\r\n        return this.extension(this.OES_texture_float, 'OES_texture_float');\r\n    }\r\n\r\n    // WebGL1, WebGL2\r\n    protected OES_texture_float_linear: any;\r\n    protected OES_texture_float_linear_supported: boolean;\r\n    get supportsTextureFloatLinear(): boolean {\r\n        return this.OES_texture_float_linear_supported;\r\n    }\r\n    get textureFloatLinear(): any {\r\n        return this.extension(this.OES_texture_float_linear, 'OES_texture_float_linear');\r\n    }\r\n\r\n    // WebGL1, WebGL2-default\r\n    protected OES_texture_half_float: any;\r\n    protected OES_texture_half_float_supported: boolean;\r\n    get supportsTextureHalfFloat(): boolean {\r\n        return this.OES_texture_half_float_supported;\r\n    }\r\n    get textureHalfFloat(): any {\r\n        return this.extension(this.OES_texture_half_float, 'OES_texture_half_float');\r\n    }\r\n\r\n    // WebGL1, WebGL2\r\n    protected OES_texture_half_float_linear: any;\r\n    protected OES_texture_half_float_linear_supported: boolean;\r\n    get supportsTextureHalfFloatLinear(): boolean {\r\n        return this.OES_texture_half_float_linear_supported;\r\n    }\r\n    get textureHalfFloatLinear(): any {\r\n        return this.extension(this.OES_texture_half_float_linear, 'OES_texture_half_float_linear');\r\n    }\r\n\r\n    // WebGL1, WebGL2-default\r\n    protected OES_vertex_array_object: any;\r\n    protected OES_vertex_array_object_supported: boolean;\r\n    get supportsVertexArrayObject(): boolean {\r\n        return this.OES_vertex_array_object_supported;\r\n    }\r\n    get vertexArrayObject(): any {\r\n        return this.extension(this.OES_vertex_array_object, 'OES_vertex_array_object');\r\n    }\r\n\r\n    // WebGL1\r\n    protected WEBGL_color_buffer_float: any;\r\n    protected WEBGL_color_buffer_float_supported: boolean;\r\n    // WebGL2\r\n    protected EXT_color_buffer_float: any;\r\n    protected EXT_color_buffer_float_supported: boolean;\r\n    get supportsColorBufferFloat(): boolean | undefined {\r\n        switch (this._backend) {\r\n            case Context.BackendType.WebGL1:\r\n                return this.WEBGL_color_buffer_float_supported;\r\n            case Context.BackendType.WebGL2:\r\n                return this.EXT_color_buffer_float_supported;\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n    get colorBufferFloat(): any | undefined {\r\n        switch (this._backend) {\r\n            case Context.BackendType.WebGL1:\r\n                return this.extension(this.WEBGL_color_buffer_float, 'WEBGL_color_buffer_float');\r\n            case Context.BackendType.WebGL2:\r\n                return this.extension(this.EXT_color_buffer_float, 'EXT_color_buffer_float');\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n\r\n    // WebGL1, WebGL2\r\n    protected WEBGL_compressed_texture_astc: any;\r\n    protected WEBGL_compressed_texture_astc_supported: boolean;\r\n    get supportsCompressedTextureASTC(): boolean {\r\n        return this.WEBGL_compressed_texture_astc_supported;\r\n    }\r\n    get compressedTextureASTC(): any {\r\n        return this.extension(this.WEBGL_compressed_texture_astc, 'WEBGL_compressed_texture_astc');\r\n    }\r\n\r\n    // WebGL1, WebGL2\r\n    protected WEBGL_compressed_texture_atc: any;\r\n    protected WEBGL_compressed_texture_atc_supported: boolean;\r\n    get supportsCompressedTextureATC(): boolean {\r\n        return this.WEBGL_compressed_texture_atc_supported;\r\n    }\r\n    get compressedTextureATC(): any {\r\n        return this.extension(this.WEBGL_compressed_texture_atc, 'WEBGL_compressed_texture_atc');\r\n    }\r\n\r\n    // WebGL1, WebGL2\r\n    protected WEBGL_compressed_texture_etc: any;\r\n    protected WEBGL_compressed_texture_etc_supported: boolean;\r\n    get supportsCompressedTextureETC(): boolean {\r\n        return this.WEBGL_compressed_texture_etc_supported;\r\n    }\r\n    get compressedTextureETC(): any {\r\n        return this.extension(this.WEBGL_compressed_texture_etc, 'WEBGL_compressed_texture_etc');\r\n    }\r\n\r\n    // WebGL1, WebGL2\r\n    protected WEBGL_compressed_texture_etc1: any;\r\n    protected WEBGL_compressed_texture_etc1_supported: boolean;\r\n    get supportsCompressedTextureETC1(): boolean {\r\n        return this.WEBGL_compressed_texture_etc1_supported;\r\n    }\r\n    get compressedTextureETC1(): any {\r\n        return this.extension(this.WEBGL_compressed_texture_etc1, 'WEBGL_compressed_texture_etc1');\r\n    }\r\n\r\n    // WebGL1, WebGL2\r\n    protected WEBGL_compressed_texture_pvrtc: any;\r\n    protected WEBGL_compressed_texture_pvrtc_supported: boolean;\r\n    get supportsCompressedTexturePVRTC(): boolean {\r\n        return this.WEBGL_compressed_texture_pvrtc_supported;\r\n    }\r\n    get compressedTexturePVRTC(): any {\r\n        return this.extension(this.WEBGL_compressed_texture_pvrtc, 'WEBGL_compressed_texture_pvrtc');\r\n    }\r\n\r\n    // WebGL1, WebGL2\r\n    protected WEBGL_compressed_texture_s3tc: any;\r\n    protected WEBGL_compressed_texture_s3tc_supported: boolean;\r\n    get supportsCompressedTextureS3TC(): boolean {\r\n        return this.WEBGL_compressed_texture_s3tc_supported;\r\n    }\r\n    get compressedTextureS3TC(): any {\r\n        return this.extension(this.WEBGL_compressed_texture_s3tc, 'WEBGL_compressed_texture_s3tc');\r\n    }\r\n\r\n    // WebGL1, WebGL2\r\n    protected WEBGL_compressed_texture_s3tc_srgb: any;\r\n    protected WEBGL_compressed_texture_s3tc_srgb_supported: boolean;\r\n    get supportsCompressedTextureS3TCSRGB(): boolean {\r\n        return this.WEBGL_compressed_texture_s3tc_srgb_supported;\r\n    }\r\n    get compressedTextureS3TCSRGB(): any {\r\n        return this.extension(this.WEBGL_compressed_texture_s3tc_srgb, 'WEBGL_compressed_texture_s3tc_srgb');\r\n    }\r\n\r\n    // WebGL1, WebGL2\r\n    protected WEBGL_debug_renderer_info: any;\r\n    protected WEBGL_debug_renderer_info_supported: boolean;\r\n    get supportsDebugRendererInfo(): boolean {\r\n        return this.WEBGL_debug_renderer_info_supported;\r\n    }\r\n    get debugRendererInfo(): any {\r\n        return this.extension(this.WEBGL_debug_renderer_info, 'WEBGL_debug_renderer_info');\r\n    }\r\n\r\n    // WebGL1, WebGL2\r\n    protected WEBGL_debug_shaders: any;\r\n    protected WEBGL_debug_shaders_supported: boolean;\r\n    get supportsDebugShaders(): boolean {\r\n        return this.WEBGL_debug_shaders_supported;\r\n    }\r\n    get debugShaders(): any {\r\n        return this.extension(this.WEBGL_debug_shaders, 'WEBGL_debug_shaders');\r\n    }\r\n\r\n    // WebGL1, WebGL2-default\r\n    protected WEBGL_depth_texture: any;\r\n    protected WEBGL_depth_texture_supported: boolean;\r\n    get supportsDepthTexture(): boolean {\r\n        return this.WEBGL_depth_texture_supported;\r\n    }\r\n    get depthTexture(): any {\r\n        return this.extension(this.WEBGL_depth_texture, 'WEBGL_depth_texture');\r\n    }\r\n\r\n    // WebGL1, WebGL2-default\r\n    protected WEBGL_draw_buffers: any;\r\n    protected WEBGL_draw_buffers_supported: boolean;\r\n    get supportsDrawBuffers(): boolean {\r\n        return this.WEBGL_draw_buffers_supported;\r\n    }\r\n    get drawBuffers(): any {\r\n        return this.extension(this.WEBGL_draw_buffers, 'WEBGL_draw_buffers');\r\n    }\r\n\r\n    // WebGL1, WebGL2\r\n    protected WEBGL_lose_context: any;\r\n    protected WEBGL_lose_context_supported: boolean;\r\n    get supportsLoseContext(): boolean {\r\n        return this.WEBGL_lose_context_supported;\r\n    }\r\n    get loseContext(): any {\r\n        return this.extension(this.WEBGL_lose_context, 'WEBGL_lose_context');\r\n    }\r\n\r\n    // FUNCTION QUERIES\r\n\r\n    /**\r\n     * True if WebGL2 blitFramebuffer is supported, false otherwise. This is experimental technology.\r\n     */\r\n    get supportsBlitFramebuffer(): boolean {\r\n        return (this._context as any).blitFramebuffer !== undefined;\r\n    }\r\n\r\n    /**\r\n     * True if WebGL2 readBuffer is supported, false otherwise. This is experimental technology.\r\n     */\r\n    get supportsReadBuffer(): boolean {\r\n        return (this._context as any).readBuffer !== undefined;\r\n    }\r\n\r\n    /**\r\n     * True if WebGL2 texImage3D draft is supported, false otherwise. This is experimental technology.\r\n     */\r\n    get supportsTexImage3D(): boolean {\r\n        return (this._context as any).texImage3D !== undefined;\r\n    }\r\n\r\n\r\n    // PARAMETER QUERIES\r\n\r\n    param(pname: GLenum): any {\r\n        assert(!!this._context, `expected context to be valid`);\r\n        return this._context!.getParameter(pname);\r\n    }\r\n\r\n    /**\r\n     * Provides the context's extension hash. The hash can be used for context masquerade.\r\n     */\r\n    hash(): string {\r\n        return ExtensionsHash.encode(this._backend as Context.BackendType, this._extensions);\r\n    }\r\n\r\n    /**\r\n     * Queries various parameters (depending on the type of context and support of extensions) and returns them as\r\n     * formatted string.\r\n     * @returns - Array of 2-tuple containing (1) the queried enum as string and (2) the resulting parameter value.\r\n     */\r\n    about(): Array<[string, number | string]> {\r\n\r\n        const available = 'ok';\r\n        const unavailable = 'na';\r\n\r\n        if (this._backend === Context.BackendType.Invalid) {\r\n            return new Array<[string, number | string]>();\r\n        }\r\n\r\n        assert(!!this._context, `expected context to be valid`);\r\n        const context = this._context!;\r\n\r\n        const pNamesAndValues = new Array<[string, number | string]>();\r\n\r\n        pNamesAndValues.push(['BACKEND (GLOPERATE)', this.backend as Context.BackendType]);\r\n        pNamesAndValues.push(['CONTEXT_HASH (GLOPERATE)', this.hash()]);\r\n\r\n        pNamesAndValues.push(['RENDERER', this.param(context.RENDERER)]);\r\n        pNamesAndValues.push(['VENDOR', this.param(context.VENDOR)]);\r\n        pNamesAndValues.push(['VERSION', this.param(context.VERSION)]);\r\n        pNamesAndValues.push(['SHADING_LANGUAGE_VERSION', this.param(context.SHADING_LANGUAGE_VERSION)]);\r\n\r\n        /* Debug Render Info Extension - Unmasked Vendor and Renderer. */\r\n        pNamesAndValues.push(['UNMASKED_VENDOR_WEBGL', !this.supportsDebugRendererInfo ? unavailable :\r\n            this.param(this.debugRendererInfo.UNMASKED_VENDOR_WEBGL)]);\r\n        pNamesAndValues.push(['UNMASKED_RENDERER_WEBGL', !this.supportsDebugRendererInfo ? unavailable :\r\n            this.param(this.debugRendererInfo.UNMASKED_RENDERER_WEBGL)]);\r\n\r\n        /* Actual Context Attributes. */\r\n        pNamesAndValues.push(['ALPHA (ATTRIBUTE)', String(this.alpha)]);\r\n        pNamesAndValues.push(['ANTIALIAS (ATTRIBUTE)', String(this.antialias)]);\r\n        pNamesAndValues.push(['DEPTH (ATTRIBUTE)', String(this.depth)]);\r\n        pNamesAndValues.push(['FAIL_IF_MAJOR_PERFORMANCE_CAVEAT (ATTRIBUTE)',\r\n            String(this.failIfMajorPerformanceCaveat)]);\r\n        pNamesAndValues.push(['PREMULTIPLIED_ALPHA (ATTRIBUTE)', String(this.premultipliedAlpha)]);\r\n        pNamesAndValues.push(['PRESERVE_DRAWING_BUFFER (ATTRIBUTE)', String(this.preserveDrawingBuffer)]);\r\n        pNamesAndValues.push(['STENCIL (ATTRIBUTE)', String(this.stencil)]);\r\n\r\n        /* Window Info. */\r\n        pNamesAndValues.push(['DEVICE_PIXEL_RATIO (WINDOW)', window.devicePixelRatio]);\r\n\r\n        /* Navigator Info. */\r\n        pNamesAndValues.push(['APP_CODE_NAME (NAVIGATOR)', window.navigator.appCodeName]);\r\n        pNamesAndValues.push(['APP_NAME (NAVIGATOR)', window.navigator.appName]);\r\n        pNamesAndValues.push(['APP_VERSION (NAVIGATOR)', window.navigator.appVersion]);\r\n        pNamesAndValues.push(['PLATFORM (NAVIGATOR)', window.navigator.platform]);\r\n        pNamesAndValues.push(['HARDWARE_CONCURRENCY (NAVIGATOR)', window.navigator.appCodeName]);\r\n        pNamesAndValues.push(['VENDOR (NAVIGATOR)', window.navigator.vendor]);\r\n        pNamesAndValues.push(['VENDOR_SUB (NAVIGATOR)', window.navigator.vendorSub]);\r\n\r\n        /* Max and min queries - context limitations. */\r\n        pNamesAndValues.push(['MAX_COMBINED_TEXTURE_IMAGE_UNITS',\r\n            this.param(context.MAX_COMBINED_TEXTURE_IMAGE_UNITS)]);\r\n        pNamesAndValues.push(['MAX_CUBE_MAP_TEXTURE_SIZE',\r\n            this.param(context.MAX_CUBE_MAP_TEXTURE_SIZE)]);\r\n        pNamesAndValues.push(['MAX_FRAGMENT_UNIFORM_VECTORS',\r\n            this.param(context.MAX_FRAGMENT_UNIFORM_VECTORS)]);\r\n        pNamesAndValues.push(['MAX_RENDERBUFFER_SIZE',\r\n            this.param(context.MAX_RENDERBUFFER_SIZE)]);\r\n        pNamesAndValues.push(['MAX_TEXTURE_IMAGE_UNITS',\r\n            this.param(context.MAX_TEXTURE_IMAGE_UNITS)]);\r\n        pNamesAndValues.push(['MAX_TEXTURE_SIZE',\r\n            this.param(context.MAX_TEXTURE_SIZE)]);\r\n        pNamesAndValues.push(['MAX_VARYING_VECTORS',\r\n            this.param(context.MAX_VARYING_VECTORS)]);\r\n        pNamesAndValues.push(['MAX_VERTEX_ATTRIBS',\r\n            this.param(context.MAX_VERTEX_ATTRIBS)]);\r\n        pNamesAndValues.push(['MAX_VERTEX_TEXTURE_IMAGE_UNITS',\r\n            this.param(context.MAX_VERTEX_TEXTURE_IMAGE_UNITS)]);\r\n        pNamesAndValues.push(['MAX_VERTEX_UNIFORM_VECTORS',\r\n            this.param(context.MAX_VERTEX_UNIFORM_VECTORS)]);\r\n\r\n        const MAX_VIEWPORT_DIMS = this.param(context.MAX_VIEWPORT_DIMS);\r\n\r\n        pNamesAndValues.push(['MAX_VIEWPORT_DIMS (WIDTH)', MAX_VIEWPORT_DIMS ? MAX_VIEWPORT_DIMS[0] : null]);\r\n        pNamesAndValues.push(['MAX_VIEWPORT_DIMS (HEIGHT)', MAX_VIEWPORT_DIMS ? MAX_VIEWPORT_DIMS[1] : null]);\r\n\r\n\r\n        if (this.isWebGL2) {\r\n            const context = this._context as WebGL2RenderingContext;\r\n            pNamesAndValues.push(['MAX_3D_TEXTURE_SIZE',\r\n                this.param(context.MAX_3D_TEXTURE_SIZE)]);\r\n            pNamesAndValues.push(['MAX_ARRAY_TEXTURE_LAYERS',\r\n                this.param(context.MAX_ARRAY_TEXTURE_LAYERS)]);\r\n            pNamesAndValues.push(['MAX_CLIENT_WAIT_TIMEOUT_WEBGL',\r\n                this.param(context.MAX_CLIENT_WAIT_TIMEOUT_WEBGL)]);\r\n            pNamesAndValues.push(['MAX_COLOR_ATTACHMENTS',\r\n                this.param(context.MAX_COLOR_ATTACHMENTS)]);\r\n            pNamesAndValues.push(['MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS',\r\n                this.param(context.MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS)]);\r\n            pNamesAndValues.push(['MAX_COMBINED_UNIFORM_BLOCKS',\r\n                this.param(context.MAX_COMBINED_UNIFORM_BLOCKS)]);\r\n            pNamesAndValues.push(['MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS',\r\n                this.param(context.MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS)]);\r\n            pNamesAndValues.push(['MAX_DRAW_BUFFERS',\r\n                this.param(context.MAX_DRAW_BUFFERS)]);\r\n            pNamesAndValues.push(['MAX_ELEMENT_INDEX',\r\n                this.param(context.MAX_ELEMENT_INDEX)]);\r\n            pNamesAndValues.push(['MAX_ELEMENTS_INDICES',\r\n                this.param(context.MAX_ELEMENTS_INDICES)]);\r\n            pNamesAndValues.push(['MAX_ELEMENTS_VERTICES',\r\n                this.param(context.MAX_ELEMENTS_VERTICES)]);\r\n            pNamesAndValues.push(['MAX_FRAGMENT_INPUT_COMPONENTS',\r\n                this.param(context.MAX_FRAGMENT_INPUT_COMPONENTS)]);\r\n            pNamesAndValues.push(['MAX_FRAGMENT_UNIFORM_BLOCKS',\r\n                this.param(context.MAX_FRAGMENT_UNIFORM_BLOCKS)]);\r\n            pNamesAndValues.push(['MAX_FRAGMENT_UNIFORM_COMPONENTS',\r\n                this.param(context.MAX_FRAGMENT_UNIFORM_COMPONENTS)]);\r\n            pNamesAndValues.push(['MAX_PROGRAM_TEXEL_OFFSET',\r\n                this.param(context.MAX_PROGRAM_TEXEL_OFFSET)]);\r\n            pNamesAndValues.push(['MAX_SAMPLES',\r\n                this.param(context.MAX_SAMPLES)]);\r\n            pNamesAndValues.push(['MAX_SERVER_WAIT_TIMEOUT',\r\n                this.param(context.MAX_SERVER_WAIT_TIMEOUT)]);\r\n            pNamesAndValues.push(['MAX_TEXTURE_LOD_BIAS',\r\n                this.param(context.MAX_TEXTURE_LOD_BIAS)]);\r\n            pNamesAndValues.push(['MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS',\r\n                this.param(context.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS)]);\r\n            pNamesAndValues.push(['MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS',\r\n                this.param(context.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS)]);\r\n            pNamesAndValues.push(['MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS',\r\n                this.param(context.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS)]);\r\n            pNamesAndValues.push(['MAX_UNIFORM_BLOCK_SIZE',\r\n                this.param(context.MAX_UNIFORM_BLOCK_SIZE)]);\r\n            pNamesAndValues.push(['MAX_UNIFORM_BUFFER_BINDINGS',\r\n                this.param(context.MAX_UNIFORM_BUFFER_BINDINGS)]);\r\n            pNamesAndValues.push(['MAX_VARYING_COMPONENTS',\r\n                this.param(context.MAX_VARYING_COMPONENTS)]);\r\n            pNamesAndValues.push(['MAX_VERTEX_OUTPUT_COMPONENTS',\r\n                this.param(context.MAX_VERTEX_OUTPUT_COMPONENTS)]);\r\n            pNamesAndValues.push(['MAX_VERTEX_UNIFORM_BLOCKS',\r\n                this.param(context.MAX_VERTEX_UNIFORM_BLOCKS)]);\r\n            pNamesAndValues.push(['MAX_VERTEX_UNIFORM_COMPONENTS',\r\n                this.param(context.MAX_VERTEX_UNIFORM_COMPONENTS)]);\r\n            pNamesAndValues.push(['MIN_PROGRAM_TEXEL_OFFSET',\r\n                this.param(context.MIN_PROGRAM_TEXEL_OFFSET)]);\r\n        }\r\n\r\n        if (this.isWebGL1) {\r\n            for (const extension of WEBGL1_EXTENSIONS) {\r\n                pNamesAndValues.push([extension, this.supports(extension) ? available : unavailable]);\r\n            }\r\n        } else if (this.isWebGL2) {\r\n            for (const extension of WEBGL2_DEFAULT_EXTENSIONS) {\r\n                pNamesAndValues.push([`${extension} (default)`, available]);\r\n            }\r\n            for (const extension of WEBGL2_EXTENSIONS) {\r\n                pNamesAndValues.push([extension, this.supports(extension) ? available : unavailable]);\r\n            }\r\n        }\r\n\r\n        return pNamesAndValues;\r\n    }\r\n\r\n    /**\r\n     * Creates a well formated about string, e.g., for logging.\r\n     */\r\n    aboutString(): string {\r\n        const about = this.about();\r\n\r\n        let maxPNameLength = 0;\r\n        for (const tuple of about) {\r\n            maxPNameLength = Math.max(tuple[0].length, maxPNameLength);\r\n        }\r\n\r\n        let index = 0;\r\n        let message = ``;\r\n\r\n        const extensionSeparator = this.isWebGL2 ? 63 + WEBGL2_DEFAULT_EXTENSIONS.length : -1;\r\n        for (const tuple of about) {\r\n            /* Provide some semantic grouping: Core, Limits, Extensions, ... */\r\n            switch (index) {\r\n                case 2:  // End of Backend and Context Hash\r\n                case 6:  // End of Core Context Info\r\n                case 8:  // End of unmasked vendor and renderer\r\n                case 15: // End of context attributes\r\n                case 16: // End of window attributes\r\n                case 23: // End of navigator attributes\r\n                case 35: // End of WebGL 1 specific Limits\r\n                case 63: // End of WebGL 2 specific Limit, start of extensions\r\n                case extensionSeparator: // End of default Extensions (in case of WebGL2) or -1\r\n                    message += `\\n`;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            message += `  ${tuple[0]} ${'-'.repeat(maxPNameLength - tuple[0].length)}-- ${tuple[1]}\\n`;\r\n            ++index;\r\n        }\r\n        message += `\\n`;\r\n\r\n        return message;\r\n    }\r\n\r\n    /**\r\n     * Logs a well formated list of all queried about params (names and associated values).\r\n     * @param verbosity - Log verbosity that is to be used for logging.\r\n     */\r\n    logAbout(verbosity: LogLevel = LogLevel.Info): void {\r\n        log(verbosity, `context.about\\n\\n` + this.aboutString());\r\n    }\r\n\r\n    /**\r\n     * Invokes `logAbout` @see{@link logAbout}) iff the given statement has resolved to true.\r\n     * @param statement - Result of an expression expected to be true in order to invoke logPerformanceStop.\r\n     * @param verbosity - Log verbosity that is to be used for logging.\r\n     */\r\n    logAboutIf(statement: boolean, verbosity: LogLevel = LogLevel.Info): void {\r\n        logIf(statement, verbosity, `context.about\\n\\n` + this.aboutString());\r\n    }\r\n\r\n\r\n    // CONTEXT-RELATED AUXILIARIES\r\n\r\n    /**\r\n     * Provides the size in bytes of certain WebGL format enumerator. Please note that some byte sizes might vary based\r\n     * on context attributes or the bound render, thus, DEPTH_COMPONENT and DEPTH_STENCIL are not covered by this\r\n     * function. @see {@link byteSizeOfFormat}\r\n     */\r\n    byteSizeOfFormat(format: GLenum): number {\r\n        return byteSizeOfFormat(this, format);\r\n    }\r\n\r\n}\r\n\r\nexport namespace Context {\r\n\r\n    /**\r\n     * Supported OpenGL backend types.\r\n     */\r\n    export enum BackendType {\r\n        Invalid = 'invalid',\r\n        WebGL1 = 'webgl1',\r\n        WebGL2 = 'webgl2',\r\n    }\r\n\r\n    /**\r\n     * The list of valid backend identifiers that can be requested and matched to backend types.\r\n     * List adopted from https://developer.mozilla.org/de/docs/Web/API/HTMLCanvasElement/getContext.\r\n     */\r\n    export enum BackendRequestType {\r\n        auto = 'auto',\r\n        webgl = 'webgl',\r\n        experimental = 'experimental-webgl',\r\n        webgl1 = 'webgl1',\r\n        experimental1 = 'experimental-webgl1',\r\n        webgl2 = 'webgl2',\r\n        experimental2 = 'experimental-webgl2',\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { assert, GETparameter } from './auxiliaries';\r\n\r\nimport { ExtensionsHash } from './extensionshash';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * Mask object for context masquerade. It is used to artificially restrict the capabilities of context instances.\r\n * It is intended to simplify cross-browser testing without actually using different browsers.\r\n *\r\n * A mask can be instantiated in four different ways:\r\n * 1. by creating the object and explicitly configuring all values as required.\r\n * 2. from a preset identifier (all presets are stored in assets/masquerade.json).\r\n * 3. from an extension hash\r\n * 4. from GET parameters, either 'msqrd_p=<Identifer>' or 'msqrd_h=<ExtensionsHash>'.\r\n *\r\n * Intended use; when the context's static masquerade is set, all subsequent instances apply that mask:\r\n * ```\r\n * Context.masquerade = ContextMasquerade.fromHash('288M01-o');\r\n * ```\r\n */\r\nexport class ContextMasquerade {\r\n\r\n    /** @see {@link presets} */\r\n    protected static readonly MASQUERADE_JSON: Array<ContextMasquerade.Preset> = require('./data/masquerade.json');\r\n\r\n    /** @see {@link backend} */\r\n    protected _backend: string;\r\n\r\n    /** @see {@link extensionsStrive} */\r\n    protected _extensionsStrive = new Array<string>();\r\n\r\n    /** @see {@link extensionsConceal} */\r\n    protected _extensionsConceal = new Array<string>();\r\n\r\n    /** @see {@link functionsUndefine} */\r\n    protected _functionsUndefine = new Array<string>();\r\n\r\n    /**\r\n     * Generates a mask based on an extensions hash (encoding backend and extensions_strive). If extensions are strived\r\n     * for, all extensions that are not explicitly mentioned will be added to the list of concealed extensions.\r\n     * @param hash - Hash that is to be decoded for backend and extensions data.\r\n     */\r\n    static fromHash(hash: string): ContextMasquerade {\r\n        const mask = new ContextMasquerade();\r\n        const tuple = ExtensionsHash.decode(hash);\r\n\r\n        mask._backend = tuple[0];\r\n        mask._extensionsStrive = tuple[1];\r\n        mask._extensionsConceal = ExtensionsHash.complement(mask._backend, mask._extensionsStrive);\r\n\r\n        return mask;\r\n    }\r\n\r\n    /**\r\n     * Creates a context mask based on a preset. Note that the presence of an extensions_hash overrides the backend,\r\n     * extensions_strive, as well as extensions_conceal. Only the functions_undefine will be preserved in that case.\r\n     * @param identifier - Name of a preset as specified in masquerade.json.\r\n     */\r\n    static fromPreset(identifier: string): ContextMasquerade {\r\n        const mask = new ContextMasquerade();\r\n\r\n        const identifiers = new Array<string>();\r\n        let preset: ContextMasquerade.Preset | undefined;\r\n        for (const p of ContextMasquerade.presets()) {\r\n            identifiers.push(p.identifier);\r\n            if (p.identifier !== identifier) {\r\n                continue;\r\n            }\r\n            preset = p;\r\n            break;\r\n        }\r\n\r\n        if (preset === undefined) {\r\n            assert(false,\r\n                `expected valid identifier, available ['${identifiers.join('\\', \\'')}'], given '${identifier}'`);\r\n        }\r\n        preset = preset as ContextMasquerade.Preset;\r\n\r\n        if (preset.extensions_hash !== undefined) {\r\n            const tuple = ExtensionsHash.decode(preset.extensions_hash);\r\n            mask._backend = tuple[0];\r\n            mask._extensionsStrive = tuple[1];\r\n        } else {\r\n            mask._backend = preset.backend!;\r\n        }\r\n\r\n        assert(mask._backend !== undefined,\r\n            'expected backend to be included in preset');\r\n\r\n        if (preset.extensions_strive === undefined) {\r\n            mask._extensionsStrive = [];\r\n            mask._extensionsConceal = preset.extensions_conceal ? preset.extensions_conceal : [];\r\n        } else {\r\n            mask._extensionsStrive = preset.extensions_strive;\r\n            mask._extensionsConceal = ExtensionsHash.complement(mask._backend, preset.extensions_strive);\r\n        }\r\n\r\n        mask._functionsUndefine = preset.functions_undefine ? preset.functions_undefine : [];\r\n\r\n        return mask;\r\n    }\r\n\r\n    /**\r\n     * Tries to generate a mask based on GET parameters: if msqrd_h is present, its value is interpreted as\r\n     * extensions hash and a mask is generated from hash. If no hash was found, presence of msqrd_p is evaluated and if\r\n     * found, a mask is generated from preset identifier.\r\n     */\r\n    static fromGET(): ContextMasquerade | undefined {\r\n        const msqrdHash = GETparameter('msqrd_h');\r\n        if (msqrdHash !== undefined) {\r\n            return ContextMasquerade.fromHash(msqrdHash);\r\n        }\r\n        const msqrdPreset = GETparameter('msqrd_p');\r\n        if (msqrdPreset !== undefined) {\r\n            return ContextMasquerade.fromPreset(msqrdPreset);\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /*\r\n     * Presets for emulation of various browsers. This can be used to maintain multiple test configurations and\r\n     * simplify cross-browser testing without actually using different browsers.\r\n     */\r\n    static presets(): Array<ContextMasquerade.Preset> {\r\n        return this.MASQUERADE_JSON;\r\n    }\r\n\r\n    /**\r\n     * Defines the backend (currently either 'webgl1' or 'webgl2').\r\n     */\r\n    get backend(): string {\r\n        return this._backend;\r\n    }\r\n\r\n    /**\r\n     * Extensions that the context should strive to support. The support can only go as far as the extensions are\r\n     * actually supported.\r\n     */\r\n    get extensionsStrive(): Array<string> {\r\n        return this._extensionsStrive;\r\n    }\r\n\r\n    /**\r\n     * Extensions that the context should conceal support of. This only affects supported extensions, which will\r\n     * be reported to be not supported.\r\n     */\r\n    get extensionsConceal(): Array<string> {\r\n        return this._extensionsConceal;\r\n    }\r\n\r\n    /**\r\n     * Functions that the context should delete during construction. Since WebGL context functions cannot be deleted\r\n     * they are undefined instead.\r\n     */\r\n    get functionsUndefine(): Array<string> {\r\n        return this._functionsUndefine;\r\n    }\r\n}\r\n\r\n\r\nexport namespace ContextMasquerade {\r\n\r\n    /**\r\n     * Interfaces required to prevent implicit any when parsing masquerade.json.\r\n     */\r\n    export interface Preset {\r\n        identifier: string;\r\n        backend?: string;\r\n        extensions_hash?: string;\r\n        extensions_strive?: Array<string>;\r\n        extensions_conceal?: Array<string>;\r\n        functions_undefine?: Array<string>;\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\r\n\r\nimport { assert, log, logIf, LogLevel, logVerbosity } from './auxiliaries';\r\nimport { clamp } from './gl-matrix-extensions';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * This internal interface is not intended for module export and should not be used as generic rendering/controller\r\n * interface. The renderer interface should be used for rendering related tasks instead.\r\n */\r\nexport interface Controllable {\r\n\r\n    /**\r\n     * Used to trigger an renderer update. Returns true iff rendering is invalidated and\r\n     * a new multi-frame should be rendered-\r\n     */\r\n    update(multiFrameNumber: number): boolean;\r\n\r\n    /**\r\n     * Used to prepare rendering of a multi-frame.\r\n     */\r\n    prepare(): void;\r\n\r\n    /**\r\n     * Used to trigger rendering of a single, intermediate frame.\r\n     */\r\n    frame(frameNumber: number): void;\r\n\r\n    /**\r\n     * Used to swap/blit frame from back to front buffer.\r\n     */\r\n    swap(): void;\r\n\r\n}\r\n\r\n\r\n/**\r\n * This class controls the rendering flow by means of triggering rendering of a well defined amount of frames\r\n * (multi-frame number) for frame accumulation. Single frame rendering is handled with a multi-frame number of 1. If a\r\n * full multi-frame is accumulated, rendering halts. The rendering is not intended to be controlled by owning objects,\r\n * but via invalidation from within the renderer instead. However, an explicit redraw of a full single or multi-frame\r\n * can be invoked by calling `update()`. Furthermore, when using multi-frame rendering, the renderer can be halted at a\r\n * specific frame by setting a debug-frame number.\r\n *\r\n * Terminology: a multi-frame is the final result after accumulating a number of intermediate frames (frame). The\r\n * number of intermediate frames is defined by the multi-frame number. For a multi-frame, the controller invokes the\r\n * `prepare` on a controllable first, followed by multiple `frame` and `swap` calls. Please note that the\r\n * adaptive batch mode is yet experimental (can be enabled using `batchSize`).\r\n */\r\n\r\nexport class Controller {\r\n\r\n    /**\r\n     * Toggle for debug outputs; if true control flow will be logged.\r\n     */\r\n    protected static _debug = false;\r\n    set debug(value: boolean) {\r\n        if (value && logVerbosity() < LogLevel.Debug) {\r\n            logVerbosity(LogLevel.Debug);\r\n            log(LogLevel.Debug,\r\n                `changed log verbosity to ${LogLevel.Debug} (debug)`);\r\n        }\r\n        Controller._debug = value;\r\n    }\r\n\r\n    /**\r\n     * Number of intermediate frames that are rendered during one browser frame\r\n     */\r\n    protected _batchSize = 1;\r\n    set batch(size: number) {\r\n        log(LogLevel.Warning, `(adaptive) batch multi-frame rendering is experimental for now`);\r\n        this._batchSize = Math.max(1, size);\r\n    }\r\n\r\n\r\n    /**\r\n     * @see {@link multiFrameNumber}\r\n     * This property can be observed, e.g., `aController.multiFrameNumberObservable.subscribe()`.\r\n     */\r\n    protected _multiFrameNumber = 1;\r\n    protected _multiFrameNumberSubject = new ReplaySubject<number>(1);\r\n\r\n    /**\r\n     * @see {@link debugFrameNumber}\r\n     * This property can be observed, e.g., `aController.debugFrameNumberObservable.subscribe()`.\r\n     */\r\n    protected _debugFrameNumber = 0;\r\n    protected _debugFrameNumberSubject = new ReplaySubject<number>(1);\r\n\r\n    /**\r\n     * @see {@link frameNumber}\r\n     * This property can be observed, e.g., `aController.frameNumberObservable.subscribe()`.\r\n     */\r\n    protected _frameNumber = 0;\r\n    protected _frameNumberSubject = new ReplaySubject<number>(1);\r\n\r\n\r\n    /** @see {@link multiFrameDelay} */\r\n    protected _multiFrameDelay = 0;\r\n    // protected _delayedRequestTimeout: number | undefined;\r\n\r\n\r\n    /** Observable event that is triggered after frame invocation (renderer). */\r\n    protected _postFrameEventSubject = new Subject<number>();\r\n\r\n    /** Observable event that is triggered after swap invocation (renderer). */\r\n    protected _postSwapEventSubject = new Subject<number>();\r\n\r\n\r\n    /**\r\n     * Controllable, e.g., an instance of a Renderer.\r\n     */\r\n    protected _controllable: Controllable | undefined;\r\n\r\n\r\n    /**\r\n     * Holds the handle of the pending / executed animate frame request, if requested. Throughout the controller, only a\r\n     * single request at a time is allowed.\r\n     */\r\n    protected _animationFrameID = 0;\r\n\r\n    /**\r\n     * Holds the handle of the running timeout to execute a new multi frame. Undefined if we currently do not wait for\r\n     * a new multi frame.\r\n     */\r\n    protected _timeoutID: number | undefined;\r\n\r\n    /**\r\n     * Blocking updates can be used to re-configure the controller without triggering\r\n     */\r\n    protected _block = false;\r\n\r\n    /**\r\n     * Number of update requested while being in blocked mode. If there is one or more blocked requests, an update will\r\n     * be triggered when unblocked.\r\n     */\r\n    protected _blockedUpdates = 0;\r\n\r\n\r\n    /* Debug and  reporting facilities. */\r\n\r\n    /**\r\n     * Total number of rendered intermediate frames.\r\n     */\r\n    protected _intermediateFrameCount = 0;\r\n\r\n    /**\r\n     * Total number of completed multi-frames.\r\n     */\r\n    protected _multiFrameCount = 0;\r\n\r\n    /**\r\n     * Time tracker used to the minimum and maximum frame time of an intermediate frame (per multi-frame).\r\n     */\r\n    protected _intermediateFrameTimes = new Array<number>(2);\r\n    /**\r\n     * Time tracker used to accumulate all durations of executed frame and swap callbacks per multi-frame. This is the\r\n     * net rendering time and is used to derive the average frame time.\r\n     */\r\n    protected _multiFrameTime: number;\r\n    /**\r\n     * Time tracker used to capture the time the update callback took.\r\n     */\r\n    protected _updateFrameTime: number;\r\n\r\n    /**\r\n     * Used to measure the gross rendering time of a multi-frame. The first point in time denotes the start of the\r\n     * rendering, the second, the point in time the last frame was rendered.\r\n     *\r\n     * Note: point in times might be shifted due to (un)pausing. Their intent is to allow measuring the rendering\r\n     * duration, nothing else.\r\n     */\r\n    protected _multiTime: Array<number> = [0.0, 0.0];\r\n\r\n\r\n    protected _invalidated = false;\r\n    protected _force = false;\r\n\r\n\r\n    protected request(source: Controller.RequestType = Controller.RequestType.Frame): void {\r\n        this._animationFrameID = 0;\r\n\r\n        if (this._block) {\r\n            this._blockedUpdates++;\r\n            return;\r\n        }\r\n\r\n        this._animationFrameID = window.requestAnimationFrame(() => this.invoke(source));\r\n    }\r\n\r\n    protected invoke(source: Controller.RequestType): void {\r\n        if (this._animationFrameID === 0) {\r\n            // We got a former request animation frame that was already canceled\r\n            return;\r\n        }\r\n\r\n        assert(this._controllable !== undefined, `frame sequence invoked without controllable set`);\r\n\r\n        if (this._invalidated) {\r\n            this._invalidated = false;\r\n\r\n            const redraw = this.invokeUpdate();\r\n            if (redraw || this._force) {\r\n                this._force = false;\r\n                this._frameNumber = 0;\r\n                this.cancelWaitMultiFrame();\r\n                this.invokePrepare();\r\n            }\r\n        }\r\n\r\n        if (source === Controller.RequestType.Frame && this._frameNumber === 1) {\r\n            if (this._timeoutID === undefined) {\r\n                this.startWaitMultiFrame();\r\n            }\r\n\r\n            this._animationFrameID = 0;\r\n            return;\r\n        }\r\n\r\n        if (this.isMultiFrameFinished()) {\r\n            this._animationFrameID = 0;\r\n            return;\r\n        }\r\n\r\n        this.invokeFrameAndSwap();\r\n\r\n        this.request();\r\n    }\r\n\r\n    /**\r\n     * Actual invocation of the controllable's update method. Returns true if multi frame rendering should be restarted,\r\n     * false otherwise.\r\n     */\r\n    protected invokeUpdate(): boolean {\r\n        logIf(Controller._debug, LogLevel.Debug, `c invoke update     | ` +\r\n            `pending: '${this._animationFrameID}', mfnum: ${this._multiFrameNumber}`);\r\n\r\n        const redraw: boolean = (this._controllable as Controllable).update(this._multiFrameNumber);\r\n        return redraw;\r\n    }\r\n\r\n    /**\r\n     * Actual invocation of the controllable's prepare method.\r\n     */\r\n    protected invokePrepare(): void {\r\n        logIf(Controller._debug, LogLevel.Debug, `c invoke prepare    |`);\r\n\r\n        this._multiFrameTime = 0.0;\r\n        this._intermediateFrameTimes[0] = Number.MAX_VALUE;\r\n        this._intermediateFrameTimes[1] = Number.MIN_VALUE;\r\n\r\n        /* Trigger preparation of a new multi-frame and measure execution time. */\r\n        this._multiTime[0] = performance.now();\r\n        (this._controllable as Controllable).prepare();\r\n        this._multiTime[1] = performance.now();\r\n\r\n        const updateDuration = this._multiTime[1] - this._multiTime[0];\r\n        this._multiFrameTime = updateDuration;\r\n        this._updateFrameTime = updateDuration;\r\n    }\r\n\r\n    /**\r\n     * Invokes rendering of an intermediate frame, increments the frame counter, and requests rendering of the next\r\n     * frame. The rendering is invoked by means of a callback to the canvas renderer. This function implements various\r\n     * asserts to assure correct control logic and absolutely prevent unnecessary frame requests.\r\n     */\r\n    protected invokeFrameAndSwap(): void {\r\n        logIf(Controller._debug, LogLevel.Debug, `c invoke frame      | pending: '${this._animationFrameID}'`);\r\n\r\n        const debug = this._debugFrameNumber > 0;\r\n        assert(!debug || this._frameNumber < this._debugFrameNumber, `frame number about to exceed debug-frame number`);\r\n\r\n\r\n        /* Trigger an intermediate frame and measure and accumulate execution time for average frame time. This should\r\n        be the only place, any renderer frame method is invoked. */\r\n\r\n        const t0 = performance.now();\r\n\r\n        let batchEnd = Math.min(this._multiFrameNumber, this._frameNumber + this._batchSize);\r\n        if (this._debugFrameNumber > 0) {\r\n            batchEnd = Math.min(batchEnd, this._debugFrameNumber);\r\n        }\r\n\r\n        for (; this._frameNumber < batchEnd; ++this._frameNumber) {\r\n            logIf(Controller._debug, LogLevel.Debug, `c -> frame          | frame: ${this._frameNumber}`);\r\n\r\n            (this._controllable as Controllable).frame(this._frameNumber);\r\n            this._postFrameEventSubject.next(this._frameNumber);\r\n\r\n            ++this._intermediateFrameCount;\r\n        }\r\n        logIf(Controller._debug, LogLevel.Debug, `c -> swap           |`);\r\n\r\n        (this._controllable as Controllable).swap();\r\n        this._postSwapEventSubject.next(this._frameNumber);\r\n\r\n        this._multiTime[1] = performance.now();\r\n\r\n        /* Note: critical call sequence; be careful when changing the following lines. */\r\n\r\n        const frameDuration = this._multiTime[1] - t0;\r\n        this._multiFrameTime += frameDuration;\r\n\r\n        /* Keep track of minimum and maximum intermediate frame durations. */\r\n        this._intermediateFrameTimes[0] = Math.min(this._intermediateFrameTimes[0], frameDuration);\r\n        /* Note that the first frame is probably the slowest due to lazy initialization of stages/passes. */\r\n        this._intermediateFrameTimes[1] = Math.max(this._intermediateFrameTimes[1], frameDuration);\r\n\r\n        this.frameNumberNext();\r\n    }\r\n\r\n    protected startWaitMultiFrame(): void {\r\n        const startMultiFrame = () => {\r\n            this.request(Controller.RequestType.MultiFrame);\r\n            this._timeoutID = undefined;\r\n        };\r\n        this._timeoutID = window.setTimeout(startMultiFrame, this._multiFrameDelay);\r\n    }\r\n\r\n    protected cancelWaitMultiFrame(): void {\r\n        if (this._timeoutID !== undefined) {\r\n            window.clearTimeout(this._timeoutID);\r\n            this._timeoutID = undefined;\r\n        }\r\n    }\r\n\r\n    protected isMultiFrameFinished(): boolean {\r\n        if (this._debugFrameNumber > 0) {\r\n            return this._frameNumber === this._debugFrameNumber;\r\n        }\r\n\r\n        return this._frameNumber === this._multiFrameNumber;\r\n    }\r\n\r\n    /**\r\n     * Utility for communicating this._multiFrameNumber changes to its associated subject.\r\n     */\r\n    protected multiFrameNumberNext(): void {\r\n        this._multiFrameNumberSubject.next(this._multiFrameNumber);\r\n    }\r\n\r\n    /**\r\n     * Utility for communicating this._debugFrameNumber changes to its associated subject.\r\n     */\r\n    protected debugFrameNumberNext(): void {\r\n        this._debugFrameNumberSubject.next(this._debugFrameNumber);\r\n    }\r\n\r\n    /**\r\n     * Utility for communicating this._frameNumber changes to its associated subject.\r\n     */\r\n    protected frameNumberNext(): void {\r\n        this._frameNumberSubject.next(this._frameNumber);\r\n    }\r\n\r\n    update(force: boolean = false): void {\r\n        this._invalidated = true;\r\n        this._force = this._force || force;\r\n\r\n        if (this._animationFrameID === 0) {\r\n            this.request();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Block implicit updates, e.g., caused by various setters. This can be used to reconfigure the controller without\r\n     * triggering to multiple intermediate updates. The block updates mode can be exited using `unblock`.\r\n     */\r\n    block(): void {\r\n        logIf(Controller._debug, LogLevel.Debug, `c block   ${this._block ? '(ignored) ' : '          '}|`);\r\n\r\n        this._block = true;\r\n    }\r\n\r\n    /**\r\n     * Unblock updates. If there was at least one blocked update request, an immediate update is invoked.\r\n     */\r\n    unblock(): void {\r\n        logIf(Controller._debug, LogLevel.Debug, `c unblock ${!this._block ? '(ignored) ' : '          '}` +\r\n            `| blocked: #${this._blockedUpdates}`);\r\n\r\n        if (!this._block) {\r\n            return;\r\n        }\r\n        this._block = false;\r\n        if (this._blockedUpdates > 0) {\r\n            this._blockedUpdates = 0;\r\n            this.update();\r\n        }\r\n    }\r\n\r\n    cancel(): void {\r\n        if (this._animationFrameID === 0) {\r\n            return;\r\n        }\r\n\r\n        window.cancelAnimationFrame(this._animationFrameID);\r\n        this._animationFrameID = 0;\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns whether or not the control is blocking updates.\r\n     * @returns - True if blocked, else false.\r\n     */\r\n    get blocked(): boolean {\r\n        return this._block;\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets the controllable, for which updates, frames, and swaps are invoked whenever rendering is\r\n     * invalidated and an updated multi-frame is required. Swap is detached from frame since rendering an intermediate\r\n     * frame is usually done offscreen and explicit swap control can be useful.\r\n     * @param controllable - Controllable for update, frame, and swap invocation.\r\n     */\r\n    set controllable(controllable: Controllable | undefined) {\r\n        if (controllable === this._controllable) {\r\n            return;\r\n        }\r\n        this._controllable = controllable;\r\n        this.update(true);\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns the multi-frame number. The number is greater than or equal to zero. Multi-frame number is implemented\r\n     * as a property and allows for change callback.\r\n     * @returns - Multi-frame number.\r\n     */\r\n    get multiFrameNumber(): number {\r\n        return this._multiFrameNumber;\r\n    }\r\n\r\n    /**\r\n     * Changes the multi-frame number. If the provided value equals the current number set, nothing happens. If the\r\n     * provided value is negative, the multi-frame number is set to 1.\r\n     * @param multiFrameNumber - The multi-frame number targeted for rendering.\r\n     */\r\n    set multiFrameNumber(multiFrameNumber: number) {\r\n        const value: number = Math.max(1, isNaN(multiFrameNumber) ? 1 : multiFrameNumber);\r\n        if (value === this._multiFrameNumber) {\r\n            return;\r\n        }\r\n\r\n        this._multiFrameNumber = value;\r\n        this.multiFrameNumberNext();\r\n\r\n        logIf(value !== multiFrameNumber, LogLevel.Debug,\r\n            `multi-frame number adjusted to ${value}, given ${multiFrameNumber}`);\r\n\r\n        if (this.debugFrameNumber > this.multiFrameNumber) {\r\n            this.debugFrameNumber = this.multiFrameNumber;\r\n        } else {\r\n            this.update();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Observable that can be used to subscribe to multi-frame number changes.\r\n     */\r\n    get multiFrameNumber$(): Observable<number> {\r\n        return this._multiFrameNumberSubject.asObservable();\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns the debug-frame number greater than or equal to zero.\r\n     * @returns - Debug-frame number.\r\n     */\r\n    get debugFrameNumber(): number {\r\n        return this._debugFrameNumber;\r\n    }\r\n\r\n    /**\r\n     * Sets the debug.-frame number (debug number) that, if greater than zero, causes the rendering to halt when the\r\n     * current frame number (frame number) equals the debug number. Debugging can be disabled by setting the debug\r\n     * number to zero.\r\n     *\r\n     * If the debug number is greater than the frame number rendering is restarted by means of an update(). If the\r\n     * debug number is less than the frame number the rendering continues and halts accordingly. If the debug number\r\n     * equals the current debug number set, nothing happens. If the debug number is greater than the multi-frame\r\n     * number, it is reduced to the multi-frame number.\r\n     *\r\n     * Note: in contrast to setting the multi-frame number, setting the debug-frame number unpauses the controller.\r\n     *\r\n     * @param debugFrameNumber - Debug-frame number.\r\n     */\r\n    set debugFrameNumber(debugFrameNumber: number) {\r\n        const value: number = clamp(isNaN(debugFrameNumber) ? 0 : debugFrameNumber, 0, this.multiFrameNumber);\r\n        if (value === this._debugFrameNumber) {\r\n            return;\r\n        }\r\n\r\n        this._debugFrameNumber = value;\r\n        this.debugFrameNumberNext();\r\n\r\n        logIf(value !== debugFrameNumber, LogLevel.Debug,\r\n            `debug-frame number adjusted to ${value}, given ${debugFrameNumber}`);\r\n\r\n        this.update(this.debugFrameNumber < this._frameNumber);\r\n    }\r\n\r\n    /**\r\n     * Observable that can be used to subscribe to debug-frame number changes.\r\n     */\r\n    get debugFrameNumber$(): Observable<number> {\r\n        return this._debugFrameNumberSubject.asObservable();\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets the multi-frame delay in milliseconds. This is used to delay rendering of subsequent intermediate frames\r\n     * after an update.\r\n     * @param multiFrameDelay - A multi-frame delay in milliseconds.\r\n     */\r\n    set multiFrameDelay(multiFrameDelay: number) {\r\n        const value: number = Math.max(0, multiFrameDelay);\r\n        if (value === this._multiFrameDelay) {\r\n            return;\r\n        }\r\n        this._multiFrameDelay = value;\r\n    }\r\n\r\n    /**\r\n     * Time in milliseconds used to delay rendering of subsequent intermediate frames after an update.\r\n     * @returns - The current multi-frame delay in milliseconds.\r\n     */\r\n    get multiFrameDelay(): number {\r\n        return this._multiFrameDelay;\r\n    }\r\n\r\n\r\n    /**\r\n     * The current multi-frame number; it is less than or equal to the multi-frame number and enumerates the last\r\n     * rendered frame. Note that this does not denote the number of 'completed' multi-frames rendered (not a continuous\r\n     * frame count).\r\n     * @returns - The current (intermediate) frame number.\r\n     */\r\n    get frameNumber(): number {\r\n        return this._frameNumber;\r\n    }\r\n\r\n    /**\r\n     * Observable that can be used to subscribe to frame number changes.\r\n     */\r\n    get frameNumber$(): Observable<number> {\r\n        return this._frameNumberSubject.asObservable();\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns the total number of rendered (requested and probably completed) intermediate frames.\r\n     * @returns - The total number of intermediate frames rendered.\r\n     */\r\n    get intermediateFrameCount(): number {\r\n        return this._intermediateFrameCount;\r\n    }\r\n\r\n    /**\r\n     * Returns the total number of completed multi-frames.\r\n     * @returns - The total number of multi-frames completed.\r\n     */\r\n    get multiFrameCount(): number {\r\n        return this._multiFrameCount;\r\n    }\r\n\r\n    /**\r\n     * Provides the average time it takes to render an intermediate frame within the current displayed multi-frame (if\r\n     * a new multi-frame is triggered, the average frame time is reset).\r\n     * @returns - Average frame time (intermediate frame rendering) in ms\r\n     */\r\n    get averageFrameTime(): number {\r\n        return this._frameNumber === 0 ? 0.0 : this._multiFrameTime / this._frameNumber;\r\n    }\r\n\r\n    /**\r\n     * Provides the update time tracked for the current multi-frame.\r\n     * @returns - Time of the multi-frame update (before first intermediate frame is rendered) in ms\r\n     */\r\n    get updateFrameTime(): number {\r\n        return this._updateFrameTime;\r\n    }\r\n\r\n    /**\r\n     * Provides the minimum rendering time tracked over all intermediate frames of the current multi-frame.\r\n     * @returns - Minimum intermediate frame time in ms\r\n     */\r\n    get minimumFrameTime(): number {\r\n        return this._intermediateFrameTimes[0];\r\n    }\r\n\r\n    /**\r\n     * Provides the maximum rendering time tracked over all intermediate frames of the current multi-frame. Note that\r\n     * the maximum frame time is most often caused by the first intermediate frame within a multi-frame due to lazy\r\n     * stage initialization or reconfiguration.\r\n     * @returns - Maximum intermediate frame time in ms\r\n     */\r\n    get maximumFrameTime(): number {\r\n        return this._intermediateFrameTimes[1];\r\n    }\r\n\r\n    /**\r\n     * The time in milliseconds that passed since the current multi-frame (up to the current frame number) was\r\n     * requested. This time excludes time spent paused (e.g., caused by halting rendering at debug-frame number).\r\n     * Note that this is not a measure of frame rendering performance. The number of frame requests per second might be\r\n     * limited to 60Hz even though the rendering of an intermediate frame takes only a few milliseconds.\r\n     * @returns - Time passed for current multi-frame in milliseconds.\r\n     */\r\n    get multiFrameTime(): number {\r\n        return this._frameNumber === 0 ? 0.0 : this._multiTime[1] - this._multiTime[0];\r\n    }\r\n    /**\r\n     * The frames per second is based on the average number of a full intermediate frame request up to the current\r\n     * frame number.\r\n     * @returns - Number of frames per second based on the current multi-frame\r\n     */\r\n    get framesPerSecond(): number {\r\n        return this._frameNumber === 0 ? 0.0 : 1000.0 / (this.multiFrameTime / this._frameNumber);\r\n    }\r\n\r\n\r\n    /**\r\n     * Observable that can be used to subscribe to post frame events.\r\n     */\r\n    get postFrameEvent$(): Observable<number> {\r\n        return this._postFrameEventSubject.asObservable();\r\n    }\r\n\r\n    /**\r\n     * Observable that can be used to subscribe to post swap events.\r\n     */\r\n    get postSwapEvent$(): Observable<number> {\r\n        return this._postSwapEventSubject.asObservable();\r\n    }\r\n\r\n}\r\n\r\n\r\nexport namespace Controller {\r\n\r\n    export enum RequestType { Frame, MultiFrame }\r\n\r\n}\r\n","\r\n\r\nimport { vec3 } from 'gl-matrix';\r\n\r\n// import { assert } from '../auxiliaries';\r\n\r\nimport { Buffer } from '../buffer';\r\nimport { Context } from '../context';\r\nimport { Geometry } from '../geometry';\r\nimport { GLfloat3 } from '../tuples';\r\n\r\n\r\n/**\r\n * Geometry of a box with configurable size and texture coordinates (optional).\r\n */\r\nexport class CuboidGeometry extends Geometry {\r\n\r\n\r\n    protected static readonly VERTICES = new Float32Array([\r\n        -1, -1, +1, +1, -1, +1, -1, +1, +1, +1, +1, +1, -1, -1, -1, +1, -1, -1, -1, +1, -1, +1, +1, -1]);\r\n\r\n    protected static readonly INDICES = new Uint8Array(\r\n        [0, 1, 2, 3, 7, 1, 5, 4, 7, 6, 2, 4, 0, 1]);\r\n\r\n\r\n    /* Hacked, (sorry) but probably optimized (not benchmarked), interleaved vertex+uv buffer for indexed drawing\r\n     * using primitive restart. This even works for degenerated triangles, since the coordinates on primitive\r\n     * restart are the same and differ just in uv coords (relevant, since PR is only available in WebGL2).\r\n     */\r\n    protected static readonly VERTICES_UV = new Float32Array([\r\n        -1, -1, +1, 0, 0, +1, -1, +1, 1, 0, -1, +1, +1, 0, 1, +1, +1, +1, 1, 1,\r\n        -1, +1, +1, 0, 0, +1, +1, +1, 1, 0, +1, +1, -1, 1, 1, +1, +1, +1, 0, 1,\r\n        +1, -1, +1, 0, 0, +1, -1, -1, 1, 0, +1, -1, +1, 1, 1, -1, -1, -1, 0, 0,\r\n        +1, -1, -1, 0, 0, -1, -1, -1, 1, 0, +1, +1, -1, 0, 1, -1, +1, -1, 1, 1,\r\n        -1, +1, -1, 0, 1, -1, +1, +1, 1, 1, -1, -1, +1, 1, 0, -1, -1, +1, 0, 1,\r\n    ]);\r\n\r\n    protected static readonly INDICES_UV = new Uint8Array(\r\n        [3, 2, 1, 0, /*PR*/ 10, 19, 11, /*PR*/ 18, 11, 17, 16, /*PR*/ 4, 16, 5, 6,\r\n            /*PR*/ 7, 6, 8, 9, /*PR*/ 10, 9, 11, /*PR*/ 12, 13, 14, 15]);\r\n\r\n\r\n    /** @see {@link vertexLocation} */\r\n    protected _vertexLocation: GLuint = 0;\r\n\r\n    /** @see {@link textCoordLocation} */\r\n    protected _uvCoordLocation: GLuint;\r\n\r\n    /** @see {@link extent} */\r\n    protected _extent = vec3.fromValues(1.0, 1.0, 1.0);\r\n\r\n    /** @see {@link uvCoordinates} */\r\n    protected _uvCoordinates = false;\r\n\r\n    protected _count: GLsizei;\r\n\r\n\r\n    /**\r\n     * Object constructor, requires a context and an identifier.\r\n     * @param context - Valid context to create the object for.\r\n     * @param identifier - Meaningful name for identification of this instance.\r\n     * @param uvCoordinates - Create uv coordinates for texturing?\r\n     * @param extent - Width, height, and depth of the cuboid (for backing vertices).\r\n     */\r\n    constructor(context: Context, identifier?: string,\r\n        uvCoordinates: boolean = false, extent: GLfloat3 | vec3 = [1.0, 1.0, 1.0]) {\r\n        super(context, identifier);\r\n\r\n        /* Generate identifier from constructor name if none given. */\r\n        identifier = identifier !== undefined && identifier !== `` ? identifier : this.constructor.name;\r\n\r\n        /* Generate vertex buffers. */\r\n        const vertexVBO = new Buffer(context, identifier + 'VBO');\r\n        this._buffers.push(vertexVBO);\r\n\r\n        const indexBuffer = new Buffer(context, `${identifier}IndicesVBO`);\r\n        this._buffers.push(indexBuffer);\r\n\r\n        this._extent = vec3.clone(extent);\r\n        this._uvCoordinates = uvCoordinates;\r\n    }\r\n\r\n\r\n    /**\r\n     * Binds the vertex buffer object (VBO) to an attribute binding point of a given, pre-defined index.\r\n     */\r\n    protected bindBuffers(/*indices: Array<GLuint>*/): void {\r\n\r\n        /* Please note the implicit bind in attribEnable. */\r\n        if (this._uvCoordinates === false) {\r\n            this._buffers[0].attribEnable(this._vertexLocation, 3, this.context.gl.FLOAT,\r\n                false, 0, 0, true, false);\r\n        } else {\r\n            this._buffers[0].attribEnable(this._vertexLocation, 3, this.context.gl.FLOAT,\r\n                false, 5 * 4, 0, true, false);\r\n            this._buffers[0].attribEnable(this._uvCoordLocation, 2, this.context.gl.FLOAT,\r\n                false, 5 * 4, 3 * 4, false, false);\r\n        }\r\n        this._buffers[1].bind();\r\n    }\r\n\r\n    /**\r\n     * Unbinds the vertex buffer object (VBO) and disables the binding point.\r\n     */\r\n    protected unbindBuffers(/*indices: Array<GLuint>*/): void {\r\n        /* Please note the implicit unbind in attribEnable is skipped. */\r\n        this._buffers[0].attribDisable(this._vertexLocation, true, true);\r\n        if (this._uvCoordinates) {\r\n            this._buffers[0].attribDisable(this._uvCoordLocation, false, true);\r\n        }\r\n        this._buffers[1].unbind();\r\n    }\r\n\r\n    /**\r\n     * Creates the vertex buffer object (VBO) and creates and initializes the buffer's data store.\r\n     * @param vertexLocation - Attribute binding point for vertices.\r\n     * @param uvCoordLocation - Attribute binding point for texture coordinates.\r\n     */\r\n    initialize(vertexLocation: GLuint = 0, uvCoordLocation: GLuint = 1): boolean {\r\n\r\n        this._vertexLocation = vertexLocation;\r\n        this._uvCoordLocation = uvCoordLocation;\r\n\r\n        const gl = this.context.gl;\r\n        const valid = super.initialize([gl.ARRAY_BUFFER, gl.ELEMENT_ARRAY_BUFFER], [vertexLocation, uvCoordLocation]);\r\n\r\n        const uv = this._uvCoordinates;\r\n        let vertices = uv ? CuboidGeometry.VERTICES_UV : CuboidGeometry.VERTICES;\r\n\r\n        /* Apply extent. */\r\n        vertices = vertices.map((value, index) => value * (uv === false ? this._extent[index % 3] * 0.5 :\r\n            (index % 5) < 3 ? this._extent[index % 5] * 0.5 : 1.0));\r\n\r\n        this._buffers[0].data(vertices, gl.STATIC_DRAW);\r\n        this._buffers[1].data(uv ? CuboidGeometry.INDICES_UV : CuboidGeometry.INDICES, gl.STATIC_DRAW);\r\n\r\n        this._count = uv ? CuboidGeometry.INDICES_UV.length : CuboidGeometry.INDICES.length;\r\n\r\n        return valid;\r\n    }\r\n\r\n    /**\r\n     * Draws the box.\r\n     */\r\n    draw(): void {\r\n        const gl = this.context.gl;\r\n        gl.drawElements(gl.TRIANGLE_STRIP, this._count, gl.UNSIGNED_BYTE, 0);\r\n    }\r\n\r\n    /**\r\n     * Attribute location to which this geometry's vertices are bound to.\r\n     */\r\n    get vertexLocation(): GLuint {\r\n        return this._vertexLocation;\r\n    }\r\n\r\n    /**\r\n     * Attribute location to which this geometry's texture coordinates are bound to.\r\n     */\r\n    get uvCoordLocation(): GLuint {\r\n        return this._uvCoordLocation;\r\n    }\r\n\r\n    /**\r\n     * The cuboid's extent in width, height, and depth.\r\n     */\r\n    get extent(): vec3 {\r\n        return this._extent;\r\n    }\r\n\r\n    /**\r\n     * The cuboid's index buffer length.\r\n     */\r\n    get count(): GLsizei {\r\n        return this._count;\r\n    }\r\n}\r\n","\r\nimport { assert } from '../auxiliaries';\r\n\r\nimport { Buffer } from '../buffer';\r\nimport { Context } from '../context';\r\nimport { Geometry } from '../geometry';\r\n\r\nimport { Icosahedron } from './icosahedron';\r\n\r\n\r\n/**\r\n * @todo Refine this based on https://github.com/cginternals/webgl-operate/issues/183\r\n */\r\nexport class GeosphereGeometry extends Geometry {\r\n\r\n    /**\r\n     * Diameter of the sphere\r\n     */\r\n    protected _diameter = 1.0;\r\n\r\n    /**\r\n     * Is the sphere textured?\r\n     */\r\n    protected _textured = false;\r\n\r\n    /**\r\n     *\r\n     */\r\n    protected _size = 0;         // Number of indices to render.\r\n\r\n    /**\r\n     * Attribute location of the vertex position\r\n     */\r\n    protected _vertexLocation: GLuint;\r\n\r\n    /**\r\n     * Attribute location of the texture coordinate\r\n     */\r\n    protected _texCoordLocation: GLuint;\r\n\r\n    /**\r\n     * Object constructor, requires a context and an identifier.\r\n     * @param context - Valid context to create the object for.\r\n     * @param identifier - Meaningful name for identification of this instance.\r\n     * @param diameter - Diameter of the sphere (default: 1.0)\r\n     * @param textured - Is the box textured? (default: true)\r\n     */\r\n    constructor(context: Context, identifier?: string, diameter: number = 1.0, textured: boolean = true) {\r\n        super(context, identifier);\r\n\r\n        /* Generate identifier from constructor name if none given. */\r\n        identifier = identifier !== undefined && identifier !== `` ? identifier : this.constructor.name;\r\n\r\n        /* Save configuration. */\r\n        this._diameter = diameter;\r\n        this._textured = textured;\r\n\r\n        /* Generate vertex buffers. */\r\n        const indexBuffer = new Buffer(context, identifier + 'IndexBuffer');\r\n        this._buffers.push(indexBuffer);\r\n\r\n        const vertexVBO = new Buffer(context, identifier + 'VBO');\r\n        this._buffers.push(vertexVBO);\r\n\r\n        if (this._textured) {\r\n            const uvVBO = new Buffer(context, identifier + 'UV');\r\n            this._buffers.push(uvVBO);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Binds the vertex buffer object (VBO) to an attribute binding point of a given, pre-defined index.\r\n     */\r\n    protected bindBuffers(/*indices: Array<GLuint>*/): void {\r\n        /* Please note the implicit bind in attribEnable */\r\n        this._buffers[0].bind();\r\n        this._buffers[1].attribEnable(this._vertexLocation, 3, this.context.gl.FLOAT, false, 0, 0, true, false);\r\n        if (this._textured) {\r\n            this._buffers[2].attribEnable(this._texCoordLocation, 2, this.context.gl.FLOAT, false, 0, 0, true, false);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Unbinds the vertex buffer object (VBO) and disables the binding point.\r\n     */\r\n    protected unbindBuffers(/*indices: Array<GLuint>*/): void {\r\n        /* Please note the implicit unbind in attribEnable is skipped */\r\n        this._buffers[0].unbind();\r\n        this._buffers[1].attribDisable(this._vertexLocation, true, true);\r\n        if (this._textured) {\r\n            this._buffers[2].attribDisable(this._texCoordLocation, true, true);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates the vertex buffer object (VBO) and creates and initializes the buffer's data store.\r\n     * @param aVertex - Attribute binding point for vertices.\r\n     * @param aTexCoord - Attribute binding point for texture coordinates.\r\n     */\r\n    initialize(aVertex: GLuint = 0, aTexCoord: GLuint = 1): boolean {\r\n        const gl = this.context.gl;\r\n\r\n        this._vertexLocation = aVertex;\r\n        this._texCoordLocation = aTexCoord;\r\n\r\n        const valid = super.initialize(\r\n            [gl.ELEMENT_ARRAY_BUFFER, gl.ARRAY_BUFFER, gl.ARRAY_BUFFER],\r\n            [8, aVertex, aTexCoord]);\r\n\r\n        assert(this._buffers[0] !== undefined && this._buffers[0].object instanceof WebGLBuffer,\r\n            `expected valid WebGLBuffer`);\r\n\r\n        assert(this._buffers[1] !== undefined && this._buffers[1].object instanceof WebGLBuffer,\r\n            `expected valid WebGLBuffer`);\r\n\r\n        if (this._textured) {\r\n            assert(this._buffers[2] !== undefined && this._buffers[2].object instanceof WebGLBuffer,\r\n                `expected valid WebGLBuffer`);\r\n        }\r\n\r\n        /* Generate icosahedron geometry. */\r\n        const icosahedron = new Icosahedron();\r\n        icosahedron.generateGeometry(3);\r\n        if (this._textured) {\r\n            icosahedron.generateTextureCoordinates();\r\n        }\r\n\r\n        /* Generate index buffer. */\r\n        const faces = icosahedron.faces;\r\n        const indexBuffer = new Uint16Array(faces.length * 3);\r\n\r\n        let i = 0;\r\n        for (const face of faces) {\r\n            indexBuffer[i + 0] = face[0];\r\n            indexBuffer[i + 1] = face[1];\r\n            indexBuffer[i + 2] = face[2];\r\n            i += 3;\r\n        }\r\n\r\n        this._buffers[0].data(indexBuffer, gl.STATIC_DRAW);\r\n        this._size = faces.length * 3;\r\n\r\n        /* Generate vertex buffer. */\r\n        const vertices = icosahedron.vertices;\r\n\r\n        const vertexBuffer = new Float32Array(vertices.length * 3);\r\n        i = 0;\r\n        for (const v of vertices) {\r\n            vertexBuffer[i + 0] = v[0] * this._diameter;\r\n            vertexBuffer[i + 1] = v[1] * this._diameter;\r\n            vertexBuffer[i + 2] = v[2] * this._diameter;\r\n            i += 3;\r\n        }\r\n\r\n        this._buffers[1].data(vertexBuffer, gl.STATIC_DRAW);\r\n\r\n        /* Generate texture coordinate buffer. */\r\n        if (this._textured) {\r\n            const texcoords = icosahedron.texcoords;\r\n\r\n            const uvBuffer = new Float32Array(texcoords.length * 2);\r\n            if (texcoords && texcoords.length > 0) {\r\n                i = 0;\r\n                for (const uv of texcoords) {\r\n                    uvBuffer[i + 0] = uv[0];\r\n                    uvBuffer[i + 1] = uv[1];\r\n                    i += 2;\r\n                }\r\n            }\r\n\r\n            this._buffers[2].data(uvBuffer, gl.STATIC_DRAW);\r\n        }\r\n\r\n        return valid;\r\n    }\r\n\r\n    /**\r\n     * Draws the sphere.\r\n     */\r\n    draw(): void {\r\n        const gl = this.context.gl;\r\n        gl.drawElements(gl.TRIANGLES, this._size, gl.UNSIGNED_SHORT, 0);\r\n    }\r\n\r\n    /**\r\n     * Attribute location to which this geometrys vertices are bound to.\r\n     */\r\n    get vertexLocation(): GLuint {\r\n        return this._vertexLocation;\r\n    }\r\n\r\n    /**\r\n     * Attribute location to which this geometrys texture coordinates are bound to.\r\n     */\r\n    get texCoordLocation(): GLuint {\r\n        return this._texCoordLocation;\r\n    }\r\n}\r\n","\r\nimport { vec2, vec3 } from 'gl-matrix';\r\nimport { v3 } from '../gl-matrix-extensions';\r\n\r\ntype ivec3 = [number, number, number];\r\n\r\n/**\r\n * Helper class to generate a sphere geometry based on a refinable icosahedron\r\n */\r\nexport class Icosahedron {\r\n\r\n    /** @see {@link faces} */\r\n    protected _faces: Array<ivec3>;\r\n\r\n    /** @see {@link vertices} */\r\n    protected _vertices: Array<vec3>;\r\n\r\n    /** @see {@link texcoords} */\r\n    protected _texcoords: Array<vec2>;\r\n\r\n    /**\r\n     * Object constructor.\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    constructor() { }\r\n\r\n    /**\r\n     * Returns the base vertices for the icosahedron.\r\n     */\r\n    protected baseVertices(): Array<vec3> {\r\n        // Icosahedron vertices (normalized) form three orthogonal golden rectangles:\r\n        // http://en.wikipedia.org/wiki/Icosahedron#Cartesian_coordinates\r\n\r\n        const t = (1.0 + Math.sqrt(5.0)) * 0.5;\r\n        const i = 1.0 / Math.sqrt(t * t + 1.0);\r\n        const a = t * i;\r\n\r\n        const vertices: Array<vec3> = [\r\n            vec3.fromValues(-i, +a, 0),\r\n            vec3.fromValues(+i, +a, 0),\r\n            vec3.fromValues(-i, -a, 0),\r\n            vec3.fromValues(+i, -a, 0),\r\n            vec3.fromValues(0, -i, +a),\r\n            vec3.fromValues(0, +i, +a),\r\n            vec3.fromValues(0, -i, -a),\r\n            vec3.fromValues(0, +i, -a),\r\n            vec3.fromValues(+a, 0, -i),\r\n            vec3.fromValues(+a, 0, +i),\r\n            vec3.fromValues(-a, 0, -i),\r\n            vec3.fromValues(-a, 0, +i),\r\n        ];\r\n\r\n        return vertices;\r\n    }\r\n\r\n    /**\r\n     * Returns the base faces for the icosahedron.\r\n     */\r\n    protected baseFaces(): Array<ivec3> {\r\n        const faces: Array<ivec3> = [\r\n            [0, 11, 5],\r\n            [0, 5, 1],\r\n            [0, 1, 7],\r\n            [0, 7, 10],\r\n            [0, 10, 11],\r\n\r\n            [1, 5, 9],\r\n            [5, 11, 4],\r\n            [11, 10, 2],\r\n            [10, 7, 6],\r\n            [7, 1, 8],\r\n\r\n            [3, 9, 4],\r\n            [3, 4, 2],\r\n            [3, 2, 6],\r\n            [3, 6, 8],\r\n            [3, 8, 9],\r\n\r\n            [4, 9, 5],\r\n            [2, 4, 11],\r\n            [6, 2, 10],\r\n            [8, 6, 7],\r\n            [9, 8, 1],\r\n        ];\r\n\r\n        return faces;\r\n    }\r\n\r\n    /**\r\n     * Refines the icosahedron. For each step, every triangle is split into 4.\r\n     * @param vertices - List of vertices that is modified.\r\n     * @param faces - List of faces that is modified.\r\n     * @param levels - Number of levels of refinement.\r\n     */\r\n    protected refine(vertices: Array<vec3>, faces: Array<ivec3>, levels: number): void {\r\n        /* Create cache to avoid duplicating vertices. */\r\n        const cache = new Map<number, number>();\r\n\r\n        /* Execute specified number of refinement levels. */\r\n        for (let i = 0; i < levels; i++) {\r\n            const size = faces.length;\r\n\r\n            /* Refine each face of the current level. */\r\n            for (let f = 0; f < size; f++) {\r\n                /* Get face to refine */\r\n                const face = faces[f];\r\n\r\n                /* Get vertices of the current face. */\r\n                const a = face[0];\r\n                const b = face[1];\r\n                const c = face[2];\r\n\r\n                /* Calculate center points of each edge. */\r\n                const ab = this.split(a, b, vertices, cache);\r\n                const bc = this.split(b, c, vertices, cache);\r\n                const ca = this.split(c, a, vertices, cache);\r\n\r\n                /* Split triangle into 4. */\r\n                faces[f] = [ab, bc, ca];\r\n                faces.push([a, ab, ca]);\r\n                faces.push([b, bc, ab]);\r\n                faces.push([c, ca, bc]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Splits an edge and returns the new vertex that is the center of the edge.\r\n     * @param a - Index of first vertex.\r\n     * @param b - Index of second vertex.\r\n     * @param vertices - List of vertices that is modified.\r\n     * @param cache - Cache to identify newly created vertices.\r\n     */\r\n    protected split(a: number, b: number, vertices: Array<vec3>, cache: Map<number, number>): number {\r\n        /* Create hash to identify the new vertex. */\r\n        const aSmaller: boolean = (a < b);\r\n        const smaller = aSmaller ? a : b;\r\n        const greater = aSmaller ? b : a;\r\n        const hash = (smaller << 16) + greater;\r\n\r\n        /* Check if a vertex between these two has already been created. */\r\n        if (cache.has(hash)) {\r\n            return cache.get(hash)!;\r\n        }\r\n\r\n        /* Create vertex between these two, normalize it to form a point on the sphere. */\r\n        const pos = vec3.add(v3(), vertices[a], vertices[b]);\r\n        vec3.normalize(pos, pos);\r\n        vertices.push(pos);\r\n\r\n        /* Put new vertex into the cache. */\r\n        const index = vertices.length - 1;\r\n        cache.set(hash, index);\r\n\r\n        /* Return index of the new vertex. */\r\n        return index;\r\n    }\r\n\r\n    /**\r\n     * Generates the geometry of the icosahedron.\r\n     * @param levels - Number of levels of refinement.\r\n     */\r\n    generateGeometry(levels: number): void {\r\n        /* Create base geometry. */\r\n        this._vertices = this.baseVertices();\r\n        this._faces = this.baseFaces();\r\n\r\n        /* Refine geometry. */\r\n        if (levels > 0) {\r\n            this.refine(this._vertices, this._faces, Math.min(Math.max(levels, 0), 8));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generates texture coordinates for the icosahedron.\r\n     */\r\n    generateTextureCoordinates(): void {\r\n        /* Create array for the texture coordinates. */\r\n        this._texcoords = new Array<vec2>();\r\n\r\n        /* Generate texture coordinates. */\r\n        const ofs = 0.5;\r\n\r\n        for (const pos of this._vertices) {\r\n            const normal = vec3.normalize(v3(), pos);\r\n\r\n            const uv = vec2.fromValues(\r\n                ofs - (Math.atan2(normal[2], normal[0]) / (2.0 * Math.PI)),\r\n                Math.asin(normal[1]) / Math.PI + ofs,\r\n            );\r\n\r\n            this._texcoords.push(uv);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Read-only access to the faces of the icosahedron.\r\n     */\r\n    get faces(): Array<ivec3> {\r\n        return this._faces;\r\n    }\r\n\r\n    /**\r\n     * Read-only access to the vertices of the icosahedron.\r\n     */\r\n    get vertices(): Array<vec3> {\r\n        return this._vertices;\r\n    }\r\n\r\n    /**\r\n     * Read-only access to the texture coordinates of the icosahedron.\r\n     */\r\n    get texcoords(): Array<vec2> {\r\n        return this._texcoords;\r\n    }\r\n\r\n}\r\n","\r\nexport { CuboidGeometry } from './cuboidgeometry';\r\nexport { Icosahedron } from './icosahedron';\r\nexport { GeosphereGeometry } from './geospheregeometry';\r\nexport { PlaneGeometry } from './planegeometry';\r\n\r\nexport { ResourceManager } from './resourcemanager';\r\n","\r\nimport { mat4, quat, vec2, vec3 } from 'gl-matrix';\r\n\r\nimport { Buffer } from '../buffer';\r\nimport { Context } from '../context';\r\nimport { Geometry } from '../geometry';\r\n\r\n\r\nexport class PlaneGeometry extends Geometry {\r\n\r\n    protected static readonly VERTICES = new Float32Array([\r\n        -1.0, 0.0, -1.0,\r\n        -1.0, 0.0, +1.0,\r\n        +1.0, 0.0, -1.0,\r\n        +1.0, 0.0, +1.0,\r\n    ]);\r\n\r\n    protected static readonly UV = new Float32Array([\r\n        -1.0, -1.0,\r\n        -1.0, +1.0,\r\n        +1.0, -1.0,\r\n        +1.0, +1.0,\r\n    ]);\r\n\r\n    protected static readonly INDICES = new Uint8Array([0, 1, 2, 3]);\r\n\r\n    protected _vertexLocation: GLuint = 0;\r\n    protected _texCoordLocation: GLuint = 1;\r\n\r\n    /** @see {@link translation} */\r\n    protected _translation: vec3;\r\n\r\n    /** @see {@link scale} */\r\n    protected _scale: vec3;\r\n\r\n    /** @see {@link rotation} */\r\n    protected _rotation: quat;\r\n\r\n    /**\r\n     * Object constructor, requires a context and an identifier.\r\n     * @param context - Valid context to create the object for.\r\n     * @param identifier - Meaningful name for identification of this instance.\r\n     */\r\n    constructor(context: Context, identifier?: string) {\r\n        super(context, identifier);\r\n\r\n        this._translation = vec3.fromValues(0, 0, 0);\r\n        this._scale = vec3.fromValues(1, 1, 1);\r\n        this._rotation = quat.create();\r\n\r\n        /* Generate identifier from constructor name if none given. */\r\n        identifier = identifier !== undefined && identifier !== `` ? identifier : this.constructor.name;\r\n\r\n        const vertexVBO = new Buffer(context, identifier + 'VertexVBO');\r\n        const texCoordVBO = new Buffer(context, identifier + 'TexCoordVBO');\r\n        const indexBuffer = new Buffer(context, identifier + 'IndexBuffer');\r\n        this._buffers.push(vertexVBO);\r\n        this._buffers.push(texCoordVBO);\r\n        this._buffers.push(indexBuffer);\r\n    }\r\n\r\n\r\n    /**\r\n     * Binds the vertex buffer object (VBO) to an attribute binding point of a given, pre-defined index.\r\n     */\r\n    protected bindBuffers(): void {\r\n        /* Please note the implicit bind in attribEnable */\r\n        this._buffers[0].attribEnable(this._vertexLocation, 3, this.context.gl.FLOAT, false, 0, 0, true, false);\r\n        this._buffers[1].attribEnable(this._texCoordLocation, 2, this.context.gl.FLOAT, false, 0, 0, true, false);\r\n        this._buffers[2].bind();\r\n    }\r\n\r\n    /**\r\n     * Unbinds the vertex buffer object (VBO) and disables the binding point.\r\n     */\r\n    protected unbindBuffers(): void {\r\n        /* Please note the implicit unbind in attribEnable is skipped */\r\n        this._buffers[0].attribDisable(this._vertexLocation, true, true);\r\n        this._buffers[1].attribDisable(this._texCoordLocation, true, true);\r\n        this._buffers[2].unbind();\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates the vertex buffer object (VBO) and creates and initializes the buffer's data store.\r\n     * @param aVertex - Attribute binding point for vertices.\r\n     */\r\n    initialize(aVertex: GLuint = 0, aTexCoord = 1): boolean {\r\n        const gl = this.context.gl;\r\n\r\n        this._vertexLocation = aVertex;\r\n        this._texCoordLocation = aTexCoord;\r\n\r\n        const valid = super.initialize(\r\n            [gl.ARRAY_BUFFER, gl.ARRAY_BUFFER, gl.ELEMENT_ARRAY_BUFFER],\r\n            [aVertex, aTexCoord, 8]);\r\n\r\n        this._buffers[0].data(PlaneGeometry.VERTICES, gl.STATIC_DRAW);\r\n        this._buffers[1].data(PlaneGeometry.UV, gl.STATIC_DRAW);\r\n        this._buffers[2].data(PlaneGeometry.INDICES, gl.STATIC_DRAW);\r\n\r\n        return valid;\r\n    }\r\n\r\n    /**\r\n     * Specifies/invokes the draw of this plane.\r\n     */\r\n    draw(): void {\r\n        const gl = this.context.gl;\r\n        gl.drawElements(gl.TRIANGLE_STRIP, PlaneGeometry.INDICES.length, gl.UNSIGNED_BYTE, 0);\r\n    }\r\n\r\n    /**\r\n     * Set the translation of the plane.\r\n     */\r\n    set translation(t: vec3) {\r\n        this._translation = t;\r\n    }\r\n\r\n    /**\r\n     * Set the extents of the plane in x and y direction.\r\n     */\r\n    set scale(s: vec2) {\r\n        this._scale = vec3.fromValues(s[0], 1.0, s[1]);\r\n    }\r\n\r\n    /**\r\n     * Set the rotation of the plane.\r\n     */\r\n    set rotation(q: quat) {\r\n        this._rotation = q;\r\n    }\r\n\r\n    /**\r\n     * Get the transformation matrix to transform the unit plane to the specified translation, scale and rotation.\r\n     */\r\n    get transformation(): mat4 {\r\n        const out = mat4.create();\r\n        return mat4.fromRotationTranslationScale(out, this._rotation, this._translation, this._scale);\r\n    }\r\n\r\n    /**\r\n     * Attribute location to which this geometrys vertices are bound to.\r\n     */\r\n    get vertexLocation(): GLuint {\r\n        return this._vertexLocation;\r\n    }\r\n\r\n    /**\r\n     * Attribute location to which this geometrys texture coordinates are bound to.\r\n     */\r\n    get texCoordLocation(): GLuint {\r\n        return this._texCoordLocation;\r\n    }\r\n}\r\n","\r\nimport { assert } from '../auxiliaries';\r\n\r\nimport { Buffer } from '../buffer';\r\nimport { Context } from '../context';\r\nimport { Geometry } from '../geometry';\r\nimport { Material } from '../scene';\r\nimport { Texture2D } from '../texture2d';\r\n\r\n\r\n/**\r\n * @todo add description\r\n */\r\nexport class ResourceManager {\r\n\r\n    /**\r\n     * Context, used to get context information and WebGL API access.\r\n     */\r\n    protected _context: Context;\r\n\r\n    /**\r\n     * Internal storage of 2D textures.\r\n     */\r\n    protected _texture2Ds = new Map<string, Texture2D>();\r\n\r\n    /**\r\n     * Internal storage of material.\r\n     */\r\n    protected _materials = new Map<string, Material>();\r\n\r\n    /**\r\n     * Internal storage of geometries.\r\n     */\r\n    protected _geometries = new Map<string, Geometry>();\r\n\r\n    /**\r\n     * Internal storage of buffers.\r\n     */\r\n    protected _buffers = new Map<string, Buffer>();\r\n\r\n    /**\r\n     * Creates a resource manager that can be used to fetch and store resources such as textures, geometries, etc.\r\n     * @param context - Valid context to created fetched objects for. Note that add external resources are expected to\r\n     * belong to that same context.\r\n     */\r\n    constructor(context: Context) {\r\n        this._context = context;\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates a Texture2D object and asynchronously loads its image via URL or data URI (@see {@link Texture2D.fetch}).\r\n     * @param url - Uniform resource locator string referencing the image that should be loaded (data URI supported).\r\n     * @param crossOrigin - Enable cross origin data loading.\r\n     * @param identifier - Meaningful name for identification of this instance.\r\n     * @returns - Promise for handling image load status. Returns undefined if identifier already exists.\r\n     */\r\n    fetchTexture2D(identifier: string, url: string, crossOrigin: boolean = false): Promise<void> | undefined {\r\n        if (this._texture2Ds.has(identifier)) {\r\n            return undefined;\r\n        }\r\n        const texture = new Texture2D(this._context, identifier);\r\n        assert(texture.identifier === identifier, `expected object identifier to be unchanged`);\r\n\r\n        this._texture2Ds.set(identifier, texture);\r\n        return texture.fetch(url, crossOrigin);\r\n    }\r\n\r\n\r\n    /**\r\n     * Allows to add a resource that, e.g., was not fetched by this resource manager but was loaded or generated\r\n     * somewhere else instead. Please note that by adding the resource, the manager assumes 'taking ownership'.\r\n     * If all given identifiers are already in use, the resource manager does not take ownership of the resource.\r\n     * @param resource - Resource to add.\r\n     * @param identifiers - The identifiers by which the resource can be queried from the ResourceManager.\r\n     * @returns - The array of added indentifiers. If an identifier already exists for another resource it is not added.\r\n     */\r\n    add(resource: Texture2D | Material | Geometry | Buffer, identifiers: Array<string>): Array<string> {\r\n\r\n        const addedIdentifiers = new Array<string>();\r\n\r\n        if (resource instanceof Texture2D) {\r\n            const texture = resource as Texture2D;\r\n\r\n            for (const identifier of identifiers) {\r\n                if (!this._texture2Ds.has(identifier)) {\r\n                    this._texture2Ds.set(identifier, texture);\r\n                    addedIdentifiers.push(identifier);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (resource instanceof Material) {\r\n            const material = resource as Material;\r\n\r\n            for (const identifier of identifiers) {\r\n                if (!this._materials.has(identifier)) {\r\n                    this._materials.set(identifier, material);\r\n                    addedIdentifiers.push(identifier);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (resource instanceof Geometry) {\r\n            const geometry = resource as Geometry;\r\n\r\n            for (const identifier of identifiers) {\r\n                if (!this._geometries.has(identifier)) {\r\n                    this._geometries.set(identifier, geometry);\r\n                    addedIdentifiers.push(identifier);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (resource instanceof Buffer) {\r\n            const buffer = resource as Buffer;\r\n\r\n            for (const identifier of identifiers) {\r\n                if (!this._buffers.has(identifier)) {\r\n                    this._buffers.set(identifier, buffer);\r\n                    addedIdentifiers.push(identifier);\r\n                }\r\n            }\r\n        }\r\n\r\n        return addedIdentifiers;\r\n    }\r\n\r\n    /**\r\n     * Queries a resource based on the given identifier.\r\n     * @param identifier - Name of a previously added resource\r\n     */\r\n    get(identifier: string): Texture2D | Material | Geometry | Buffer | undefined {\r\n\r\n        if (this._texture2Ds.has(identifier)) {\r\n            return this._texture2Ds.get(identifier);\r\n        }\r\n\r\n        if (this._materials.has(identifier)) {\r\n            return this._materials.get(identifier);\r\n        }\r\n\r\n        if (this._geometries.has(identifier)) {\r\n            return this._geometries.get(identifier);\r\n        }\r\n\r\n        if (this._buffers.has(identifier)) {\r\n            return this._buffers.get(identifier);\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    uninitialize(): void {\r\n        for (const geometry of Array.from(this._geometries.values())) {\r\n            if (geometry.initialized) {\r\n                geometry.uninitialize();\r\n            }\r\n        }\r\n        this._geometries.clear();\r\n\r\n        for (const tex2D of Array.from(this._texture2Ds.values())) {\r\n            if (tex2D.initialized) {\r\n                tex2D.uninitialize();\r\n            }\r\n        }\r\n        this._texture2Ds.clear();\r\n\r\n        for (const buffer of Array.from(this._buffers.values())) {\r\n            if (buffer.initialized) {\r\n                buffer.uninitialize();\r\n            }\r\n        }\r\n        this._buffers.clear();\r\n\r\n        this._materials.clear();\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\n\r\nimport { assert } from './auxiliaries';\r\n\r\nimport { NdcFillingTriangle } from './ndcfillingtriangle';\r\nimport { Program } from './program';\r\nimport { Shader } from './shader';\r\nimport { BlitPass } from './blitpass';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * This rendering pass specialized the blit pass by enforcing program-based blitting with a custom debug program.\r\n *\r\n * The debug pass can be used as follows:\r\n * ```\r\n * this.blit.framebuffer = this.intermediateFBO;\r\n * this.blit.frame(this.defaultFBO, null, null);\r\n * ```\r\n *\r\n * This pass also provides some basic debugging facilities, such as blitting the input as linearized depth (packed or\r\n * not packed) etc. An additional WebGL program will be initialized when a debug mode is specified for the first time.\r\n * The default program blit remains untouched in order to keep it as minimal as possible.\r\n */\r\nexport class DebugPass extends BlitPass {\r\n\r\n    /** @see {@link debug} */\r\n    protected _debug: DebugPass.Mode = DebugPass.Mode.Depth;\r\n\r\n\r\n    /**\r\n     * Uniform for passing the debug mode to the specialized blit program.\r\n     */\r\n    protected _uDebugMode: WebGLUniformLocation | undefined;\r\n\r\n    /**\r\n     * Uniform used to pass near and far data to the specialized blit program for linearization.\r\n     */\r\n    protected _uLinearize: WebGLUniformLocation | undefined;\r\n\r\n    /**\r\n     * If provided, depth will be linearized when depth data is blitted.\r\n     */\r\n    protected _near: GLfloat = 0.0;\r\n    protected _far: GLfloat = 0.0;\r\n\r\n    /**\r\n     * Used to create (on-demand) the blit program for program based blitting. This function can be specialized, e.g.,\r\n     * for creating custom blit passes such as the `DebugPass` {@link DebugPass}. This method assumes the program to be\r\n     * undefined.\r\n     */\r\n    protected createProgram(): boolean {\r\n        assert(this._program === undefined, `expected blit program to be undefined before its creation`);\r\n        const gl = this._context.gl;\r\n\r\n        const vert = new Shader(this._context, gl.VERTEX_SHADER, 'blit.vert (debug)');\r\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n        vert.initialize(require('./shaders/blit.vert'));\r\n        const frag = new Shader(this._context, gl.FRAGMENT_SHADER, 'blit_debug.frag (debug)');\r\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n        frag.initialize(require('./shaders/blit_debug.frag'));\r\n\r\n        this._program = new Program(this._context, 'DebugProgram');\r\n        this._program.initialize([vert, frag]);\r\n\r\n        if (!this._ndcTriangle.initialized) {\r\n            this._ndcTriangle.initialize();\r\n        }\r\n        this._program.attribute('a_vertex', this._ndcTriangle.vertexLocation);\r\n        this._program.link();\r\n\r\n        this._uSrcBounds = this._program.uniform('u_srcBounds');\r\n        this._uDstBounds = this._program.uniform('u_dstBounds');\r\n        this._uNearest = this._program.uniform('u_nearest');\r\n\r\n        this._uDebugMode = this._program.uniform('u_mode');\r\n        this._uLinearize = this._program.uniform('u_linearize');\r\n\r\n        this._program.bind();\r\n        gl.uniform1i(this._program.uniform('u_source'), 0);\r\n        gl.uniform1i(this._uDebugMode, this._debug);\r\n        this._program.unbind();\r\n\r\n        return this._program.valid;\r\n    }\r\n\r\n    /**\r\n     */\r\n    initialize(ndcTriangle?: NdcFillingTriangle): boolean {\r\n        const result = super.initialize(ndcTriangle);\r\n        this.enforceProgramBlit = true;\r\n\r\n        return result && this.createProgram();\r\n    }\r\n\r\n    /**\r\n     * Specializes this pass's uninitialization. Program and geometry resources are released (if allocated). Cached\r\n     * uniform and attribute locations are invalidated.\r\n     */\r\n    uninitialize(): void {\r\n        super.uninitialize();\r\n\r\n        this._uDebugMode = undefined;\r\n        this._uLinearize = undefined;\r\n    }\r\n\r\n    /**\r\n     * Specify a debug mode for blitting @see {@link Blitpass.Debug}. If the debug mode is set to anything except\r\n     * `Debug.None` for the first time, a specialized debug program will be created, initialized, and used for blit.\r\n     */\r\n    set debug(mode: DebugPass.Mode) {\r\n        this.assertInitialized();\r\n        if (this._debug === mode) {\r\n            return;\r\n        }\r\n        this._debug = mode;\r\n\r\n        if (this._program === undefined || !this._program.valid) {\r\n            return;\r\n        }\r\n\r\n        this._program.bind();\r\n        this._context.gl.uniform1i(this._uDebugMode, this._debug);\r\n        this._program.unbind();\r\n    }\r\n\r\n    /**\r\n     * If linearized is enabled, depth buffer blitting will use this near value for linearization.\r\n     */\r\n    set near(near: GLfloat | undefined) {\r\n        this._near = near ? near : 0.0;\r\n\r\n        if (this._program === undefined || !this._program.valid) {\r\n            return;\r\n        }\r\n\r\n        this._program.bind();\r\n        this._context.gl.uniform2f(this._uLinearize, this._near, this._far);\r\n        this._program.unbind();\r\n    }\r\n\r\n    /**\r\n     * If linearized is enabled, depth buffer blitting will use this far value for linearization.\r\n     */\r\n    set far(far: GLfloat | undefined) {\r\n        this._far = far ? far : 0.0;\r\n\r\n        if (this._program === undefined || !this._program.valid) {\r\n            return;\r\n        }\r\n\r\n        this._program.bind();\r\n        this._context.gl.uniform2f(this._uLinearize, this._near, this._far);\r\n        this._program.unbind();\r\n    }\r\n\r\n}\r\n\r\nexport namespace DebugPass {\r\n\r\n    export enum Mode {\r\n        None = 0,\r\n        Depth = 1,\r\n        DepthLinear = 2,\r\n        DepthPacked = 3,\r\n        DepthLinearPacked = 4,\r\n    }\r\n\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n\r\n/* spellchecker: disable */\r\n\r\nimport { assert } from './auxiliaries';\r\nimport { GLclampf4 } from './tuples';\r\n\r\nimport { Framebuffer } from './framebuffer';\r\nimport { Initializable } from './initializable';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * Default framebuffer with framebuffer interface. It is intended for use as default buffer binding and enables lazy\r\n * target size reconfiguration of stages.\r\n *\r\n * ```\r\n * this._someStage.frame(this._nullFBO, frameNumber, multiFrameNumber);\r\n * ```\r\n *\r\n * Note that this buffer does query its size from the current context's canvas.\r\n */\r\nexport class DefaultFramebuffer extends Framebuffer {\r\n\r\n    /**\r\n     * @override\r\n     * Default framebuffer cannot be created.\r\n     */\r\n    protected create(): WebGLFramebuffer | undefined {\r\n        this._object = Framebuffer.DEFAULT_FRAMEBUFFER;\r\n        this._valid = true;\r\n\r\n        /* Initialize with default clear values */\r\n        this._clearColors = new Array<GLclampf4>(1);\r\n        this._clearDepth = 1.0;\r\n        this._clearStencil = 0;\r\n\r\n        this.clear = this.es2Clear;\r\n\r\n        return this._object;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * Default framebuffer cannot be deleted.\r\n     */\r\n    protected delete(): void {\r\n        this._object = undefined;\r\n        this._valid = false;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @returns - Always false, since default buffer cannot have any attachments.\r\n     */\r\n    protected hasAttachment(attachment: GLenum): boolean {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * Binds the default framebuffer object to the provided target.\r\n     * @param target - Specifying the binding point (target).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    bind(target: GLenum = this.context.gl.FRAMEBUFFER): void {\r\n        this.context.gl.bindFramebuffer(target, this._object);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * Sets the clear color used for clearing the default color buffer. In order to have transparency working, the\r\n     * canvas needs to have the alpha  attribute enabled. This stage also supports premultiplied alpha, which is applied\r\n     * automatically when the context's `premultipliedAlpha` attribute is set.\r\n     * @param color - RGBA clear color.\r\n     */\r\n    clearColor(color: GLclampf4): void {\r\n        super.clearColor(color);\r\n    }\r\n\r\n    /**\r\n     * Resets the size (important for valid size change detection in stages).\r\n     */\r\n    resize(): void {\r\n        assert(false, `the default framebuffer cannot be resized directly`);\r\n    }\r\n\r\n    /**\r\n     * Convenience accessor: returns the renderable width of the canvas back buffer.\r\n     */\r\n    get width(): GLsizei {\r\n        return this.context.gl.canvas.width as GLsizei;\r\n    }\r\n\r\n    /**\r\n     * Convenience accessor: returns the renderable height of the canvas back buffer.\r\n     */\r\n    get height(): GLsizei {\r\n        return this.context.gl.canvas.height as GLsizei;\r\n    }\r\n\r\n}\r\n","\r\nimport { assert } from './auxiliaries';\r\nimport { Camera } from './camera';\r\nimport { Context } from './context';\r\nimport { Initializable } from './initializable';\r\nimport { NdcFillingTriangle } from './ndcfillingtriangle';\r\nimport { Program } from './program';\r\nimport { Shader } from './shader';\r\nimport { Texture2D } from './texture2d';\r\nimport { TextureCube } from './texturecube';\r\n\r\n/**\r\n * This pass renders an environment from a texture in a single screen-space pass.\r\n */\r\nexport class EnvironmentRenderingPass extends Initializable {\r\n\r\n    /**\r\n     * Context, used to get context information and WebGL API access.\r\n     */\r\n    protected _context: Context;\r\n\r\n    protected _environmentTexture: Texture2D | TextureCube | undefined;\r\n    protected _environmentTexture2: Texture2D | undefined;\r\n    protected _envTextureType: EnvironmentTextureType;\r\n    protected _camera: Camera | undefined;\r\n\r\n    protected _cubeMapProgram: Program;\r\n    protected _equiMapProgram: Program;\r\n    protected _sphereMapProgram: Program;\r\n    protected _polarMapProgram: Program;\r\n\r\n    protected _uSkipLod: WebGLUniformLocation;\r\n\r\n    protected _ndcTriangle: NdcFillingTriangle;\r\n\r\n    protected _skipCubeLod = false;\r\n    protected _altered = true;\r\n\r\n\r\n    constructor(context: Context) {\r\n        super();\r\n        this._context = context;\r\n\r\n        this._cubeMapProgram = new Program(context, 'CubemapEnvironmentProgram');\r\n        this._equiMapProgram = new Program(context, 'EquimapEnvironmentProgram');\r\n        this._polarMapProgram = new Program(context, 'PolarmapEnvironmentProgram');\r\n        this._sphereMapProgram = new Program(context, 'SpheremapEnvironmentProgram');\r\n\r\n        this._ndcTriangle = new NdcFillingTriangle(this._context, 'EnvironmentNdcTriangle');\r\n    }\r\n\r\n    @Initializable.initialize()\r\n    initialize(): boolean {\r\n\r\n        const gl = this._context.gl;\r\n\r\n        this._ndcTriangle.initialize();\r\n\r\n        /**\r\n         * Compile a program for each projection type.\r\n         */\r\n        const vert = new Shader(this._context, gl.VERTEX_SHADER, 'env-projections.vert');\r\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n        vert.initialize(require(`./shaders/env-projections.vert`));\r\n\r\n        // Cube map program\r\n        const cubemapFrag = new Shader(this._context, gl.FRAGMENT_SHADER, 'env-projections.frag');\r\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n        cubemapFrag.initialize(require(`./shaders/env-projections.frag`), false);\r\n        cubemapFrag.replace('PROJECTION_TYPE', 'CUBE_MAP');\r\n        cubemapFrag.compile();\r\n\r\n        this._cubeMapProgram.initialize([vert, cubemapFrag], false);\r\n        this._cubeMapProgram.attribute('a_vertex', this._ndcTriangle.vertexLocation);\r\n        this._cubeMapProgram.link();\r\n        this._cubeMapProgram.bind();\r\n        gl.uniform1i(this._cubeMapProgram.uniform('u_cubemap'), 0);\r\n\r\n        this._uSkipLod = this._cubeMapProgram.uniform('u_skipLod');\r\n\r\n        this._cubeMapProgram.unbind();\r\n\r\n        // Equi map program\r\n        const equimapFrag = new Shader(this._context, gl.FRAGMENT_SHADER, 'env-projections.frag');\r\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n        equimapFrag.initialize(require(`./shaders/env-projections.frag`), false);\r\n        equimapFrag.replace('PROJECTION_TYPE', 'EQUI_MAP');\r\n        equimapFrag.compile();\r\n\r\n        this._equiMapProgram.initialize([vert, equimapFrag], false);\r\n        this._equiMapProgram.attribute('a_vertex', this._ndcTriangle.vertexLocation);\r\n        this._equiMapProgram.link();\r\n        this._equiMapProgram.bind();\r\n        gl.uniform1i(this._equiMapProgram.uniform('u_equirectmap'), 0);\r\n        this._equiMapProgram.unbind();\r\n\r\n        // Sphere map program\r\n        const spheremapFrag = new Shader(this._context, gl.FRAGMENT_SHADER, 'env-projections.frag');\r\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n        spheremapFrag.initialize(require(`./shaders/env-projections.frag`), false);\r\n        spheremapFrag.replace('PROJECTION_TYPE', 'SPHERE_MAP');\r\n        spheremapFrag.compile();\r\n\r\n        this._sphereMapProgram.initialize([vert, spheremapFrag], false);\r\n        this._sphereMapProgram.attribute('a_vertex', this._ndcTriangle.vertexLocation);\r\n        this._sphereMapProgram.link();\r\n        this._sphereMapProgram.bind();\r\n        gl.uniform1i(this._sphereMapProgram.uniform('u_spheremap'), 0);\r\n        this._sphereMapProgram.unbind();\r\n\r\n        // Polar map program\r\n        const polarmapFrag = new Shader(this._context, gl.FRAGMENT_SHADER, 'env-projections.frag');\r\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n        polarmapFrag.initialize(require(`./shaders/env-projections.frag`), false);\r\n        polarmapFrag.replace('PROJECTION_TYPE', 'POLAR_MAP');\r\n        polarmapFrag.compile();\r\n\r\n        this._polarMapProgram.initialize([vert, polarmapFrag], false);\r\n        this._polarMapProgram.attribute('a_vertex', this._ndcTriangle.vertexLocation);\r\n        this._polarMapProgram.link();\r\n        this._polarMapProgram.bind();\r\n        gl.uniform1iv(this._polarMapProgram.uniform('u_polarmap'), [0, 1]);\r\n        this._polarMapProgram.unbind();\r\n\r\n        return true;\r\n    }\r\n\r\n    @Initializable.uninitialize()\r\n    uninitialize(): void {\r\n        this._cubeMapProgram.uninitialize();\r\n        this._equiMapProgram.uninitialize();\r\n        this._sphereMapProgram.uninitialize();\r\n        this._polarMapProgram.uninitialize();\r\n    }\r\n\r\n    update(): void {\r\n\r\n        if (this._altered === false) {\r\n            return;\r\n        }\r\n\r\n        const gl = this._context.gl;\r\n\r\n        this._cubeMapProgram.bind();\r\n        gl.uniform1i(this._uSkipLod, this._skipCubeLod);\r\n\r\n        this._altered = false;\r\n    }\r\n\r\n    frame(): void {\r\n        const gl = this._context.gl;\r\n\r\n        assert(this._camera !== undefined, `Camera is undefined in environment rendering pass.`);\r\n        assert(this._environmentTexture !== undefined,\r\n            `Environment texture is undefined in environment rendering pass.`);\r\n\r\n        let program = this._cubeMapProgram;\r\n\r\n        if (this._envTextureType === EnvironmentTextureType.EquirectangularMap) {\r\n            assert(this._environmentTexture instanceof Texture2D, `Input texture expected to be Texture2D for equirectangular mapping.`);\r\n            this._environmentTexture!.bind(gl.TEXTURE0);\r\n            program = this._equiMapProgram;\r\n        } else if (this._envTextureType === EnvironmentTextureType.SphereMap) {\r\n            assert(this._environmentTexture instanceof Texture2D, `Input texture expected to be Texture2D for sphere mapping.`);\r\n            this._environmentTexture!.bind(gl.TEXTURE0);\r\n            program = this._sphereMapProgram;\r\n        } else if (this._envTextureType === EnvironmentTextureType.CubeMap) {\r\n            assert(this._environmentTexture instanceof TextureCube, `Input texture expected to be a TextureCube for cube mapping.`);\r\n            this._environmentTexture!.bind(gl.TEXTURE0);\r\n            program = this._cubeMapProgram;\r\n        } else if (this._envTextureType === EnvironmentTextureType.PolarMap) {\r\n            assert(this._environmentTexture2 !== undefined, `Two input textures expected for polar mapping.`);\r\n            assert(this._environmentTexture instanceof Texture2D, `Input texture expected to be a Texture2D for polar mapping.`);\r\n            assert(this._environmentTexture2 instanceof Texture2D, `Input texture expected to be a Texture2D for polar mapping.`);\r\n            this._environmentTexture!.bind(gl.TEXTURE0);\r\n            this._environmentTexture2!.bind(gl.TEXTURE1);\r\n            program = this._polarMapProgram;\r\n        }\r\n\r\n        program.bind();\r\n\r\n        gl.uniformMatrix4fv(program.uniform('u_viewProjectionInverse'), false, this._camera!.viewProjectionInverse);\r\n\r\n        this._ndcTriangle.bind();\r\n        this._ndcTriangle.draw();\r\n\r\n        program.unbind();\r\n    }\r\n\r\n    set environmentTextureType(type: EnvironmentTextureType) {\r\n        this._envTextureType = type;\r\n    }\r\n\r\n    set environmentTexture(texture: Texture2D | TextureCube) {\r\n        this._environmentTexture = texture;\r\n    }\r\n\r\n    set environmentTexture2(texture: Texture2D) {\r\n        this._environmentTexture2 = texture;\r\n    }\r\n\r\n    set camera(camera: Camera) {\r\n        this._camera = camera;\r\n    }\r\n\r\n    set skipCubeLod(skip: boolean) {\r\n        if (this._skipCubeLod === skip) {\r\n            return;\r\n        }\r\n        this._skipCubeLod = skip;\r\n        this._altered = true;\r\n    }\r\n\r\n}\r\n\r\nexport enum EnvironmentTextureType {\r\n    CubeMap = 0,\r\n    EquirectangularMap = 1,\r\n    SphereMap = 2,\r\n    PolarMap = 3,\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { vec2 } from 'gl-matrix';\r\n\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\n\r\nimport { assert } from './auxiliaries';\r\n\r\nimport { EyeGazeEvent } from './eyegazeevent';\r\nimport { EyeGazeEventProvider } from './eyegazeeventprovider';\r\nimport { MouseEventProvider } from './mouseeventprovider';\r\nimport { PointerEventProvider } from './pointereventprovider';\r\nimport { Invalidate } from './renderer';\r\nimport { TouchEventProvider } from './toucheventprovider';\r\nimport { KeyboardEventProvider, KeyboardEventType } from './keyboardeventprovider';\r\n\r\n/* spellchecker: enable */\r\nexport interface EventProvider {\r\n    pointerEventProvider: PointerEventProvider;\r\n    mouseEventProvider: MouseEventProvider;\r\n    eyeGazeEventProvider?: EyeGazeEventProvider;\r\n    keyboardEventProvider?: KeyboardEventProvider;\r\n}\r\n\r\n/**\r\n * Callback for handling mouse events, given the latest mouse events (since last update) as well as the previous.\r\n */\r\nexport interface MouseEventHandler { (latests: Array<MouseEvent>, previous: Array<MouseEvent>): void; }\r\n\r\n/**\r\n * Callback for handling touch events, given the latest touch events (since last update) as well as the previous.\r\n */\r\nexport interface TouchEventHandler { (latests: Array<TouchEvent>, previous: Array<TouchEvent>): void; }\r\n\r\n/**\r\n * Callback for handling pointer events, given the latest touch events (since last update) as well as the previous.\r\n */\r\nexport interface PointerEventHandler { (latests: Array<PointerEvent>, previous: Array<PointerEvent>): void; }\r\n\r\n/**\r\n * Callback for handling eye gaze events, given the latest eye gaze events (since last update) as well as the previous.\r\n */\r\nexport interface EyeGazeEventHandler { (latests: Array<EyeGazeEvent>, previous: Array<EyeGazeEvent>): void; }\r\n\r\n/**\r\n * Callback for handling keyboard events, given the latest keyboard events (since last update) as well as the previous.\r\n */\r\nexport interface KeyboardEventHandler { (latests: Array<KeyboardEvent>, previous: Array<KeyboardEvent>): void; }\r\n\r\n\r\n/**\r\n * ... Provider and event handler are explicitly separated in order to reduce the number of observables (reuse of event\r\n * provider for multiple handler).\r\n */\r\nexport class EventHandler {\r\n\r\n    /**\r\n     * The event handler's invalidation callback. This should usually be setup by the owning renderer and invoke the\r\n     * same callback the renderer has been given by the canvas. This invalidation is required, when continuous\r\n     * rendering is not present, events might cause need for new rendering requests.\r\n     */\r\n    protected _invalidate: Invalidate | undefined;\r\n\r\n    protected _subscriptions = new Array<Subscription>();\r\n\r\n\r\n    /**\r\n     * Assigned key event provider. This is usually created and owned by the canvas.\r\n     */\r\n    // protected _keyEventProvider: KeyEventProvider | undefined;\r\n\r\n    /**\r\n     * Assigned mouse event provider. This is usually created and owned by the canvas.\r\n     */\r\n    protected _mouseEventProvider: MouseEventProvider | undefined;\r\n\r\n    /**\r\n     * Assigned touch event provider. This is usually created and owned by the canvas.\r\n     */\r\n    protected _touchEventProvider: TouchEventProvider | undefined;\r\n\r\n    /**\r\n     * Assigned pointer event provider. This is usually created and owned by the canvas.\r\n     */\r\n    protected _pointerEventProvider: PointerEventProvider | undefined;\r\n\r\n    /**\r\n     * Assigned eye gaze event provider. This is usually created and owned by the eye gaze data stream.\r\n     */\r\n    protected _eyeGazeEventProvider: EyeGazeEventProvider | undefined;\r\n\r\n    /**\r\n     * Assigned keyboard event provider. This is usually created and owned by the canvas.\r\n     */\r\n    protected _keyboardEventProvider: KeyboardEventProvider | undefined;\r\n\r\n    protected _latestMouseEventsByType =\r\n        new Map<MouseEventProvider.Type, Array<MouseEvent>>();\r\n    protected _previousMouseEventsByType =\r\n        new Map<MouseEventProvider.Type, Array<MouseEvent>>();\r\n    protected _mouseEventHandlerByType =\r\n        new Map<MouseEventProvider.Type, Array<MouseEventHandler>>();\r\n\r\n    protected _latestTouchEventsByType =\r\n        new Map<TouchEventProvider.Type, Array<TouchEvent>>();\r\n    protected _previousTouchEventsByType =\r\n        new Map<TouchEventProvider.Type, Array<TouchEvent>>();\r\n    protected _touchEventHandlerByType =\r\n        new Map<TouchEventProvider.Type, Array<TouchEventHandler>>();\r\n\r\n    protected _latestPointerEventsByType =\r\n        new Map<PointerEventProvider.Type, Array<PointerEvent>>();\r\n    protected _previousPointerEventsByType =\r\n        new Map<PointerEventProvider.Type, Array<PointerEvent>>();\r\n    protected _pointerEventHandlerByType =\r\n        new Map<PointerEventProvider.Type, Array<PointerEventHandler>>();\r\n\r\n    protected _latestEyeGazeEventsByType =\r\n        new Map<EyeGazeEventProvider.Type, Array<EyeGazeEvent>>();\r\n    protected _previousEyeGazeEventsByType =\r\n        new Map<EyeGazeEventProvider.Type, Array<EyeGazeEvent>>();\r\n    protected _eyeGazeEventHandlerByType =\r\n        new Map<EyeGazeEventProvider.Type, Array<EyeGazeEventHandler>>();\r\n\r\n    protected _latestKeyboardEventsByType =\r\n        new Map<KeyboardEventType, Array<KeyboardEvent>>();\r\n    protected _previousKeyboardEventsByType =\r\n        new Map<KeyboardEventType, Array<KeyboardEvent>>();\r\n    protected _keyboardEventHandlerByType =\r\n        new Map<KeyboardEventType, Array<KeyboardEventHandler>>();\r\n\r\n\r\n    constructor(invalidate: Invalidate | undefined,\r\n        eventProvider: EventProvider) {\r\n        this._invalidate = invalidate;\r\n        this._mouseEventProvider = eventProvider.mouseEventProvider;\r\n        this._mouseEventProvider.preventDefault(MouseEventProvider.Type.Wheel);\r\n\r\n        this._pointerEventProvider = eventProvider.pointerEventProvider;\r\n        this._eyeGazeEventProvider = eventProvider.eyeGazeEventProvider;\r\n        this._keyboardEventProvider = eventProvider.keyboardEventProvider;\r\n\r\n    }\r\n\r\n    /** @callback Invalidate\r\n     * A callback intended to be invoked whenever the specialized event handler itself is invalid. By default only\r\n     * optional updates (renderer decides whether or not to continue redraw) are triggered.\r\n     */\r\n    protected invalidate(force: boolean = false): void {\r\n        if (this._invalidate) {\r\n            this._invalidate(force);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Utility for registering an additional mouse event handler for updates on mouse events of the given type. The\r\n     * handler is to be called on update if at least a single mouse event of the given type has occurred since last\r\n     * update.\r\n     * @param type - Mouse event type the handler is to be associated with.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    protected pushMouseEventHandler(type: MouseEventProvider.Type, handler: MouseEventHandler): void {\r\n        if (this._mouseEventHandlerByType.has(type)) {\r\n            (this._mouseEventHandlerByType.get(type) as Array<MouseEventHandler>).push(handler);\r\n            return;\r\n        }\r\n\r\n        this._mouseEventHandlerByType.set(type, new Array<MouseEventHandler>());\r\n\r\n        this._previousMouseEventsByType.set(type, new Array<MouseEvent>());\r\n        const latest = new Array<MouseEvent>();\r\n        this._latestMouseEventsByType.set(type, latest);\r\n\r\n        assert(this._mouseEventProvider !== undefined, `expected valid mouse event provider`);\r\n        const observable = (this._mouseEventProvider as MouseEventProvider).observable(type);\r\n\r\n        switch (type) {\r\n            case MouseEventProvider.Type.Wheel:\r\n                this._subscriptions.push((observable as Observable<WheelEvent>).subscribe(\r\n                    (event) => { latest.push(event); this.invalidate(); }));\r\n                break;\r\n            default:\r\n                this._subscriptions.push((observable as Observable<MouseEvent>).subscribe(\r\n                    (event) => { latest.push(event); this.invalidate(); }));\r\n                break;\r\n        }\r\n        (this._mouseEventHandlerByType.get(type) as Array<MouseEventHandler>).push(handler);\r\n    }\r\n\r\n    protected invokeMouseEventHandler(type: MouseEventProvider.Type): void {\r\n        const handlers = this._mouseEventHandlerByType.get(type);\r\n        if (handlers === undefined || handlers.length === 0) {\r\n            return;\r\n        }\r\n        const latest = this._latestMouseEventsByType.get(type) as Array<MouseEvent>;\r\n        if (latest.length === 0) {\r\n            return;\r\n        }\r\n        const previous = this._previousMouseEventsByType.get(type) as Array<MouseEvent>;\r\n        handlers.forEach((handler) => handler(latest, previous));\r\n\r\n        Object.assign(previous, latest);\r\n        latest.length = 0;\r\n    }\r\n\r\n    /**\r\n     * Utility for registering an additional touch event handler for updates on touch events of the given type. The\r\n     * handler is to be called on update iff at least a single touch event of the given type has occurred since last\r\n     * update.\r\n     * @param type - Touch event type the handler is to be associated with.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    protected pushTouchEventHandler(type: TouchEventProvider.Type, handler: TouchEventHandler): void {\r\n        if (this._touchEventHandlerByType.has(type)) {\r\n            (this._touchEventHandlerByType.get(type) as Array<TouchEventHandler>).push(handler);\r\n            return;\r\n        }\r\n\r\n        this._touchEventHandlerByType.set(type, new Array<TouchEventHandler>());\r\n\r\n        this._previousTouchEventsByType.set(type, new Array<TouchEvent>());\r\n        const latest = new Array<TouchEvent>();\r\n        this._latestTouchEventsByType.set(type, latest);\r\n\r\n        assert(this._touchEventProvider !== undefined, `expected valid touch event provider`);\r\n        const observable = (this._touchEventProvider as TouchEventProvider).observable(type);\r\n\r\n        this._subscriptions.push((observable as Observable<TouchEvent>).subscribe(\r\n            (event) => { latest.push(event); this.invalidate(); }));\r\n\r\n        (this._touchEventHandlerByType.get(type) as Array<TouchEventHandler>).push(handler);\r\n    }\r\n\r\n    protected invokeTouchEventHandler(type: TouchEventProvider.Type): void {\r\n        const handlers = this._touchEventHandlerByType.get(type);\r\n        if (handlers === undefined || handlers.length === 0) {\r\n            return;\r\n        }\r\n        const latest = this._latestTouchEventsByType.get(type) as Array<TouchEvent>;\r\n        if (latest.length === 0) {\r\n            return;\r\n        }\r\n        const previous = this._previousTouchEventsByType.get(type) as Array<TouchEvent>;\r\n        handlers.forEach((handler) => handler(latest, previous));\r\n\r\n        Object.assign(previous, latest);\r\n        latest.length = 0;\r\n    }\r\n\r\n    /**\r\n     * Utility for registering an additional pointer event handler for updates on pointer events of the given type. The\r\n     * handler is to be called on update iff at least a single touch event of the given type has occurred since last\r\n     * update.\r\n     * @param type - Pointer event type the handler is to be associated with.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    protected pushPointerEventHandler(type: PointerEventProvider.Type, handler: PointerEventHandler): void {\r\n        if (this._pointerEventHandlerByType.has(type)) {\r\n            (this._pointerEventHandlerByType.get(type) as Array<PointerEventHandler>).push(handler);\r\n            return;\r\n        }\r\n\r\n        this._pointerEventHandlerByType.set(type, new Array<PointerEventHandler>());\r\n\r\n        this._previousPointerEventsByType.set(type, new Array<PointerEvent>());\r\n        const latest = new Array<PointerEvent>();\r\n        this._latestPointerEventsByType.set(type, latest);\r\n\r\n        assert(this._pointerEventProvider !== undefined, `expected valid pointer event provider`);\r\n        const observable = (this._pointerEventProvider as PointerEventProvider).observable(type);\r\n\r\n        this._subscriptions.push((observable as Observable<PointerEvent>).subscribe(\r\n            (event) => { latest.push(event); this.invalidate(); }));\r\n\r\n        (this._pointerEventHandlerByType.get(type) as Array<PointerEventHandler>).push(handler);\r\n    }\r\n\r\n    protected invokePointerEventHandler(type: PointerEventProvider.Type): void {\r\n        const handlers = this._pointerEventHandlerByType.get(type);\r\n        if (handlers === undefined || handlers.length === 0) {\r\n            return;\r\n        }\r\n        const latest = this._latestPointerEventsByType.get(type) as Array<PointerEvent>;\r\n        if (latest.length === 0) {\r\n            return;\r\n        }\r\n        const previous = this._previousPointerEventsByType.get(type) as Array<PointerEvent>;\r\n        handlers.forEach((handler) => handler(latest, previous));\r\n\r\n        Object.assign(previous, latest);\r\n        latest.length = 0;\r\n    }\r\n\r\n    /**\r\n     * Utility for registering an additional touch event handler for updates on touch events of the given type. The\r\n     * handler is to be called on update iff at least a single touch event of the given type has occurred since last\r\n     * update.\r\n     * @param type - Touch event type the handler is to be associated with.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    protected pushEyeGazeEventHandler(type: EyeGazeEventProvider.Type, handler: EyeGazeEventHandler): void {\r\n        if (this._eyeGazeEventHandlerByType.has(type)) {\r\n            (this._eyeGazeEventHandlerByType.get(type) as Array<EyeGazeEventHandler>).push(handler);\r\n            return;\r\n        }\r\n\r\n        this._eyeGazeEventHandlerByType.set(type, new Array<EyeGazeEventHandler>());\r\n\r\n        this._previousEyeGazeEventsByType.set(type, new Array<EyeGazeEvent>());\r\n        const latest = new Array<EyeGazeEvent>();\r\n        this._latestEyeGazeEventsByType.set(type, latest);\r\n\r\n        assert(this._eyeGazeEventProvider !== undefined, `expected valid eye gaze event provider`);\r\n        const observable = (this._eyeGazeEventProvider as EyeGazeEventProvider).observable(type);\r\n\r\n        this._subscriptions.push((observable as Observable<EyeGazeEvent>).subscribe(\r\n            (event) => { latest.push(event); this.invalidate(); }));\r\n\r\n        (this._eyeGazeEventHandlerByType.get(type) as Array<EyeGazeEventHandler>).push(handler);\r\n    }\r\n\r\n    protected invokeEyeGazeEventHandler(type: EyeGazeEventProvider.Type): void {\r\n        const handlers = this._eyeGazeEventHandlerByType.get(type);\r\n        if (handlers === undefined || handlers.length === 0) {\r\n            return;\r\n        }\r\n        const latest = this._latestEyeGazeEventsByType.get(type) as Array<EyeGazeEvent>;\r\n        if (latest.length === 0) {\r\n            return;\r\n        }\r\n        const previous = this._previousEyeGazeEventsByType.get(type) as Array<EyeGazeEvent>;\r\n        handlers.forEach((handler) => handler(latest, previous));\r\n\r\n        Object.assign(previous, latest);\r\n        latest.length = 0;\r\n    }\r\n\r\n    /**\r\n     * Utility for registering an additional keyboard event handler for updates on keyboard events of the given type. The\r\n     * handler is to be called on update if at least a single keyboard event of the given type has occurred since last\r\n     * update.\r\n     * @param type - Keyboard event type the handler is to be associated with.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    protected pushKeyboardEventHandler(type: KeyboardEventType, handler: KeyboardEventHandler): void {\r\n        if (this._keyboardEventHandlerByType.has(type)) {\r\n            (this._keyboardEventHandlerByType.get(type) as Array<KeyboardEventHandler>).push(handler);\r\n            return;\r\n        }\r\n\r\n        this._keyboardEventHandlerByType.set(type, new Array<KeyboardEventHandler>());\r\n\r\n        this._previousKeyboardEventsByType.set(type, new Array<KeyboardEvent>());\r\n        const latest = new Array<KeyboardEvent>();\r\n        this._latestKeyboardEventsByType.set(type, latest);\r\n\r\n        assert(this._keyboardEventProvider !== undefined, `expected valid keyboard event provider`);\r\n        const observable = (this._keyboardEventProvider as KeyboardEventProvider).observable(type);\r\n\r\n        this._subscriptions.push((observable as Observable<KeyboardEvent>).subscribe(\r\n            (event) => { latest.push(event); this.invalidate(); }));\r\n\r\n        (this._keyboardEventHandlerByType.get(type) as Array<KeyboardEventHandler>).push(handler);\r\n    }\r\n\r\n    protected invokeKeyboardEventHandler(type: KeyboardEventType): void {\r\n        const handlers = this._keyboardEventHandlerByType.get(type);\r\n        if (handlers === undefined || handlers.length === 0) {\r\n            return;\r\n        }\r\n        const latest = this._latestKeyboardEventsByType.get(type) as Array<KeyboardEvent>;\r\n        if (latest.length === 0) {\r\n            return;\r\n        }\r\n        const previous = this._previousKeyboardEventsByType.get(type) as Array<KeyboardEvent>;\r\n        handlers.forEach((handler) => handler(latest, previous));\r\n\r\n        Object.assign(previous, latest);\r\n        latest.length = 0;\r\n    }\r\n\r\n    /**\r\n     * Disposes all registered handlers of all event types.\r\n     */\r\n    dispose(): void {\r\n        this._latestMouseEventsByType.forEach((value) => value.length = 0);\r\n        this._previousMouseEventsByType.forEach((value) => value.length = 0);\r\n        this._latestTouchEventsByType.forEach((value) => value.length = 0);\r\n        this._previousTouchEventsByType.forEach((value) => value.length = 0);\r\n        this._latestPointerEventsByType.forEach((value) => value.length = 0);\r\n        this._previousPointerEventsByType.forEach((value) => value.length = 0);\r\n        this._previousEyeGazeEventsByType.forEach((value) => value.length = 0);\r\n        this._latestEyeGazeEventsByType.forEach((value) => value.length = 0);\r\n        this._latestKeyboardEventsByType.forEach((value) => value.length = 0);\r\n        this._previousKeyboardEventsByType.forEach((value) => value.length = 0);\r\n\r\n        for (const subscription of this._subscriptions) {\r\n            subscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Triggers (by means of a helper function) invocation of all registered handler of all event types.\r\n     */\r\n    update(): void {\r\n        this.invokeMouseEventHandler(MouseEventProvider.Type.Click);\r\n        this.invokeMouseEventHandler(MouseEventProvider.Type.Enter);\r\n        this.invokeMouseEventHandler(MouseEventProvider.Type.Leave);\r\n        this.invokeMouseEventHandler(MouseEventProvider.Type.Down);\r\n        this.invokeMouseEventHandler(MouseEventProvider.Type.Up);\r\n        this.invokeMouseEventHandler(MouseEventProvider.Type.Move);\r\n        this.invokeMouseEventHandler(MouseEventProvider.Type.Wheel);\r\n\r\n        this.invokeTouchEventHandler(TouchEventProvider.Type.Start);\r\n        this.invokeTouchEventHandler(TouchEventProvider.Type.End);\r\n        this.invokeTouchEventHandler(TouchEventProvider.Type.Move);\r\n        this.invokeTouchEventHandler(TouchEventProvider.Type.Cancel);\r\n\r\n        this.invokePointerEventHandler(PointerEventProvider.Type.Move);\r\n        this.invokePointerEventHandler(PointerEventProvider.Type.Down);\r\n        this.invokePointerEventHandler(PointerEventProvider.Type.Enter);\r\n        this.invokePointerEventHandler(PointerEventProvider.Type.Up);\r\n        this.invokePointerEventHandler(PointerEventProvider.Type.Leave);\r\n        this.invokePointerEventHandler(PointerEventProvider.Type.Cancel);\r\n\r\n        this.invokeEyeGazeEventHandler(EyeGazeEventProvider.Type.EyeGazeData);\r\n        this.invokeEyeGazeEventHandler(EyeGazeEventProvider.Type.NewServerMessage);\r\n        this.invokeEyeGazeEventHandler(EyeGazeEventProvider.Type.ConnectionStatus);\r\n        this.invokeEyeGazeEventHandler(EyeGazeEventProvider.Type.BinaryMessageParsingError);\r\n\r\n        this.invokeKeyboardEventHandler(KeyboardEventType.KeyDown);\r\n        this.invokeKeyboardEventHandler(KeyboardEventType.KeyPress);\r\n        this.invokeKeyboardEventHandler(KeyboardEventType.KeyUp);\r\n    }\r\n\r\n\r\n    /**\r\n     * Normalize mouse and touch event coordinates for various browsers.\r\n     * @param event - Mouse, wheel, or touch event.\r\n     * @param normalize - Whether or not to compute normalized coordinates (offsets).\r\n     * @returns - Array of normalized x and y offsets (in case of multiple touches).\r\n     */\r\n    offsets(event: MouseEvent | WheelEvent | TouchEvent, normalize: boolean = true): Array<vec2> {\r\n        const offsets = new Array<vec2>();\r\n\r\n        /*\r\n         * Workaround for Chrome based on solution of Benjamin Wasty: EventHandler.offsets() uses\r\n         * event.target.getBoundingClientRect() which often triggers a reflow/layout that might take ~20ms and slow\r\n         * down, e.g., navigation a lot. Firefox on the other hand doesn't properly support offsetX/offsetY (set to 0).\r\n         */\r\n        let chromeWorkaround = false;\r\n\r\n        if (event instanceof MouseEvent) {\r\n            const e = event as MouseEvent;\r\n\r\n            chromeWorkaround = (e.offsetX !== 0 && e.offsetY !== 0);\r\n            offsets.push(chromeWorkaround ?\r\n                vec2.fromValues(e.offsetX, e.offsetY) :\r\n                vec2.fromValues(e.clientX, e.clientY));\r\n\r\n        } else if (event instanceof WheelEvent) {\r\n            const e = event as WheelEvent;\r\n\r\n            chromeWorkaround = (e.offsetX !== 0 && e.offsetY !== 0);\r\n            offsets.push(chromeWorkaround ?\r\n                vec2.fromValues(e.offsetX, e.offsetY) :\r\n                vec2.fromValues(e.clientX, e.clientY));\r\n\r\n        } else if (event instanceof TouchEvent) {\r\n            const e = event as TouchEvent;\r\n\r\n            for (let index = 0; index < e.touches.length; ++index) {\r\n                const touch = e.touches.item(index)!;\r\n                offsets.push(vec2.fromValues(touch.clientX, touch.clientY));\r\n            }\r\n        }\r\n\r\n        if (chromeWorkaround) {\r\n            if (normalize) {\r\n                for (const offset of offsets) {\r\n                    vec2.scale(offset, offset, window.devicePixelRatio);\r\n                }\r\n            }\r\n            return offsets;\r\n        }\r\n\r\n        const target = event.target || event.currentTarget || event.srcElement;\r\n        const rect = (target as HTMLElement).getBoundingClientRect();\r\n\r\n        for (const offset of offsets) {\r\n            offset[0] = Math.floor(offset[0] - rect.left);\r\n            offset[1] = Math.floor(offset[1] - rect.top);\r\n            if (normalize) {\r\n                vec2.scale(offset, offset, window.devicePixelRatio);\r\n            }\r\n        }\r\n        return offsets;\r\n    }\r\n\r\n\r\n    /**\r\n     * Register a click event handler that is to be called on update iff at least a single click event has\r\n     * occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushClickHandler(handler: MouseEventHandler): void {\r\n        this.pushMouseEventHandler(MouseEventProvider.Type.Click, handler);\r\n    }\r\n\r\n    /**\r\n     * Register an mouse enter event handler that is to be called on update iff at least a single mouse enter event has\r\n     * occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushMouseEnterHandler(handler: MouseEventHandler): void {\r\n        this.pushMouseEventHandler(MouseEventProvider.Type.Enter, handler);\r\n    }\r\n\r\n    /**\r\n     * Register an mouse leave event handler that is to be called on update iff at least a single mouse leave event has\r\n     * occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushMouseLeaveHandler(handler: MouseEventHandler): void {\r\n        this.pushMouseEventHandler(MouseEventProvider.Type.Leave, handler);\r\n    }\r\n\r\n    /**\r\n     * Register an mouse down event handler that is to be called on update iff at least a single mouse down event has\r\n     * occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushMouseDownHandler(handler: MouseEventHandler): void {\r\n        this.pushMouseEventHandler(MouseEventProvider.Type.Down, handler);\r\n    }\r\n\r\n    /**\r\n     * Register an mouse up event handler that is to be called on update iff at least a single mouse up event has\r\n     * occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushMouseUpHandler(handler: MouseEventHandler): void {\r\n        this.pushMouseEventHandler(MouseEventProvider.Type.Up, handler);\r\n    }\r\n\r\n    /**\r\n     * Register an mouse move event handler that is to be called on update iff at least a single mouse move event has\r\n     * occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushMouseMoveHandler(handler: MouseEventHandler): void {\r\n        this.pushMouseEventHandler(MouseEventProvider.Type.Move, handler);\r\n    }\r\n\r\n    /**\r\n     * Register an mouse wheel event handler that is to be called on update iff at least a single mouse wheel event has\r\n     * occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushMouseWheelHandler(handler: MouseEventHandler): void {\r\n        this.pushMouseEventHandler(MouseEventProvider.Type.Wheel, handler);\r\n    }\r\n\r\n    /**\r\n     * Register a touch start event handler that is to be called on update iff at least a single touch start event has\r\n     * occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushTouchStartHandler(handler: TouchEventHandler): void {\r\n        this.pushTouchEventHandler(TouchEventProvider.Type.Start, handler);\r\n    }\r\n\r\n    /**\r\n     * Register a touch end event handler that is to be called on update iff at least a single touch end event has\r\n     * occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushTouchEndHandler(handler: TouchEventHandler): void {\r\n        this.pushTouchEventHandler(TouchEventProvider.Type.End, handler);\r\n    }\r\n\r\n    /**\r\n     * Register a touch move event handler that is to be called on update iff at least a single touch move event has\r\n     * occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushTouchMoveHandler(handler: TouchEventHandler): void {\r\n        this.pushTouchEventHandler(TouchEventProvider.Type.Move, handler);\r\n    }\r\n\r\n    /**\r\n     * Register a touch cancel event handler that is to be called on update iff at least a single touch cancel event has\r\n     * occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushTouchCancelHandler(handler: TouchEventHandler): void {\r\n        this.pushTouchEventHandler(TouchEventProvider.Type.Cancel, handler);\r\n    }\r\n\r\n    /**\r\n     * Register a pointer up event handler that is to be called on update iff at least a single touch cancel event has\r\n     * occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushPointerUpHandler(handler: PointerEventHandler): void {\r\n        this.pushPointerEventHandler(PointerEventProvider.Type.Up, handler);\r\n    }\r\n\r\n    /**\r\n     * Register a pointer down event handler that is to be called on update iff at least a single touch cancel event has\r\n     * occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushPointerDownHandler(handler: PointerEventHandler): void {\r\n        this.pushPointerEventHandler(PointerEventProvider.Type.Down, handler);\r\n    }\r\n\r\n    /**\r\n     * Register a pointer enter event handler that is to be called on update iff at least a single touch cancel event\r\n     * has occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushPointerEnterHandler(handler: PointerEventHandler): void {\r\n        this.pushPointerEventHandler(PointerEventProvider.Type.Enter, handler);\r\n    }\r\n\r\n    /**\r\n     * Register a pointer leave event handler that is to be called on update iff at least a single touch cancel event\r\n     * has occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushPointerLeaveHandler(handler: PointerEventHandler): void {\r\n        this.pushPointerEventHandler(PointerEventProvider.Type.Leave, handler);\r\n    }\r\n\r\n    /**\r\n     * Register a pointer move event handler that is to be called on update iff at least a single touch cancel event has\r\n     * occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushPointerMoveHandler(handler: PointerEventHandler): void {\r\n        this.pushPointerEventHandler(PointerEventProvider.Type.Move, handler);\r\n    }\r\n\r\n    /**\r\n     * Register a pointer cancel event handler that is to be called on update iff at least a single touch cancel event\r\n     * has occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushPointerCancelHandler(handler: PointerEventHandler): void {\r\n        this.pushPointerEventHandler(PointerEventProvider.Type.Cancel, handler);\r\n    }\r\n\r\n    /**\r\n     * Register a eye gaze data event handler that is to be called on update if at least\r\n     * a single eye gaze data event has occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushEyeGazeDataHandler(handler: EyeGazeEventHandler): void {\r\n        this.pushEyeGazeEventHandler(EyeGazeEventProvider.Type.EyeGazeData, handler);\r\n    }\r\n\r\n    /**\r\n     * Register a eye gaze server message event handler that is to be called on update if at least\r\n     * a single eye gaze server message event has occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushEyeGazeServerMessageHandler(handler: EyeGazeEventHandler): void {\r\n        this.pushEyeGazeEventHandler(EyeGazeEventProvider.Type.NewServerMessage, handler);\r\n    }\r\n\r\n    /**\r\n     * Register a eye gaze connection status event handler that is to be called on update if at least\r\n     * a single eye gaze connection status event has occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushEyeGazeConnectionStatusHandler(handler: EyeGazeEventHandler): void {\r\n        this.pushEyeGazeEventHandler(EyeGazeEventProvider.Type.ConnectionStatus, handler);\r\n    }\r\n\r\n    /**\r\n     * Register a eye gaze binary message parsing error event handler that is to be called on update if at least\r\n     * a single eye gaze binary message parsing error event has occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushEyeGazeBinaryMessageParsingErrorHandler(handler: EyeGazeEventHandler): void {\r\n        this.pushEyeGazeEventHandler(EyeGazeEventProvider.Type.BinaryMessageParsingError, handler);\r\n    }\r\n\r\n    /**\r\n         * Register a key down event handler that is to be called on update if at least a single key down event has\r\n         * occurred since last update.\r\n         * @param handler - Handler to be called on update.\r\n         */\r\n    pushKeyDownHandler(handler: KeyboardEventHandler): void {\r\n        this.pushKeyboardEventHandler(KeyboardEventType.KeyDown, handler);\r\n    }\r\n\r\n    /**\r\n     * Register a key press event handler that is to be called on update if at least a single key press event has\r\n     * occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushKeyPressHandler(handler: KeyboardEventHandler): void {\r\n        this.pushKeyboardEventHandler(KeyboardEventType.KeyPress, handler);\r\n    }\r\n\r\n    /**\r\n     * Register a key up event handler that is to be called on update if at least a single key up event has\r\n     * occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushKeyUpHandler(handler: KeyboardEventHandler): void {\r\n        this.pushKeyboardEventHandler(KeyboardEventType.KeyUp, handler);\r\n    }\r\n\r\n    /**\r\n     * Forward pointer lock request to the mouse event provider (if one exists).\r\n     */\r\n    requestPointerLock(): void {\r\n        if (this._mouseEventProvider) {\r\n            this._mouseEventProvider.pointerLock = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Forward pointer lock release request to the mouse event provider (if one exists).\r\n     */\r\n    exitPointerLock(): void {\r\n        if (this._mouseEventProvider) {\r\n            this._mouseEventProvider.pointerLock = false;\r\n        }\r\n    }\r\n\r\n}\r\n","\r\n\r\n/** Namespace that comprises extensions by WebGL version (also cleans up documentation). */\r\nnamespace extensions {\r\n\r\n    /**\r\n     * All extensions specified for WebGL. This array is used to verify extension queries in WebGL contexts. Most of\r\n     * these extensions should not be queried in WebGL2.\r\n     */\r\n    export const WEBGL1_EXTENSIONS: Array<string> = [\r\n\r\n        'ANGLE_instanced_arrays',\r\n\r\n        'EXT_blend_minmax',\r\n        'EXT_color_buffer_half_float',\r\n        'EXT_disjoint_timer_query',\r\n        'EXT_frag_depth',\r\n        'EXT_sRGB',\r\n        'EXT_shader_texture_lod',\r\n        'EXT_texture_filter_anisotropic',\r\n\r\n        'OES_element_index_uint',\r\n        'OES_standard_derivatives',\r\n        'OES_texture_float',\r\n        'OES_texture_float_linear',\r\n        'OES_texture_half_float',\r\n        'OES_texture_half_float_linear',\r\n        'OES_vertex_array_object',\r\n\r\n        'WEBGL_color_buffer_float',\r\n        'WEBGL_compressed_texture_astc',\r\n        'WEBGL_compressed_texture_atc',\r\n        'WEBGL_compressed_texture_etc',\r\n        'WEBGL_compressed_texture_etc1',\r\n        'WEBGL_compressed_texture_pvrtc',\r\n        'WEBGL_compressed_texture_s3tc',\r\n        'WEBGL_compressed_texture_s3tc_srgb',\r\n        'WEBGL_debug_renderer_info',\r\n        'WEBGL_debug_shaders',\r\n        'WEBGL_depth_texture',\r\n        'WEBGL_draw_buffers',\r\n        'WEBGL_lose_context',\r\n    ];\r\n\r\n    /**\r\n     * All extensions specified for WebGL2. This array is used to verify extension queries in WebGL2 contexts.\r\n     */\r\n    export const WEBGL2_EXTENSIONS: Array<string> = [\r\n\r\n        'EXT_color_buffer_float',\r\n        'EXT_disjoint_timer_query_webgl2',\r\n        'EXT_texture_filter_anisotropic',\r\n\r\n        'OES_texture_float_linear',\r\n        'OES_texture_half_float_linear',\r\n\r\n        'WEBGL_compressed_texture_astc',\r\n        'WEBGL_compressed_texture_atc',\r\n        'WEBGL_compressed_texture_etc',\r\n        'WEBGL_compressed_texture_etc1',\r\n        'WEBGL_compressed_texture_pvrtc',\r\n        'WEBGL_compressed_texture_s3tc',\r\n        'WEBGL_compressed_texture_s3tc_srgb',\r\n        'WEBGL_debug_renderer_info',\r\n        'WEBGL_debug_shaders',\r\n        'WEBGL_lose_context',\r\n    ];\r\n\r\n    /**\r\n     * WebGL extensions that are supported by default in WebGL2.\r\n     */\r\n    export const WEBGL2_DEFAULT_EXTENSIONS: Array<string> = [\r\n        'ANGLE_instanced_arrays',\r\n\r\n        'EXT_blend_minmax',\r\n        'EXT_frag_depth',\r\n        'EXT_sRGB',\r\n        'EXT_shader_texture_lod',\r\n\r\n        'OES_element_index_uint',\r\n        'OES_standard_derivatives',\r\n        'OES_texture_float',\r\n        'OES_texture_half_float',\r\n        'OES_vertex_array_object',\r\n\r\n        'WEBGL_depth_texture',\r\n        'WEBGL_draw_buffers',\r\n    ];\r\n\r\n}\r\n\r\nexport = extensions;\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { assert } from './auxiliaries';\r\n\r\nimport { Context } from './context';\r\nimport { WEBGL1_EXTENSIONS, WEBGL2_EXTENSIONS } from './extensions';\r\n\r\n/* spellchecker: enable */\r\n\r\nexport class ExtensionsHash {\r\n\r\n    protected static readonly WEBGL_BACKENDS: Array<string> = ['webgl1', 'webgl2'];\r\n\r\n    protected static readonly WEBGL_EXTENSIONS_BY_BACKEND = new Map<number, Array<string>>([\r\n        [0, WEBGL1_EXTENSIONS],\r\n        [1, WEBGL2_EXTENSIONS],\r\n    ]);\r\n\r\n    /**\r\n     * All known WebGL extensions (regardless of WebGL version). When new extensions become known, a new internal\r\n     * version has to be created, comprising all extensions again (some removed, some added w.r.t. previous versions).\r\n     */\r\n    protected static readonly EXTENSIONS_BY_VERSION = new Map<number, Array<string>>([[\r\n        0b000, [\r\n            'ANGLE_instanced_arrays',\r\n            'EXT_blend_minmax',\r\n            'EXT_color_buffer_float',\r\n            'EXT_color_buffer_half_float',\r\n            'EXT_disjoint_timer_query',\r\n            'EXT_disjoint_timer_query_webgl2',\r\n            'EXT_frag_depth',\r\n            'EXT_shader_texture_lod',\r\n            'EXT_sRGB',\r\n            'EXT_texture_filter_anisotropic',\r\n            'OES_element_index_uint',\r\n            'OES_standard_derivatives',\r\n            'OES_texture_float',\r\n            'OES_texture_float_linear',\r\n            'OES_texture_half_float',\r\n            'OES_texture_half_float_linear',\r\n            'OES_vertex_array_object',\r\n            'WEBGL_color_buffer_float',\r\n            'WEBGL_compressed_texture_astc',\r\n            'WEBGL_compressed_texture_atc',\r\n            'WEBGL_compressed_texture_etc',\r\n            'WEBGL_compressed_texture_etc1',\r\n            'WEBGL_compressed_texture_pvrtc',\r\n            'WEBGL_compressed_texture_s3tc',\r\n            'WEBGL_compressed_texture_s3tc_srgb',\r\n            'WEBGL_debug_renderer_info',\r\n            'WEBGL_debug_shaders',\r\n            'WEBGL_depth_texture',\r\n            'WEBGL_draw_buffers',\r\n            'WEBGL_lose_context',\r\n        ]],\r\n    ]);\r\n\r\n    /**\r\n     * Hash versioning is used to account for future, yet unknown/unpublished extensions while maintaining support for\r\n     * existing hashes.\r\n     */\r\n    protected static readonly LATEST_VERSION = 0b000;\r\n\r\n    protected static readonly BASE64_ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-+';\r\n\r\n    /**\r\n     * Encodes a number of bitfield semantics (of 6 bits) into a base64 character.\r\n     * @param base64 - Bitfield of 6 bits (as number).\r\n     */\r\n    protected static encode64(bitfield: number): string {\r\n        assert(bitfield >= 0b000000 && bitfield <= 0b111111,\r\n            `expected bitfield in range [ 0b000000, 0b111111 ], given ${bitfield}`);\r\n        return ExtensionsHash.BASE64_ALPHABET[bitfield];\r\n    }\r\n\r\n    /**\r\n     * Decodes a single base64 encoded character to a number of bitfield semantics.\r\n     * @param base64 - Single base64 encoded character (string).\r\n     */\r\n    protected static decode64(base64: string): number {\r\n        assert(base64.length === 1, `expected single base64 character, given '${base64}'`);\r\n        const bitfield = ExtensionsHash.BASE64_ALPHABET.indexOf(base64);\r\n        assert(bitfield > -1, `unknown base64 character, given '${base64}'`);\r\n        return bitfield;\r\n    }\r\n\r\n    /**\r\n     * Generates a hash that encodes the contexts webgl backend and extension support. This is intended to be queried\r\n     * whenever support for a given context on a foreign client is due. The hash can be used as masquerade input.\r\n     * @param backend - WebGL backend: 'webgl1' or 'webgl2'.\r\n     * @param supported - Array of supported extensions to be encoded.\r\n     */\r\n    static encode(backend: Context.BackendType, supported: Array<string>): string {\r\n        const version = ExtensionsHash.LATEST_VERSION; // should always be set to the latest version\r\n        const extensions = ExtensionsHash.EXTENSIONS_BY_VERSION.get(version) as Array<string>;\r\n\r\n        const backendIndex = ExtensionsHash.WEBGL_BACKENDS.indexOf(backend);\r\n        assert(backendIndex > -1, `expected valid backend ${ExtensionsHash.WEBGL_BACKENDS}, given ${backend} `);\r\n\r\n        let hash: string = ExtensionsHash.encode64((version << 3) | (backendIndex + 1));\r\n        if (supported.length === 0) {\r\n            return hash;\r\n        }\r\n\r\n        let support = 0b000000;\r\n        for (let i = 0; i < extensions.length; ++i) {\r\n            support |= (supported.indexOf(extensions[i]) > -1 ? 0b100000 >> (i % 6) : 0b0);\r\n            if (i % 6 < 5 && i < extensions.length - 1) {\r\n                continue;\r\n            }\r\n            /* Convert every pack of 6 bits into a base64 encoded string and append it to the hash. */\r\n            hash += ExtensionsHash.encode64(support);\r\n            support = 0b000000;\r\n        }\r\n        return hash;\r\n    }\r\n\r\n    /**\r\n     * Decodes a hash into a WebGL backend and supported extensions.\r\n     * @param hash - Versioned extension hash.\r\n     * @returns - Tuple of webgl backend and an array of extensions.\r\n     */\r\n    static decode(hash: string): [string, Array<string>] {\r\n\r\n        const hashHead = ExtensionsHash.decode64(hash[0]);\r\n        const version = hashHead >> 3;\r\n\r\n        const backendIndex = (hashHead & 0b000111) - 1;\r\n        assert(backendIndex < ExtensionsHash.WEBGL_BACKENDS.length,\r\n            `expected valid backend index, given ${backendIndex}`);\r\n\r\n        const backend = ExtensionsHash.WEBGL_BACKENDS[backendIndex];\r\n\r\n        assert(ExtensionsHash.EXTENSIONS_BY_VERSION.has(version), `expected valid hash version, given ${version}`);\r\n        const extensions = ExtensionsHash.EXTENSIONS_BY_VERSION.get(version) as Array<string>;\r\n\r\n        const expectedHashLength = Math.ceil(extensions.length / 6) + 1;\r\n        assert(hash.length === expectedHashLength,\r\n            `expected hash of version ${version} to have a length of ${expectedHashLength}, given ${hash}`);\r\n\r\n        const strived = new Array<string>();\r\n        for (let i = 1; i < hash.length; ++i) {\r\n            const bitfield = ExtensionsHash.decode64(hash[i]);\r\n            const offset = (i - 1) * 6;\r\n\r\n            /* loop explicitly unrolled */\r\n            if (bitfield & 0b100000) {\r\n                strived.push(extensions[offset + 0]);\r\n            }\r\n            if (bitfield & 0b010000) {\r\n                strived.push(extensions[offset + 1]);\r\n            }\r\n            if (bitfield & 0b001000) {\r\n                strived.push(extensions[offset + 2]);\r\n            }\r\n            if (bitfield & 0b000100) {\r\n                strived.push(extensions[offset + 3]);\r\n            }\r\n            if (bitfield & 0b000010) {\r\n                strived.push(extensions[offset + 4]);\r\n            }\r\n            if (bitfield & 0b000001) {\r\n                strived.push(extensions[offset + 5]);\r\n            }\r\n        }\r\n        return [backend, strived];\r\n    }\r\n\r\n    /**\r\n     * For a given set of extensions, this generates the complementary set of extensions for a given backend.\r\n     * @param backend - WebGL backend: 'webgl1' or 'webgl2'.\r\n     * @param extensions - Array of extensions to be complemented to all extensions available to the backend.\r\n     */\r\n    static complement(backend: string, extensions: Array<string>): Array<string> {\r\n        const backendIndex = ExtensionsHash.WEBGL_BACKENDS.indexOf(backend);\r\n        assert(backendIndex > -1, `expected valid backend ${ExtensionsHash.WEBGL_BACKENDS}, given ${backend} `);\r\n\r\n        const webglExtensions = ExtensionsHash.WEBGL_EXTENSIONS_BY_BACKEND.get(backendIndex) as Array<string>;\r\n        return webglExtensions.filter((ext) => extensions.indexOf(ext) < 0);\r\n    }\r\n\r\n}\r\n","import { EyeGazeData, EyeGazeEvent } from './eyegazeevent';\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nexport class EyeGazeEventTarget extends EventTarget { }\r\n\r\nexport class EyeGazeDataStream {\r\n\r\n    public static readonly EYE_GAZE_DATA = 'eyegazedata';\r\n    public static readonly NEW_SERVER_MESSAGE = 'newservermessage';\r\n    public static readonly CONNECTION_STATUS = 'connectionstatus';\r\n    public static readonly BINARY_MESSAGE_PARSING_ERROR = 'binarymessageparsingerror';\r\n\r\n    public static readonly SUCCESSFULLY_CONNECTED_TO_SERVER = 'successfully connected to server';\r\n    public static readonly DISCONNECTED_TO_SERVER = 'disconnected to server';\r\n    public static readonly CONNECTION_ERROR = 'connection error with server';\r\n\r\n    protected _webSocket: WebSocket;\r\n\r\n    protected _eyeGazeDataStreams: EyeGazeDataStreams = new EyeGazeDataStreams();\r\n    protected _eyeGazeEventTarget = new EventTarget();\r\n\r\n    protected generateStreamConfigByte(): Uint8Array {\r\n        const configByte = Uint8Array.from([0]);\r\n        if (this._eyeGazeDataStreams.gazePosition) {\r\n            configByte[0] = configByte[0] | 0b00000001;\r\n        }\r\n        if (this._eyeGazeDataStreams.gazeOrigin) {\r\n            configByte[0] = configByte[0] | 0b00000010;\r\n        }\r\n        if (this._eyeGazeDataStreams.eyePositionNormalized) {\r\n            configByte[0] = configByte[0] | 0b00000100;\r\n        }\r\n        if (this._eyeGazeDataStreams.headPositionAndRotation) {\r\n            configByte[0] = configByte[0] | 0b00001000;\r\n        }\r\n        if (this._eyeGazeDataStreams.userPresence) {\r\n            configByte[0] = configByte[0] | 0b00010000;\r\n        }\r\n        return configByte;\r\n    }\r\n\r\n    protected performHandshake(): void {\r\n        this._eyeGazeDataStreams.recalculateNumberOfFloats();\r\n        const configByte = this.generateStreamConfigByte();\r\n        this._webSocket.send(configByte);\r\n    }\r\n\r\n    protected parseEyeTrackingData(data: Float32Array): EyeGazeEvent {\r\n        if (data.length < this._eyeGazeDataStreams.expectedNumberOfFloats) {\r\n            return new CustomEvent(EyeGazeDataStream.BINARY_MESSAGE_PARSING_ERROR);\r\n        }\r\n        let currentIndexPosition = 0;\r\n        const eyeGazeData = new EyeGazeData();\r\n        if (this._eyeGazeDataStreams.gazePosition) {\r\n            eyeGazeData.gazePositionXY[0] = data[currentIndexPosition++];\r\n            eyeGazeData.gazePositionXY[1] = data[currentIndexPosition++];\r\n        }\r\n        if (this._eyeGazeDataStreams.gazeOrigin) {\r\n            eyeGazeData.gazeOriginRightXYZ[0] = data[currentIndexPosition++];\r\n            eyeGazeData.gazeOriginRightXYZ[1] = data[currentIndexPosition++];\r\n            eyeGazeData.gazeOriginRightXYZ[2] = data[currentIndexPosition++];\r\n\r\n            eyeGazeData.gazeOriginLeftXYZ[0] = data[currentIndexPosition++];\r\n            eyeGazeData.gazeOriginLeftXYZ[1] = data[currentIndexPosition++];\r\n            eyeGazeData.gazeOriginLeftXYZ[2] = data[currentIndexPosition++];\r\n        }\r\n        if (this._eyeGazeDataStreams.eyePositionNormalized) {\r\n            eyeGazeData.eyePositionRightNormalizedXYZ[0] = data[currentIndexPosition++];\r\n            eyeGazeData.eyePositionRightNormalizedXYZ[1] = data[currentIndexPosition++];\r\n            eyeGazeData.eyePositionRightNormalizedXYZ[2] = data[currentIndexPosition++];\r\n\r\n            eyeGazeData.eyePositionLeftNormalizedXYZ[0] = data[currentIndexPosition++];\r\n            eyeGazeData.eyePositionLeftNormalizedXYZ[1] = data[currentIndexPosition++];\r\n            eyeGazeData.eyePositionLeftNormalizedXYZ[2] = data[currentIndexPosition++];\r\n        }\r\n        if (this._eyeGazeDataStreams.headPositionAndRotation) {\r\n            eyeGazeData.headPositionXYZ[0] = data[currentIndexPosition++];\r\n            eyeGazeData.headPositionXYZ[1] = data[currentIndexPosition++];\r\n            eyeGazeData.headPositionXYZ[2] = data[currentIndexPosition++];\r\n\r\n            eyeGazeData.headRotationXYZ[0] = data[currentIndexPosition++];\r\n            eyeGazeData.headRotationXYZ[1] = data[currentIndexPosition++];\r\n            eyeGazeData.headRotationXYZ[2] = data[currentIndexPosition++];\r\n        }\r\n        if (this._eyeGazeDataStreams.userPresence) {\r\n            eyeGazeData.userPresence = data[currentIndexPosition] === 0.0 ? false : true;\r\n        }\r\n        return new CustomEvent(EyeGazeDataStream.EYE_GAZE_DATA, { detail: { eyeGazeData } });\r\n    }\r\n\r\n    protected onOpen(event: Event): void {\r\n        this.dispatchEvent(new CustomEvent(EyeGazeDataStream.CONNECTION_STATUS, {\r\n            detail:\r\n                { message: EyeGazeDataStream.SUCCESSFULLY_CONNECTED_TO_SERVER, event },\r\n        }));\r\n        this.performHandshake();\r\n    }\r\n\r\n    protected onClose(event: Event): void {\r\n        this.dispatchEvent(new CustomEvent(EyeGazeDataStream.CONNECTION_STATUS, {\r\n            detail:\r\n                { message: EyeGazeDataStream.DISCONNECTED_TO_SERVER, event },\r\n        }));\r\n    }\r\n\r\n    protected onError(event: Event): void {\r\n        this.dispatchEvent(new CustomEvent(EyeGazeDataStream.CONNECTION_STATUS, {\r\n            detail:\r\n                { message: EyeGazeDataStream.CONNECTION_ERROR, event },\r\n        }));\r\n    }\r\n\r\n    protected async onMessage(event: MessageEvent): Promise<void> {\r\n        // handle stream data\r\n        if (typeof event.data !== 'string') {\r\n            const arrayBuffer = await event.data.arrayBuffer();\r\n            const floatData = new Float32Array(arrayBuffer);\r\n            this.dispatchEvent(this.parseEyeTrackingData(floatData));\r\n            // handle status message data\r\n        } else {\r\n            this.dispatchEvent(new CustomEvent(EyeGazeDataStream.NEW_SERVER_MESSAGE, {\r\n                detail:\r\n                    { message: event.data },\r\n            }));\r\n        }\r\n    }\r\n\r\n    public connect(serverAddress: string): void {\r\n        this._webSocket = new WebSocket(serverAddress);\r\n\r\n        // Arrow functions needed in order to not loose this-context.\r\n        this._webSocket.onopen = (event: Event) => {\r\n            this.onOpen(event);\r\n        };\r\n        this._webSocket.onclose = (event: Event) => {\r\n            this.onClose(event);\r\n        };\r\n        this._webSocket.onerror = (event: Event) => {\r\n            this.onError(event);\r\n        };\r\n        this._webSocket.onmessage = (event: MessageEvent) => {\r\n            this.onMessage(event);\r\n        };\r\n    }\r\n\r\n    // Mediation\r\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject | undefined,\r\n        options?: boolean | AddEventListenerOptions): void {\r\n        this._eyeGazeEventTarget.addEventListener(type, listener ? listener : null, options);\r\n\r\n    }\r\n\r\n    dispatchEvent(event: Event): boolean {\r\n        return this._eyeGazeEventTarget.dispatchEvent(event);\r\n    }\r\n\r\n    removeEventListener(type: string, callback: EventListenerOrEventListenerObject | undefined,\r\n        options?: EventListenerOptions | boolean): void {\r\n        this._eyeGazeEventTarget.removeEventListener(type, callback ? callback : null, options);\r\n    }\r\n\r\n    get connectionState(): number {\r\n        return this._webSocket.readyState;\r\n    }\r\n\r\n    get eyeGazeDataStreams(): EyeGazeDataStreams {\r\n        return this._eyeGazeDataStreams;\r\n    }\r\n\r\n    set eyeGazeDataStreams(eyeGazeDataStreams: EyeGazeDataStreams) {\r\n        if (this._eyeGazeDataStreams !== eyeGazeDataStreams) {\r\n            this._eyeGazeDataStreams = eyeGazeDataStreams;\r\n        }\r\n    }\r\n}\r\n\r\nexport class EyeGazeDataStreams {\r\n    public gazePosition = false;\r\n    public gazeOrigin = false;\r\n    public eyePositionNormalized = false;\r\n    public headPositionAndRotation = false;\r\n    public userPresence = false;\r\n\r\n    // The sum of floats from all activated data streams\r\n    public expectedNumberOfFloats = 0;\r\n\r\n    // Is automatically recalculated if the handshake is invoked\r\n    public recalculateNumberOfFloats(): void {\r\n        let newNumberOfFloats = 0;\r\n        if (this.gazePosition) {\r\n            newNumberOfFloats += 2;\r\n        }\r\n        if (this.gazeOrigin) {\r\n            newNumberOfFloats += 6;\r\n        }\r\n        if (this.eyePositionNormalized) {\r\n            newNumberOfFloats += 6;\r\n        }\r\n        if (this.headPositionAndRotation) {\r\n            newNumberOfFloats += 6;\r\n        }\r\n        if (this.userPresence) {\r\n            newNumberOfFloats += 1;\r\n        }\r\n        this.expectedNumberOfFloats = newNumberOfFloats;\r\n    }\r\n}\r\n","// tslint:disable:max-classes-per-file\r\n\r\n// FORMAT:\r\n// eyeGazeEvent.detail.message? = type string\r\n// eyeGazeEvent.detail.eyeGazeData? = type EyeGazeData\r\n// eyeGazeEvent.detail.event? = type Event\r\nexport type EyeGazeEvent = CustomEvent;\r\n\r\nexport class EyeGazeData {\r\n    // TRACK BOX:\r\n    // 3d coordinates of the track box frustum,\r\n    // given in millimeters from the device center.\r\n\r\n    // gaze position x and y\r\n    // the gaze position on the screen. The value is between 0 and 1. The Top Left edge is the origin.\r\n    public gazePositionXY: [number, number] = [0, 0];\r\n\r\n    // gaze origin\r\n    // x, y and z coordinates as floats of the gaze origin point on the left and right\r\n    // eye of the user, as measured in millimeters from the center of the display.\r\n    public gazeOriginRightXYZ: [number, number, number] = [0, 0, 0];\r\n    public gazeOriginLeftXYZ: [number, number, number] = [0, 0, 0];\r\n\r\n    // eye position normalized\r\n    // An array of three floats, for the x, y and z coordinate of the eye position on the left eye of the user,\r\n    // as a normalized value within the track box.\r\n    // right analogue.\r\n    public eyePositionRightNormalizedXYZ: [number, number, number] = [0, 0, 0];\r\n    public eyePositionLeftNormalizedXYZ: [number, number, number] = [0, 0, 0];\r\n\r\n    // head position and rotation\r\n    // An array of three floats, for the x, y and z coordinate of the head of the user, as measured in\r\n    // millimeters from the center of the display.\r\n    public headPositionXYZ: [number, number, number] = [0, 0, 0];\r\n    // An array of three floats, for the x, y and z rotation of the head of the user. The rotation is\r\n    // expressed in Euler angles using right-handed rotations around each axis. The z rotation describes\r\n    // the rotation around the vector pointing towards the user.\r\n    public headRotationXYZ: [number, number, number] = [0, 0, 0];\r\n\r\n    // user presence, a bool represented as a public number so that everything fits in a char array\r\n    public userPresence = false;\r\n\r\n    public toString(): string {\r\n        let message = '';\r\n        message += `Gaze Position: ${this.gazePositionXY}\\n`;\r\n        message += `Gaze Origin Right: ${this.gazeOriginRightXYZ}\\n`;\r\n        message += `Gaze Origin Left: ${this.gazeOriginLeftXYZ}\\n`;\r\n        message += `Eye Position Normalized Right: ${this.eyePositionRightNormalizedXYZ}\\n`;\r\n        message += `Eye Position Normalized Left: ${this.eyePositionLeftNormalizedXYZ}\\n`;\r\n        message += `Head Position: ${this.headPositionXYZ}\\n`;\r\n        message += `Head Rotation: ${this.headRotationXYZ}\\n`;\r\n        message += `User Presence: ${this.userPresence}\\n`;\r\n        return message;\r\n    }\r\n}\r\n\r\n","import { Observable, ReplaySubject } from 'rxjs';\r\nimport { assert, bitInBitfield } from './auxiliaries';\r\nimport { EyeGazeDataStream, EyeGazeDataStreams } from './eyegazedatastream';\r\nimport { EyeGazeEvent } from './eyegazeevent';\r\n\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nexport class EyeGazeEventProvider {\r\n\r\n    /**\r\n     * Time frame for events to be buffered (windowTime in rxjs per ReplaySubject).\r\n     */\r\n    protected _timeframe: number | undefined;\r\n\r\n    /**\r\n     * This mask saves for which types of events, event.preventDefault should be called. This is useful to disallow\r\n     * some kinds of standard events like successful connected and handshake success.\r\n     */\r\n    protected _preventDefaultMask: EyeGazeEventProvider.Type;\r\n\r\n    protected _eyeGazeDataListener: { (event: EyeGazeEvent): void };\r\n    protected _eyeGazeDataSubject: ReplaySubject<EyeGazeEvent>;\r\n\r\n    protected _newServerMessageListener: { (event: EyeGazeEvent): void };\r\n    protected _newServerMessageSubject: ReplaySubject<EyeGazeEvent>;\r\n\r\n    protected _connectionStatusListener: { (event: EyeGazeEvent): void };\r\n    protected _connectionStatusSubject: ReplaySubject<EyeGazeEvent>;\r\n\r\n    protected _binaryMessageParsingErrorListener: { (event: EyeGazeEvent): void };\r\n    protected _binaryMessageParsingErrorSubject: ReplaySubject<EyeGazeEvent>;\r\n\r\n    protected _eyeGazeDataStream: EyeGazeDataStream;\r\n\r\n    constructor(eyeGazeDataStreams: EyeGazeDataStreams, serverAddress: string) {\r\n        assert(eyeGazeDataStreams !== undefined, `expected a valid eye gaze data streams object on initialization, given ${eyeGazeDataStreams}.`);\r\n        this._eyeGazeDataStream = new EyeGazeDataStream();\r\n        this._eyeGazeDataStream.eyeGazeDataStreams = eyeGazeDataStreams;\r\n        this._eyeGazeDataStream.connect(serverAddress);\r\n    }\r\n\r\n    /**\r\n     * Checks whether or not to prevent the default handling of the given event. This depends on the internal\r\n     * `preventDefaultMask` which can be modified using `preventDefault` function @see{@link preventDefault}.\r\n     * @param type - Internal event type of the incoming event.\r\n     * @param event - Actual event to prevent default handling on (if masked).\r\n     */\r\n    protected preventDefaultOnEvent(type: EyeGazeEventProvider.Type, event: EyeGazeEvent): void {\r\n        if (bitInBitfield(this._preventDefaultMask, type)) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Allow default event handling on specific event types (not calling preventDefault on the event).\r\n     * @param types - Event types to allow default handling on.\r\n     */\r\n    allowDefault(...types: EyeGazeEventProvider.Type[]): void {\r\n        for (const type of types) {\r\n            if (bitInBitfield(this._preventDefaultMask, type)) {\r\n                this._preventDefaultMask &= ~type;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Prevent default event handling on specific event types (using preventDefault on the event).\r\n     * @param types - Event types to prevent default handling on.\r\n     */\r\n    preventDefault(...types: EyeGazeEventProvider.Type[]): void {\r\n        for (const type of types) {\r\n            if (!bitInBitfield(this._preventDefaultMask, type)) {\r\n                this._preventDefaultMask |= type;\r\n            }\r\n        }\r\n    }\r\n\r\n    observable(type: EyeGazeEventProvider.Type): Observable<EyeGazeEvent> | undefined {\r\n        switch (type) {\r\n            case EyeGazeEventProvider.Type.EyeGazeData:\r\n                return this.EyeGazeData$;\r\n            case EyeGazeEventProvider.Type.NewServerMessage:\r\n                return this.NewServerMessage$;\r\n            case EyeGazeEventProvider.Type.ConnectionStatus:\r\n                return this.ConnectionStatus$;\r\n            case EyeGazeEventProvider.Type.BinaryMessageParsingError:\r\n                return this.BinaryMessageParsingError$;\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n\r\n    get EyeGazeData$(): Observable<EyeGazeEvent> {\r\n        if (this._eyeGazeDataSubject === undefined) {\r\n            this._eyeGazeDataSubject = new ReplaySubject<EyeGazeEvent>(undefined, this._timeframe);\r\n            this._eyeGazeDataListener = (event: EyeGazeEvent) => {\r\n                this.preventDefaultOnEvent(EyeGazeEventProvider.Type.EyeGazeData, event);\r\n                this._eyeGazeDataSubject.next(event);\r\n            };\r\n            this._eyeGazeDataStream.addEventListener(EyeGazeDataStream.EYE_GAZE_DATA, this._eyeGazeDataListener);\r\n        }\r\n        return this._eyeGazeDataSubject.asObservable();\r\n    }\r\n\r\n    get NewServerMessage$(): Observable<EyeGazeEvent> {\r\n        if (this._newServerMessageSubject === undefined) {\r\n            this._newServerMessageSubject = new ReplaySubject<EyeGazeEvent>(undefined, this._timeframe);\r\n            this._newServerMessageListener = (event: EyeGazeEvent) => {\r\n                this.preventDefaultOnEvent(EyeGazeEventProvider.Type.NewServerMessage, event);\r\n                this._newServerMessageSubject.next(event);\r\n            };\r\n            this._eyeGazeDataStream.addEventListener(EyeGazeDataStream.NEW_SERVER_MESSAGE,\r\n                this._newServerMessageListener);\r\n        }\r\n        return this._newServerMessageSubject.asObservable();\r\n    }\r\n\r\n    get ConnectionStatus$(): Observable<EyeGazeEvent> {\r\n        if (this._connectionStatusSubject === undefined) {\r\n            this._connectionStatusSubject = new ReplaySubject<EyeGazeEvent>(undefined, this._timeframe);\r\n            this._connectionStatusListener = (event: EyeGazeEvent) => {\r\n                this.preventDefaultOnEvent(EyeGazeEventProvider.Type.ConnectionStatus, event);\r\n                this._connectionStatusSubject.next(event);\r\n            };\r\n            this._eyeGazeDataStream.addEventListener(EyeGazeDataStream.CONNECTION_STATUS,\r\n                this._connectionStatusListener);\r\n        }\r\n        return this._connectionStatusSubject.asObservable();\r\n    }\r\n\r\n    get BinaryMessageParsingError$(): Observable<EyeGazeEvent> {\r\n        if (this._binaryMessageParsingErrorSubject === undefined) {\r\n            this._binaryMessageParsingErrorSubject = new ReplaySubject<EyeGazeEvent>(undefined, this._timeframe);\r\n            this._binaryMessageParsingErrorListener = (event: EyeGazeEvent) => {\r\n                this.preventDefaultOnEvent(EyeGazeEventProvider.Type.BinaryMessageParsingError, event);\r\n                this._binaryMessageParsingErrorSubject.next(event);\r\n            };\r\n            this._eyeGazeDataStream.addEventListener(EyeGazeDataStream.BINARY_MESSAGE_PARSING_ERROR,\r\n                this._binaryMessageParsingErrorListener);\r\n        }\r\n        return this._eyeGazeDataSubject.asObservable();\r\n    }\r\n}\r\n\r\nexport namespace EyeGazeEventProvider {\r\n\r\n    export enum Type {\r\n        EyeGazeData = 1 << 0,\r\n        NewServerMessage = 1 << 1,\r\n        ConnectionStatus = 1 << 2,\r\n        BinaryMessageParsingError = 1 << 3,\r\n    }\r\n}\r\n\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { validate } from './properties';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/** Namespace that comprises various utils (also cleans up documentation). */\r\nnamespace fetch {\r\n\r\n    const failed = (url: string, request: XMLHttpRequest) =>\r\n        `fetching '${url}' failed (${request.status}): ${request.statusText}`;\r\n\r\n    export interface FetchTransform<T> { (data: any): T | undefined; }\r\n\r\n    /**\r\n     * Creates a promise for an asynchronous xml/http request on a given URL. If an URL is fetched successfully, the\r\n     * promise is resolved with the fetched data.\r\n     * @param url - Uniform resource locator string referencing a file.\r\n     * @param type - Request response type.\r\n     * @returns - A promise that resolves on a parsed object if successful.\r\n     */\r\n    export function fetchAsync<T>(url: string, type: XMLHttpRequestResponseType): Promise<T> {\r\n\r\n        const response = new Promise<T>((resolve, reject) => {\r\n            const request = new XMLHttpRequest();\r\n            request.open('GET', url, true);\r\n            request.responseType = type;\r\n\r\n            request.onload = () => {\r\n                if (request.status < 200 || request.status >= 300) {\r\n                    reject(failed(url, request));\r\n                    return;\r\n                }\r\n                resolve(request.response);\r\n            };\r\n\r\n            request.onerror = () => reject(failed(url, request));\r\n            request.ontimeout = () => reject(failed(url, request));\r\n\r\n            request.send();\r\n        });\r\n        return response;\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates a promise for an asynchronous xml/http request on a given URL. If an URL is fetched successfully, the\r\n     * promise is resolved with a parsed JSON object. An error code and message can be caught otherwise.\r\n     * @param url - Uniform resource locator string referencing a JSON file.\r\n     * @param transform - Callback to a function that transforms the fetched data into an instance of targeted type.\r\n     * @param schema - Optional schema, that if specified, is used to validate the fetched json data.\r\n     * @returns - A promise that resolves on a parsed JSON object if successful.\r\n     */\r\n    export function fetchJsonAsync<T>(url: string, transform: FetchTransform<T>, schema?: any): Promise<T> {\r\n\r\n        const response = new Promise<T>((resolve, reject) => {\r\n            const request = new XMLHttpRequest();\r\n            request.open('GET', url, true);\r\n\r\n            request.onload = () => {\r\n                if (request.status < 200 || request.status >= 300) {\r\n                    reject(failed(url, request));\r\n                    return;\r\n                }\r\n\r\n                const json = request.responseText;\r\n                if (schema !== undefined && !validate(json, schema)) {\r\n                    return;\r\n                }\r\n\r\n                let data: any;\r\n                try {\r\n                    data = JSON.parse(json);\r\n                } catch (error) {\r\n                    reject(`fetching '${url}' failed (${error.name}): ${error.message}`);\r\n                    return;\r\n                }\r\n\r\n                const object = transform(data);\r\n                if (object === undefined) {\r\n                    reject(`fetching '${url}' failed (TransformError): transforming the object failed.`);\r\n                    return;\r\n                }\r\n                resolve(object);\r\n            };\r\n\r\n            request.onerror = () => reject(failed(url, request));\r\n            request.ontimeout = () => reject(failed(url, request));\r\n\r\n            request.send();\r\n        });\r\n        return response;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport = fetch;\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { mat4, vec2, vec3 } from 'gl-matrix';\r\n\r\nimport { m4, v3 } from './gl-matrix-extensions';\r\n\r\nimport { CameraModifier } from './cameramodifier';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * Math for camera modification based on the first person metaphor.\r\n */\r\nexport class FirstPersonModifier extends CameraModifier {\r\n\r\n    protected static readonly DEFAULT_SENSITIVITY = 0.0008;\r\n\r\n\r\n    /**\r\n     * Current rotation matrix.\r\n     */\r\n    protected _rotation: mat4 = mat4.create();\r\n\r\n    /** @see {@link sensitivity} */\r\n    protected _sensitivity: number = FirstPersonModifier.DEFAULT_SENSITIVITY;\r\n\r\n\r\n    /**\r\n     * Initiate a new camera modification at a specific event position.\r\n     * @param point - Position of the current event to start the modification at.\r\n     */\r\n    initiate(point: vec2): void {\r\n        Object.assign(this._reference, this._camera);\r\n\r\n        /* Retrieve initial event position. */\r\n        this._initialPoint = point;\r\n    }\r\n\r\n    /**\r\n     * Update the ... .r.t. a specific event position.\r\n     * @param point - Position of the current event used to update the yaw and pitch.\r\n     */\r\n    process(point: vec2, movement?: vec2): void {\r\n        /* Current event position is always the same as initial, when pointer lock is active. */\r\n        this._currentPoint = point;\r\n\r\n        const magnitudes = vec2.create();\r\n        if (movement === undefined) {\r\n            vec2.subtract(magnitudes, this._initialPoint, this._currentPoint);\r\n        } else {\r\n            vec2.copy(magnitudes, movement);\r\n        }\r\n        vec2.scale(magnitudes, magnitudes, window.devicePixelRatio * this._sensitivity);\r\n\r\n        /* Difference between two subsequent events, thus, initial position is reset. */\r\n        vec2.copy(this._initialPoint, this._currentPoint);\r\n\r\n        const centerToEye = vec3.sub(v3(), this._reference.eye, this._reference.center);\r\n        vec3.normalize(centerToEye, centerToEye);\r\n        const strafe = vec3.cross(v3(), centerToEye, this._reference.up);\r\n\r\n        const yaw = mat4.fromRotation(m4(), -magnitudes[0], this._reference.up);\r\n        const pitch = mat4.fromRotation(m4(), magnitudes[1], strafe);\r\n\r\n        mat4.mul(this._rotation, pitch, yaw);\r\n\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Actually applies the trackball rotation to the given camera.\r\n     */\r\n    update(): void {\r\n        if (this._camera === undefined) {\r\n            return;\r\n        }\r\n\r\n        const T = mat4.fromTranslation(m4(), this._reference.eye);\r\n        mat4.multiply(T, T, this._rotation);\r\n        mat4.translate(T, T, vec3.negate(v3(), this._reference.eye));\r\n\r\n        // const up = vec3.transformMat4(v3(), [0.0, 1.0, 0.0], this._rotation);\r\n        // const eye = vec3.transformMat4(v3(), this._reference.eye, T);\r\n        const center = vec3.transformMat4(v3(), this._reference.center, T);\r\n\r\n\r\n        // this._camera.up = up;\r\n        // this._camera.eye = eye;\r\n        this._camera.center = center;\r\n\r\n        Object.assign(this._reference, this._camera);\r\n    }\r\n\r\n\r\n    /**\r\n     * Rotational sensitivity.\r\n     */\r\n    set sensitivity(sensitivity: number) {\r\n        this._sensitivity = sensitivity;\r\n    }\r\n\r\n    get sensitivity(): number {\r\n        return this._sensitivity;\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { assert } from './auxiliaries';\r\n\r\nimport { Context } from './context';\r\n\r\n/* spellchecker: enable */\r\n\r\nlet types: Array<GLenum>;\r\nconst byteSizesByFormatAndContext = new Map<Context, Map<GLenum, GLsizei>>();\r\n\r\n/**\r\n * Utility to verify that a given WebGL texture format is not a WebGL type.\r\n * @param context - Context to check format in.\r\n * @param format - Format to be check for type.\r\n */\r\nfunction isType(context: Context, format: GLenum): boolean {\r\n\r\n    const gl = context.gl;\r\n    const gl2facade = context.gl2facade;\r\n\r\n    if (format === undefined) {\r\n        return false;\r\n    }\r\n\r\n    if (types === undefined) {\r\n        const UNSIGNED_INT_24_8_WEBGL = context.supportsDepthTexture ?\r\n            context.depthTexture.UNSIGNED_INT_24_8_WEBGL : undefined;\r\n\r\n        types = new Array<GLenum>(\r\n            gl.UNSIGNED_BYTE,\r\n            gl.UNSIGNED_SHORT_5_6_5,\r\n            gl.UNSIGNED_SHORT_4_4_4_4,\r\n            gl.UNSIGNED_SHORT_5_5_5_1,\r\n            gl.UNSIGNED_SHORT,\r\n            gl.UNSIGNED_INT,\r\n            UNSIGNED_INT_24_8_WEBGL,\r\n            gl.FLOAT,\r\n            gl2facade.HALF_FLOAT,\r\n            gl.BYTE,\r\n            gl.SHORT,\r\n            gl.INT,\r\n            gl.HALF_FLOAT,\r\n            gl.UNSIGNED_INT_2_10_10_10_REV,\r\n            gl.UNSIGNED_INT_10F_11F_11F_REV,\r\n            gl.UNSIGNED_INT_5_9_9_9_REV,\r\n            gl.UNSIGNED_INT_24_8,\r\n            gl.FLOAT_32_UNSIGNED_INT_24_8_REV,\r\n        );\r\n    }\r\n\r\n    return types.indexOf(format) > -1;\r\n}\r\n\r\n/**\r\n * Creates a context specific mapping of webgl format enums to byte sizes (cached).\r\n * @param context - Context to create or return Format enums to byte size mapping.\r\n */\r\nfunction byteSizes(context: Context): Map<GLenum, GLsizei> {\r\n\r\n    if (byteSizesByFormatAndContext.has(context)) {\r\n        return byteSizesByFormatAndContext.get(context)!;\r\n    }\r\n\r\n    const gl = context.gl;\r\n    const byteSizesByFormat = new Map<GLenum, GLsizei>([\r\n\r\n        [gl.ALPHA, 1],\r\n        [gl.LUMINANCE, 1],\r\n        [gl.R8, 1],\r\n        [gl.R8I, 1],\r\n        [gl.R8UI, 1],\r\n        [gl.STENCIL_INDEX8, 1],\r\n        //\r\n        [gl.DEPTH_COMPONENT16, 2],\r\n        [gl.LUMINANCE_ALPHA, 2],\r\n        [gl.R16F, 2],\r\n        [gl.R16I, 2],\r\n        [gl.R16UI, 2],\r\n        [gl.RG8, 2],\r\n        [gl.RG8I, 2],\r\n        [gl.RG8UI, 2],\r\n        [gl.RGB565, 2],\r\n        [gl.RGB5_A1, 2],\r\n        [gl.RGBA4, 2],\r\n\r\n        [gl.DEPTH_COMPONENT24, 3],\r\n        [gl.RGB, 3],\r\n        [gl.RGB8, 3],\r\n        [gl.RGB8UI, 3],\r\n        [gl.SRGB, 3],\r\n        [gl.SRGB8, 3],\r\n\r\n        [gl.DEPTH24_STENCIL8, 4],\r\n        [gl.DEPTH_COMPONENT32F, 4],\r\n        [gl.R11F_G11F_B10F, 4],\r\n        [gl.R32F, 4],\r\n        [gl.R32I, 4],\r\n        [gl.R32UI, 4],\r\n        [gl.RG16F, 4],\r\n        [gl.RG16I, 4],\r\n        [gl.RG16UI, 4],\r\n        [gl.RGB10_A2, 4],\r\n        [gl.RGB10_A2UI, 4],\r\n        [gl.RGB9_E5, 4],\r\n        [gl.RGBA, 4],\r\n        [gl.RGBA8, 4],\r\n        [gl.RGBA8I, 4],\r\n        [gl.RGBA8UI, 4],\r\n        [gl.SRGB8_ALPHA8, 4],\r\n        [gl.SRGB_ALPHA, 4],\r\n        [gl.SRGB_ALPHA8, 4],\r\n        [gl.SRGB_APLHA8, 4], // https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/texStorage2\r\n\r\n        [gl.DEPTH32F_STENCIL8, 5],\r\n\r\n        [gl.RGB16F, 6],\r\n\r\n        [gl.RG32F, 8],\r\n        [gl.RG32I, 8],\r\n        [gl.RG32UI, 8],\r\n        [gl.RGBA16F, 8],\r\n        [gl.RGBA16I, 8],\r\n        [gl.RGBA16UI, 8],\r\n\r\n        [gl.RGB32F, 12],\r\n\r\n        [gl.RGBA32F, 16],\r\n        [gl.RGBA32I, 16],\r\n        [gl.RGBA32UI, 16],\r\n    ]);\r\n\r\n    if (context.isWebGL1 && context.supportsSRGB) {\r\n        byteSizesByFormat.set(context.sRGB.SRGB_EXT, 3);\r\n        byteSizesByFormat.set(context.sRGB.SRGB_ALPHA_EXT, 4);\r\n        byteSizesByFormat.set(context.sRGB.SRGB8_ALPHA8_EXT, 4);\r\n    }\r\n    if (context.supportsColorBufferFloat) {\r\n        byteSizesByFormat.set(context.colorBufferFloat.RGB32F_EXT, 12);\r\n        byteSizesByFormat.set(context.colorBufferFloat.RGBA32F_EXT, 16);\r\n    }\r\n\r\n    byteSizesByFormatAndContext.set(context, byteSizesByFormat);\r\n    return byteSizesByFormat;\r\n}\r\n\r\n/**\r\n * Provides the size in bytes of certain WebGL format enumerator. Please note that some byte sizes might vary based on\r\n * context attributes or the bound render, thus, DEPTH_COMPONENT and DEPTH_STENCIL are not covered by this function.\r\n * This function does NOT cover data types that are usually on CPU side, not GPU, e.g., UNSIGNED_BYTE,\r\n * UNSIGNED_SHORT_5_6_5, HALF_FLOAT, UNSIGNED_SHORT, FLOAT, etc. and will assert when provided with types.\r\n * @param context - The OpenGL context.\r\n * @param format - Format identifier of the target internal OpenGL data type.\r\n * @returns - The size in bytes of one type instance on the GPU.\r\n */\r\nexport function byteSizeOfFormat(context: Context, format: GLenum): number {\r\n    const gl = context.gl;\r\n\r\n    if (format === undefined) {\r\n        assert(false, `expected given format to be defined`);\r\n        return 0;\r\n    }\r\n\r\n    if (isType(context, format)) {\r\n        assert(false, `expected format instead of type ${format}`);\r\n        return 0;\r\n    }\r\n\r\n    if (format === gl.DEPTH_COMPONENT || format === gl.DEPTH_STENCIL) {\r\n        assert(false, `byte size of DEPTH_COMPONENT or DEPTH_STENCIL formats depends on active render buffer`);\r\n        return 0;\r\n    }\r\n\r\n    const byteSizesByFormat = byteSizes(context);\r\n\r\n    const result = byteSizesByFormat.get(format);\r\n    assert(result !== undefined, `size of format ${format} is unknown`);\r\n\r\n    return result ? result : 0;\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { assert, bitInBitfield, logIf, LogLevel } from './auxiliaries';\r\nimport { GLclampf4, GLsizei2 } from './tuples';\r\n\r\nimport { Bindable } from './bindable';\r\nimport { Context } from './context';\r\nimport { Initializable } from './initializable';\r\nimport { AbstractObject } from './object';\r\nimport { Renderbuffer } from './renderbuffer';\r\nimport { Texture2D } from './texture2d';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * WebGL Framebuffer base implementation providing size accessors and requiring for bind, unbind, resize, validity,\r\n * and initialization implementations.\r\n * ```\r\n * @todo add usage example\r\n * ```\r\n */\r\nexport class Framebuffer extends AbstractObject<WebGLFramebuffer> implements Bindable {\r\n\r\n    /**\r\n     * Default framebuffer, e.g., used for unbind.\r\n     */\r\n    static readonly DEFAULT_FRAMEBUFFER = undefined;\r\n\r\n\r\n    /**\r\n     * Access to all attached renderbuffer objects.\r\n     */\r\n    protected _buffersByAttachment = new Map<GLenum, Renderbuffer>();\r\n\r\n    /**\r\n     * Access to all attached texture objects.\r\n     */\r\n    protected _texturesByAttachment = new Map<GLenum, Texture2D>();\r\n\r\n    /**\r\n     * RGBA color, depth value, or stencil value used for clearing the\r\n     * associated buffer.\r\n     */\r\n    protected _clearDepth: GLfloat;\r\n    protected _clearStencil: GLint;\r\n    protected _clearColors: Array<GLclampf4>;\r\n    /**\r\n     * Queue of all draw buffers that are to be cleared on `clear`.\r\n     */\r\n    protected _colorClearQueue = new Array<GLint>();\r\n\r\n    /** @see {@link drawBuffers} */\r\n    protected _drawBuffers = new Array<GLenum>();\r\n    protected _drawBuffersChanged = false;\r\n\r\n    /**\r\n     * Depending on the webgl version and provided bitmask, clears attachments of the framebuffer. Note that this\r\n     * function is set/unset to es2Clear or es3Clear on initialization/uninitialization.\r\n     * @param mask - Bitmask specifying which bits are to be cleared (and thereby which attachments).\r\n     * @param bind - Allows to skip binding the framebuffer (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the framebuffer (e.g., when binding is handled outside).\r\n     * @param colorClearQueue - allows to specify a specific queue of color attachments to be cleared. The webgl1\r\n     * implementation ignores this parameter. If no parameter is given, the webgl2 implementation clears all color\r\n     * attachments.\r\n     */\r\n    clear: ((mask: GLbitfield, bind?: boolean, unbind?: boolean, colorClearQueue?: Array<GLint>) => void);\r\n\r\n    /**\r\n     * Returns a string describing the given status of a framebuffer object.\r\n     * @param context - Context for valid GLenums.\r\n     * @param status - A framebuffer's status.\r\n     */\r\n    protected static statusString(context: Context, status: GLenum): string {\r\n        const gl = context.gl;\r\n\r\n        switch (status) {\r\n            case gl.FRAMEBUFFER_COMPLETE:\r\n                return 'the framebuffer is ready to display (COMPLETE)';\r\n\r\n            case gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\r\n                return 'the attachment types are mismatched or not all framebuffer attachment points are ' +\r\n                    'framebuffer attachment complete (INCOMPLETE_ATTACHMENT)';\r\n\r\n            case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\r\n                return 'there is no attachment (INCOMPLETE_MISSING_ATTACHMENT)';\r\n\r\n            case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\r\n                return 'height and width of the attachment are not the same (INCOMPLETE_DIMENSIONS)';\r\n\r\n            case gl.FRAMEBUFFER_UNSUPPORTED:\r\n                return 'the format of the attachment is not supported or if depth and stencil attachments are not ' +\r\n                    'the same renderbuffer (UNSUPPORTED)';\r\n\r\n            case gl.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE:\r\n                return 'the values of gl.RENDERBUFFER_SAMPLES are different among attached renderbuffers, or are ' +\r\n                    'non-zero if the attached images are a mix of renderbuffers and textures (INCOMPLETE_MULTISAMPLE)';\r\n\r\n            default:\r\n                assert(false, `expected known framebuffer status, given ${status}`);\r\n                return '';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create a framebuffer object on the GPU and attaches all given renderable objects (either renderbuffer or\r\n     * texture) to the framebuffer object.\r\n     * @param attachments - tuples that associate an attachment to its actual render object, either a renderbuffer or\r\n     * texture, e.g., `[ gl.COLOR_ATTACHMENT0, someTexture ]`.\r\n     */\r\n    protected create(attachments: Array<[GLenum, Renderbuffer | Texture2D]>): WebGLFramebuffer | undefined {\r\n        const gl = this._context.gl;\r\n        const gl2facade = this.context.gl2facade;\r\n\r\n        this._object = gl.createFramebuffer();\r\n\r\n        /* Initialize clearing. */\r\n\r\n        this._clearColors = new Array<GLclampf4>(gl2facade.COLOR_ATTACHMENT_MAX - gl2facade.COLOR_ATTACHMENT0);\r\n        this._clearDepth = 1.0;\r\n        this._clearStencil = 0;\r\n\r\n        this.clear = this.context.isWebGL1 ? this.es2Clear : this.es3Clear;\r\n\r\n        /* Classify color attachments in textures and renderbuffer. */\r\n\r\n        for (const tuple of attachments) {\r\n            const attachment = tuple[0];\r\n            const bufferOrTexture = tuple[1];\r\n\r\n            if (bufferOrTexture instanceof Renderbuffer) {\r\n                this._buffersByAttachment.set(attachment, bufferOrTexture as Renderbuffer);\r\n            } else if (bufferOrTexture instanceof Texture2D) {\r\n                this._texturesByAttachment.set(attachment, bufferOrTexture as Texture2D);\r\n            }\r\n\r\n            if (attachment < gl2facade.COLOR_ATTACHMENT_MIN || attachment > gl2facade.COLOR_ATTACHMENT_MAX) {\r\n                continue;\r\n            }\r\n\r\n            /* Queue color attachments for color clearing. */\r\n            this._drawBuffers.push(attachment);\r\n\r\n            /* Derive the draw buffer index as GLint is required for clearBuffer. */\r\n            const index = attachment - gl.COLOR_ATTACHMENT0;\r\n            this._colorClearQueue.push(index as GLint);\r\n            /* Setup default clear color (required in webgl2 or drawBuffers extension). */\r\n            this._clearColors[index] = [0.0, 0.0, 0.0, 0.0];\r\n        }\r\n        this._drawBuffersChanged = true;\r\n\r\n\r\n        /* Setup attachments. */\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this._object);\r\n\r\n        this._buffersByAttachment.forEach((buffer: Renderbuffer, attachment: GLenum) => {\r\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, attachment, gl.RENDERBUFFER, buffer.object);\r\n\r\n        });\r\n        this._texturesByAttachment.forEach((texture: Texture2D, attachment: GLenum) => {\r\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, gl.TEXTURE_2D, texture.object, 0);\r\n        });\r\n\r\n\r\n        /* Check status and cache minimum renderable area. */\r\n        const status: GLenum = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n        this._valid = gl.isFramebuffer(this._object) && (status === gl.FRAMEBUFFER_COMPLETE);\r\n        logIf(!this._valid, LogLevel.Warning, Framebuffer.statusString(this.context, status));\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, Framebuffer.DEFAULT_FRAMEBUFFER);\r\n\r\n        if (gl2facade.drawBuffers) {\r\n            gl2facade.drawBuffers(this._drawBuffers);\r\n        }\r\n\r\n        return this._object;\r\n\r\n    }\r\n\r\n    /**\r\n     * Delete the framebuffer object on the GPU. This should have the reverse effect of `create`.\r\n     */\r\n    protected delete(): void {\r\n        assert(this._object instanceof WebGLFramebuffer, `expected WebGLFramebuffer object`);\r\n        this.context.gl.deleteFramebuffer(this._object);\r\n\r\n        this._object = undefined;\r\n        this._valid = false;\r\n    }\r\n\r\n\r\n    /**\r\n     * WebGL1 implementation for clearing framebuffer attachments.\r\n     * @param mask - A GLbitfield bitwise OR mask that indicates the buffers to be cleared.\r\n     * @param bind - Allows to skip binding the framebuffer (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the framebuffer (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    protected es2Clear(mask: GLbitfield, bind: boolean = true, unbind: boolean = true): void {\r\n        const gl = this.context.gl;\r\n\r\n        const clearDepth = bitInBitfield(mask, gl.DEPTH_BUFFER_BIT);\r\n        const clearStencil = bitInBitfield(mask, gl.STENCIL_BUFFER_BIT);\r\n        const clearColor = bitInBitfield(mask, gl.COLOR_BUFFER_BIT);\r\n\r\n        if (!clearColor && !clearDepth && !clearStencil) {\r\n            return;\r\n        }\r\n\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n\r\n        if (clearColor && this._clearColors[0] !== undefined) {\r\n            const color = this._clearColors[0];\r\n            gl.clearColor(color[0], color[1], color[2], color[3]);\r\n        }\r\n        if (clearDepth && this._clearDepth !== undefined) {\r\n            gl.clearDepth(this._clearDepth);\r\n        }\r\n        if (clearStencil && this._clearStencil !== undefined) {\r\n            gl.clearStencil(this._clearStencil);\r\n        }\r\n\r\n        gl.clear(mask);\r\n\r\n        if (unbind) {\r\n            this.unbind();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * WebGL2 implementation for clearing framebuffer attachments.\r\n     * @param mask - A GLbitfield bitwise OR mask that indicates the buffers to be cleared.\r\n     * @param bind - Allows to skip binding the framebuffer (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the framebuffer (e.g., when binding is handled outside).\r\n     * @param colorClearQueue - Allows to specify a specific queue of color attachments to be cleared. If no\r\n     * parameter is given, the webgl2 implementation clears all color attachments.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    protected es3Clear(mask: GLbitfield, bind: boolean = true, unbind: boolean = true,\r\n        colorClearQueue?: Array<GLint>): void {\r\n\r\n        const gl = this.context.gl;\r\n\r\n        const clearDepth = bitInBitfield(mask, gl.DEPTH_BUFFER_BIT);\r\n        const clearStencil = bitInBitfield(mask, gl.STENCIL_BUFFER_BIT);\r\n        const clearColor = bitInBitfield(mask, gl.COLOR_BUFFER_BIT);\r\n\r\n        if (!clearColor && !clearDepth && !clearStencil) {\r\n            return;\r\n        }\r\n\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n\r\n        if (clearColor) {\r\n            /* Multiple color attachments either by WebGL2 or WEBGL_draw_buffers can be expected. */\r\n\r\n            // https://stackoverflow.com/a/48182999\r\n            const isChrome = !!(window as any)['chrome'] &&\r\n                (!!(window as any)['chrome']['webstore'] || !!(window as any)['chrome']['runtime']);\r\n\r\n            if (isChrome) {\r\n                /**\r\n                 * Unfortunately, the clearBufferfv doesn't work in Chrome (symptom: ID buffer is not cleared), so\r\n                 * clear every color buffer with the first clear color.\r\n                 */\r\n                const color = this._clearColors[0] ? this._clearColors[0] : [0.0, 0.0, 0.0, 1.0];\r\n                gl.clearColor(color[0], color[1], color[2], color[3]);\r\n                gl.clear(gl.COLOR_BUFFER_BIT);\r\n            }\r\n\r\n            /**\r\n             * Since for chrome, the above code cleared every color buffer with the same color, we clear again, but now\r\n             * with the corresponding color.\r\n             * NOTE: In chrome, we are double-clearing here. Be aware that if we remove the code above, some color\r\n             * bufferes are not cleared at all, while using ONLY the above code would clear them with the wrong color.\r\n             */\r\n            for (const drawBuffer of colorClearQueue ? colorClearQueue : this._colorClearQueue) {\r\n                gl.clearBufferfv(gl.COLOR, drawBuffer, this._clearColors[drawBuffer]);\r\n            }\r\n\r\n        }\r\n\r\n        if (clearDepth && clearStencil) {\r\n            /**\r\n             * Unfortunately, the following code doesn't work, on Intel HD, -> fallback to WebGL 1 interface for\r\n             * clearing depth and stencil.\r\n             *\r\n             * gl.clearBufferfi(gl.DEPTH_STENCIL, 0, this._clearDepth, this._clearStencil);\r\n             */\r\n            gl.clearStencil(this._clearStencil);\r\n            gl.clearDepth(this._clearDepth);\r\n            gl.clear(gl.STENCIL_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n        } else if (clearDepth) {\r\n            gl.clearBufferfv(gl.DEPTH, 0, [this._clearDepth]);\r\n\r\n        } else if (clearStencil) {\r\n            /**\r\n             * Unfortunately, the following code doesn't work, at least in Chrome, -> fallback to WebGL 1 interface\r\n             * for clearing depth and stencil.\r\n             *\r\n             * gl.clearBufferiv(gl.STENCIL, 0, [this._clearStencil]);\r\n             */\r\n            gl.clearStencil(this._clearStencil);\r\n            gl.clear(gl.STENCIL_BUFFER_BIT);\r\n        }\r\n\r\n        if (unbind) {\r\n            this.unbind();\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param attachment -\r\n     */\r\n    protected hasAttachment(attachment: GLenum): boolean {\r\n        return this._texturesByAttachment.has(attachment) || this._buffersByAttachment.has(attachment);\r\n    }\r\n\r\n\r\n    /**\r\n     * Binds the framebuffer object as framebuffer to the provided target.\r\n     * @param target - Specifying the binding point (target).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    bind(target: GLenum = this.context.gl.FRAMEBUFFER): void {\r\n        this.context.gl.bindFramebuffer(target, this._object);\r\n\r\n        if (this._drawBuffersChanged && this.context.gl2facade.drawBuffers) {\r\n            this.context.gl2facade.drawBuffers(this._drawBuffers);\r\n            this._drawBuffersChanged = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Binds the default back buffer as framebuffer to the provided target.\r\n     * @param target - Specifying the binding point (target).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    unbind(target: GLenum = this.context.gl.FRAMEBUFFER): void {\r\n        this.context.gl.bindFramebuffer(target, Framebuffer.DEFAULT_FRAMEBUFFER);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets the clear color used for clearing a draw buffer. In order to have transparency working, the canvas needs\r\n     * to have the alpha attribute enabled. This stage also supports premultiplied alpha, which is applied\r\n     * automatically when the context's `premultipliedAlpha` attribute is set.\r\n     * @param color - RGBA clear color.\r\n     * @param drawBuffer - The draw buffer index. If no index is provided, the color will be applied to all buffers.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    clearColor(color: GLclampf4, drawBuffer?: GLint): void {\r\n        assert(drawBuffer === undefined || drawBuffer === 0 || this.context.isWebGL2 ||\r\n            this.context.supportsDrawBuffers, `WebGL2 context expected for clearing multiple color attachments.`);\r\n\r\n        const alphaIssue: boolean = color[3] < 1.0 && !this.context.alpha;\r\n        logIf(alphaIssue, LogLevel.Warning, `context has alpha disabled, clear color alpha is ignored`);\r\n\r\n        const color2: GLclampf4 = [color[0], color[1], color[2], alphaIssue ? 1.0 : color[3]];\r\n\r\n        if (this.context.premultipliedAlpha && !alphaIssue) {\r\n            /* Premultiply alpha. */\r\n            color2[0] *= color2[3];\r\n            color2[1] *= color2[3];\r\n            color2[2] *= color2[3];\r\n        }\r\n\r\n        /* Note that draw buffer index null is allowed, thus explicit check for undefined is required. */\r\n        if (drawBuffer !== undefined) {\r\n            this._clearColors[drawBuffer] = color2;\r\n        } else {\r\n            for (let i = 0; i < this._clearColors.length; ++i) {\r\n                this._clearColors[i] = color2;\r\n            }\r\n        }\r\n    }\r\n\r\n    @Initializable.assert_initialized()\r\n    clearDepth(depth: GLfloat): void {\r\n        this._clearDepth = depth;\r\n    }\r\n\r\n    @Initializable.assert_initialized()\r\n    clearStencil(stencil: GLint): void {\r\n        this._clearStencil = stencil;\r\n    }\r\n\r\n\r\n    /**\r\n     * Access to attached textures, identified by a valid framebuffer attachment.\r\n     * @param attachment - The attachment to request the texture object of.\r\n     * @returns - A texture object if one exists for the given attachment, otherwise undefined.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    texture(attachment: GLenum): Texture2D | undefined {\r\n        return this._texturesByAttachment.get(attachment);\r\n    }\r\n\r\n    /**\r\n     * Forwards a resize to all attachments, renderbuffers and textures.\r\n     * @param width - Targeted/new width for all attachments in px.\r\n     * @param height - Targeted/new height for all attachments in px.\r\n     * @param bind - Allows to skip binding the specific attachment (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the specific attachment (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    resize(width: GLsizei, height: GLsizei, bind: boolean = true, unbind: boolean = true): void {\r\n        this._buffersByAttachment.forEach((buffer: Renderbuffer) => {\r\n            buffer.resize(width, height, bind, unbind);\r\n        });\r\n        this._texturesByAttachment.forEach((texture: Texture2D) => {\r\n            texture.resize(width, height, bind, unbind);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Readonly access to the framebuffer width in pixel. If the width of the attachments are not all identical,\r\n     * the minimal width as the renderable width of this framebuffer is returned.\r\n     * @returns - The minimal width of the renderable width over all attachments.\r\n     */\r\n    get width(): GLsizei {\r\n        this.assertInitialized();\r\n\r\n        let width: GLsizei = NaN;\r\n        this._buffersByAttachment.forEach((buffer: Renderbuffer) => {\r\n            if (isNaN(width) || buffer.width < width) {\r\n                width = buffer.width;\r\n            }\r\n        });\r\n        this._texturesByAttachment.forEach((texture: Texture2D) => {\r\n            if (isNaN(width) || texture.width < width) {\r\n                width = texture.width;\r\n            }\r\n        });\r\n        return width;\r\n    }\r\n\r\n    /**\r\n     * Readonly access to the framebuffer height in pixel. If the height of the attachments are not all identical,\r\n     * the minimal height as the renderable height of this framebuffer is returned.\r\n     * @returns - The minimal height of the renderable height over all attachments.\r\n     */\r\n    get height(): GLsizei {\r\n        this.assertInitialized();\r\n\r\n        let height: GLsizei = NaN;\r\n        this._buffersByAttachment.forEach((buffer: Renderbuffer) => {\r\n            if (isNaN(height) || buffer.height < height) {\r\n                height = buffer.height;\r\n            }\r\n        });\r\n        this._texturesByAttachment.forEach((texture: Texture2D) => {\r\n            if (isNaN(height) || texture.height < height) {\r\n                height = texture.height;\r\n            }\r\n        });\r\n        return height;\r\n    }\r\n\r\n    /**\r\n     * Convenience getter for the 2-tuple containing the texture's width and height.\r\n     * @see {@link width}\r\n     * @see {@link heigth}\r\n     */\r\n    get size(): GLsizei2 {\r\n        return [this.width, this.height];\r\n    }\r\n\r\n\r\n    /**\r\n     * Set one or multiple draw buffers.\r\n     * @param attachments - Array of attachment identifier (e.g., gl.COLOR_ATTACHMENT0).\r\n     */\r\n    set drawBuffers(attachments: Array<GLenum>) {\r\n        this.assertInitialized();\r\n        const gl2facade = this.context.gl2facade;\r\n\r\n        for (const attachment of attachments) {\r\n            assert(this.hasAttachment(attachment), `valid attachment expected for draw buffer, given ${attachment}`);\r\n            assert(attachment >= gl2facade.COLOR_ATTACHMENT_MIN && attachment <= gl2facade.COLOR_ATTACHMENT_MAX,\r\n                `color attachment expected for draw buffer, given ${attachment}`);\r\n            this._drawBuffersChanged = this._drawBuffersChanged || this._drawBuffers.indexOf(attachment) === -1;\r\n        }\r\n        this._drawBuffersChanged = this._drawBuffersChanged || attachments.length !== this._drawBuffers.length;\r\n\r\n        if (this._drawBuffersChanged) {\r\n            this._drawBuffers = attachments;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Used to remember which attachments are available as potential draw buffers.\r\n     */\r\n    get drawBuffers(): Array<GLenum> {\r\n        this.assertInitialized();\r\n        return this._drawBuffers;\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { assert } from './auxiliaries';\r\n\r\nimport { Framebuffer } from './framebuffer';\r\nimport { DefaultFramebuffer } from './defaultframebuffer';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * Utility for capturing images directly from any framebuffer. This enables taking a screenshot bigger than the used\r\n * canvas. Supports capturing of only part of the framebuffer. The resulting image can be transformed to a data URL.\r\n * The data URL can then be used to embed the image inline in documents or to download it.\r\n *\r\n * ```\r\n * controller.postFrameEvent$.pipe(rxjs.operators.first()).subscribe(() => {\r\n *     const img = gloperate.FrameCapture.capture(renderer._defaultFBO);\r\n *     const data = gloperate.FrameCapture.createDataURL(img, 'image/png');\r\n *     console.log(data);\r\n * })\r\n * ```\r\n */\r\nexport class FrameCapture {\r\n\r\n    /**\r\n     * Creates a data URL for the given image. The data will be encoded according to type. The type defaults to png,\r\n     * if no type is given. Quality can be only set for types using lossy compression. The default quality is 0.92.\r\n     * @param imageData - Image to create the data URL for.\r\n     * @param type - Optional format used for encoding.\r\n     * @param quality - Optional quality used for lossy compression.\r\n     */\r\n    static createDataURL(imageData: ImageData, type?: string, quality?: number): string {\r\n        const canvas = document.createElement('canvas');\r\n        const context = canvas.getContext('2d')!;\r\n\r\n        canvas.width = imageData.width;\r\n        canvas.height = imageData.height;\r\n\r\n        context.putImageData(imageData, 0, 0);\r\n\r\n        return canvas.toDataURL(type, quality);\r\n    }\r\n\r\n    /**\r\n     * Captures the gl.BACK buffer of the default framebuffer and writes it into the given framebuffer. Sets the color\r\n     * buffer source for the default framebuffer to gl.BACK.\r\n     * @param rect - Part of the framebuffer to capture.\r\n     * @param buffer - Buffer to write the data into.\r\n     */\r\n    protected static captureDefaultFramebuffer(framebuffer: Framebuffer, rect: FrameCapture.Rect, buffer: Uint8Array): void {\r\n        const gl = framebuffer.context.gl;\r\n\r\n        framebuffer.bind();\r\n        gl.readPixels(rect.x, rect.y, rect.width, rect.height, gl.RGBA, gl.UNSIGNED_BYTE, buffer);\r\n        framebuffer.unbind();\r\n    }\r\n\r\n    /**\r\n     * Captures the given attachment of the given framebuffer. Sets the color buffer source to the given attachment.\r\n     * @param framebuffer - Framebuffer to capture.\r\n     * @param attachment - Attachment to capture.\r\n     * @param rect - Part of the framebuffer to capture.\r\n     * @param buffer - Buffer to write the data into.\r\n     */\r\n    protected static captureFramebuffer(framebuffer: Framebuffer, attachment: GLenum,\r\n        rect: FrameCapture.Rect, buffer: Uint8Array): void {\r\n        const gl = framebuffer.context.gl;\r\n\r\n        const texture = framebuffer.texture(attachment);\r\n        assert(texture !== undefined, `Framebuffer does not have given attachment ${attachment}.`);\r\n        assert(texture!.format === gl.RGBA, `Unsupported texture format ${texture!.format}.`);\r\n        assert(texture!.type === gl.UNSIGNED_BYTE || texture!.type === gl.FLOAT || texture!.type === gl.HALF_FLOAT,\r\n            `Unsupported texture type ${texture!.type}.`);\r\n\r\n        gl.readBuffer(attachment);\r\n\r\n        if (texture!.type === gl.FLOAT || texture!.type === gl.HALF_FLOAT) {\r\n            const tempBuffer = new Float32Array(rect.width * rect.height * 4);\r\n            gl.readPixels(rect.x, rect.y, rect.width, rect.height, gl.RGBA, gl.FLOAT, tempBuffer);\r\n\r\n            tempBuffer.forEach((value: number, index: number) => {\r\n                buffer[index] = value * 255;\r\n            });\r\n        } else if (texture!.type === gl.UNSIGNED_BYTE) {\r\n            gl.readPixels(rect.x, rect.y, rect.width, rect.height, gl.RGBA, gl.UNSIGNED_BYTE, buffer);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Flips the given image data vertically.\r\n     * @param imageData - Image data to flip.\r\n     */\r\n    static flipImageDataVertically(imageData: ImageData): void {\r\n        const rows = imageData.height;\r\n        const elementsPerRow = imageData.data.length / rows;\r\n\r\n        const rEnd = Math.floor(rows / 2.0);\r\n        for (let r = 0; r < rEnd; ++r) {\r\n\r\n            const temp = imageData.data.slice(r * elementsPerRow, (r + 1) * elementsPerRow);\r\n            imageData.data.copyWithin(r * elementsPerRow, (rows - r - 1) * elementsPerRow, (rows - r) * elementsPerRow);\r\n            imageData.data.set(temp, (rows - r - 1) * elementsPerRow);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Captures (part of) the given attachment of a framebuffer. The format of the underlying texture has to be gl.RGBA\r\n     * and the type has to be either gl.UNSIGNED_BYTE, gl.HALF_FLOAT or gl.FLOAT.\r\n     * @param framebuffer - Framebuffer to capture.\r\n     * @param attachment - Optional attachment to capture from. Is ignored for the default framebuffer.\r\n     * @param rect - Optional part of the framebuffer to capture.\r\n     * @returns - The captured image.\r\n     */\r\n    static capture(framebuffer: Framebuffer | DefaultFramebuffer, attachment?: GLenum,\r\n        rect?: FrameCapture.Rect): ImageData {\r\n        const gl = framebuffer.context.gl;\r\n\r\n        const framebufferSize = framebuffer.size;\r\n        if (rect === undefined) {\r\n            rect = { x: 0, y: 0, width: framebufferSize[0], height: framebufferSize[1] };\r\n        }\r\n\r\n        if (attachment === undefined) {\r\n            attachment = gl.COLOR_ATTACHMENT0 as GLenum;\r\n        }\r\n\r\n        const imageData = new ImageData(rect.width, rect.height);\r\n        const buffer = new Uint8Array(imageData.data.buffer);\r\n\r\n        framebuffer.bind(gl.READ_FRAMEBUFFER);\r\n\r\n        if (framebuffer instanceof DefaultFramebuffer) {\r\n            FrameCapture.captureDefaultFramebuffer(framebuffer, rect, buffer);\r\n        } else if (framebuffer instanceof Framebuffer) {\r\n            FrameCapture.captureFramebuffer(framebuffer, attachment, rect, buffer);\r\n        }\r\n\r\n        framebuffer.unbind(gl.READ_FRAMEBUFFER);\r\n\r\n        FrameCapture.flipImageDataVertically(imageData);\r\n        return imageData;\r\n    }\r\n}\r\n\r\n\r\nexport namespace FrameCapture {\r\n\r\n    export interface Rect {\r\n        x: number,\r\n        y: number,\r\n        width: number,\r\n        height: number\r\n    }\r\n\r\n}\r\n","import { vec2 } from 'gl-matrix';\r\n\r\nimport { assert } from './auxiliaries';\r\nimport { Context } from './context';\r\nimport { v2 } from './gl-matrix-extensions';\r\nimport { Initializable } from './initializable';\r\nimport { NdcFillingTriangle } from './ndcfillingtriangle';\r\nimport { Program } from './program';\r\nimport { Shader } from './shader';\r\nimport { Texture2D } from './texture2d';\r\n\r\n\r\n/**\r\n * Gaussian Filter implemented using a fragment shader.\r\n * Renders the filtered result into COLOR_ATTACHMENT0 of the currently bound framebuffer.\r\n * Does not support integer textures.\r\n * @todo: revisit this class design w.r.t. post planned catalogue of processing/filtering passes ...\r\n */\r\nexport class GaussFilter extends Initializable {\r\n    protected static readonly _MAXKERNELSIZEHALF = 32;\r\n\r\n    protected _kernelSize: GLsizei = 7;\r\n    protected _standardDeviation: GLfloat = 1.0;\r\n    protected _redistribute: GLboolean = true;\r\n\r\n    protected _weights: [number, ...number[]] & { length: 32 } | undefined;\r\n\r\n    protected _uDelta: WebGLUniformLocation;\r\n    protected _uWeights: WebGLUniformLocation;\r\n\r\n    protected _context: Context;\r\n    protected _fragmentShader: Shader;\r\n    protected _program: Program;\r\n    protected _ndcTriangle: NdcFillingTriangle;\r\n    protected _ndcTriangleShared = false;\r\n\r\n\r\n    constructor(context: Context) {\r\n        super();\r\n        this._context = context;\r\n    }\r\n\r\n    /**\r\n     * Recalculates the weights if necessary.\r\n     * @returns - True if the weights were recalculated, false otherwise.\r\n     */\r\n    protected recalculateWeights(): boolean {\r\n        if (this._weights) {\r\n            return false;\r\n        }\r\n\r\n        const first = 1.0 / Math.sqrt(2.0 * Math.PI) * this._standardDeviation;\r\n        const second = 2.0 * this._standardDeviation * this._standardDeviation;\r\n\r\n        this._weights = [\r\n            0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\r\n            0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\r\n            0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\r\n            0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\r\n        ];\r\n        let summedWeight = 0.0;\r\n\r\n        for (let i = 0; i <= Math.floor(this._kernelSize / 2); i++) {\r\n            this._weights[i] = first * Math.pow(Math.E, -(Math.pow(i, 2.0) / second));\r\n            summedWeight += i > 0 ? 2.0 * this._weights[i] : this._weights[i];\r\n        }\r\n\r\n        if (this._redistribute) {\r\n            const remainder = 1.0 - summedWeight;\r\n            for (let i = 0; i <= Math.floor(this._kernelSize / 2); i++) {\r\n                this._weights[i] += this._weights[i] / summedWeight * remainder;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Size of the kernel.\r\n     */\r\n    get kernelSize(): GLsizei {\r\n        return this._kernelSize;\r\n    }\r\n\r\n    /**\r\n     * Sets the size of the kernel.\r\n     * The kernel size has to be an odd integer.\r\n     */\r\n    set kernelSize(kernelSize: GLsizei) {\r\n        assert(kernelSize > 0, 'Kernel size has to be positive.');\r\n        assert(kernelSize <= (GaussFilter._MAXKERNELSIZEHALF - 1) * 2 + 1,\r\n            'Kernel size has to be smaller than ' + ((GaussFilter._MAXKERNELSIZEHALF - 1) * 2 + 2) + '.');\r\n        assert(Number.isInteger(kernelSize), 'Kernel size has to be an integer.');\r\n        assert(kernelSize % 2 === 1, 'Kernel size has to be odd.');\r\n\r\n        this._kernelSize = kernelSize;\r\n        this._weights = undefined;\r\n    }\r\n\r\n    /**\r\n     * Standard deviation used to calculate the weights.\r\n     */\r\n    get standardDeviation(): GLfloat {\r\n        return this._standardDeviation;\r\n    }\r\n\r\n    /**\r\n     * Sets the standard deviation.\r\n     */\r\n    set standardDeviation(standardDeviation: GLfloat) {\r\n        assert(standardDeviation > 0.0, 'Standard deviation has to be positive.');\r\n\r\n        this._standardDeviation = standardDeviation;\r\n        this._weights = undefined;\r\n    }\r\n\r\n    /**\r\n     * Parameter determining whether the weights outside of the kernel get redistributed on the kernel.\r\n     */\r\n    get redistribute(): GLboolean {\r\n        return this._redistribute;\r\n    }\r\n\r\n    /**\r\n     * Sets the redistribute parameter.\r\n     * If this is true then the sum of all weights inside the kernel is always 1.\r\n     */\r\n    set redistribute(redistribute: GLboolean) {\r\n        this._redistribute = redistribute;\r\n        this._weights = undefined;\r\n    }\r\n\r\n    /**\r\n     * Creates and initializes the gaussian filters resources.\r\n     * @param ndcTriangle - If specified, assumed to be used as shared geometry. If none is specified, a ndc-filling\r\n     * triangle will be created internally.\r\n     */\r\n    @Initializable.initialize()\r\n    initialize(ndcTriangle?: NdcFillingTriangle): boolean {\r\n        const gl = this._context.gl;\r\n\r\n        const vert = new Shader(this._context, gl.VERTEX_SHADER, 'gauss.vert');\r\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n        vert.initialize(require('./shaders/gaussfilter.vert'));\r\n        this._fragmentShader = new Shader(this._context, gl.FRAGMENT_SHADER, 'gauss.frag');\r\n        this._fragmentShader.replace('$KERNEL_HALF_SIZE', `${Math.floor(this.kernelSize / 2)}`);\r\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n        this._fragmentShader.initialize(require('./shaders/gaussfilter.frag'));\r\n        this._program = new Program(this._context);\r\n        this._program.initialize([vert, this._fragmentShader]);\r\n\r\n        this._uDelta = this._program.uniform('u_delta');\r\n        this._uWeights = this._program.uniform('u_weights');\r\n\r\n        const aVertex = this._program.attribute('a_vertex', 0);\r\n        if (ndcTriangle === undefined) {\r\n            this._ndcTriangle = new NdcFillingTriangle(this._context, 'GaussFilterQuad');\r\n        } else {\r\n            this._ndcTriangle = ndcTriangle;\r\n            this._ndcTriangleShared = true;\r\n        }\r\n\r\n        this._ndcTriangle.initialize(aVertex);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Uninitializes the program and screen aligned triangle geometry, if it is not shared.\r\n     */\r\n    @Initializable.uninitialize()\r\n    uninitialize(): void {\r\n        this._program.uninitialize();\r\n\r\n        if (!this._ndcTriangleShared) {\r\n            this._ndcTriangle.uninitialize();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Filters the given texture in the given direction using the configured weights.\r\n     * The weights will be recalculated if necessary.\r\n     * @param texture - The float texture to filter.\r\n     * @param direction - The direction to filter the texture in.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    filter(texture: Texture2D, direction: GaussFilter.Direction): void {\r\n        const gl = this._context.gl;\r\n        const directionVectors: [vec2, vec2] = [vec2.fromValues(1.0, 0.0), vec2.fromValues(0.0, 1.0)];\r\n\r\n        const recalculatedWeights = this.recalculateWeights();\r\n        if (recalculatedWeights) {\r\n            this._fragmentShader.replace('$KERNEL_HALF_SIZE', `${Math.floor(this.kernelSize / 2)}`);\r\n            this._fragmentShader.compile();\r\n            this._program.link();\r\n\r\n            this._uDelta = this._program.uniform('u_delta');\r\n            this._uWeights = this._program.uniform('u_weights');\r\n\r\n            this._program.bind();\r\n            gl.uniform1fv(this._uWeights, this._weights);\r\n        }\r\n\r\n        this._program.bind();\r\n        texture.bind(gl.TEXTURE0);\r\n\r\n        // delta = 1.0 / textureSize * direction = direction / textureSize\r\n        gl.uniform2fv(this._uDelta, vec2.divide(v2(), directionVectors[direction], texture.size));\r\n\r\n        this._ndcTriangle.bind();\r\n        this._ndcTriangle.draw();\r\n        this._ndcTriangle.unbind();\r\n\r\n        texture.unbind(gl.TEXTURE0);\r\n        this._program.unbind();\r\n    }\r\n}\r\n\r\nexport namespace GaussFilter {\r\n\r\n    export enum Direction {\r\n        Horizontal = 0,\r\n        Vertical = 1,\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { Bindable } from './bindable';\r\nimport { Buffer } from './buffer';\r\nimport { Initializable } from './initializable';\r\n\r\nimport { Context } from './context';\r\nimport { VertexArray } from './vertexarray';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * Geometry that extends Initializable and Bindable by a draw method, a getter for buffers, as well as a getter for the\r\n * vertex array object. This is used as generic interface for one or more buffer objects associated to a single vertex\r\n * array object intended for drawing (often also referred to as 'drawable').\r\n */\r\nexport abstract class Geometry extends Initializable implements Bindable {\r\n\r\n    /**\r\n     * Vertex array used for binding the rectangle's buffer(s).\r\n     */\r\n    protected _vertexArray: VertexArray;\r\n\r\n    /**\r\n     * Various buffers required for this geometry (e.g., vertex buffer).\r\n     */\r\n    protected _buffers = new Array<Buffer>();\r\n\r\n\r\n    /**\r\n     * Creates the geometry and a vertex array instance. Please note that inheritors are expected to create the buffer.\r\n     * @param context - Valid context to create the object for.\r\n     * @param identifier - Meaningful name for identification of this instances VAO and VBOs.\r\n     */\r\n    constructor(context: Context, identifier?: string) {\r\n        super();\r\n\r\n        identifier = identifier !== undefined && identifier !== `` ? identifier : this.constructor.name;\r\n        this._vertexArray = new VertexArray(context, `${identifier}VAO`);\r\n    }\r\n\r\n\r\n    /**\r\n     * Binds all buffer object(s) to their associated attribute binding points (pre-defined index/indices). This\r\n     * function is passed to the initialization of this geometries vertex array object.\r\n     * @param indices - Indices passed on geometry initialization by inheritor (sequence as in buffers).\r\n     */\r\n    protected abstract bindBuffers(indices: Array<GLuint>): void;\r\n\r\n    /**\r\n     * Unbinds all buffer objects and disables their binding points. This function is passed to the uninitialization\r\n     * of this geometries vertex array object.\r\n     * @param indices - Indices passed on geometry initialization by inheritor (sequence as in buffers).\r\n     */\r\n    protected abstract unbindBuffers(indices: Array<GLuint>): void;\r\n\r\n\r\n    /**\r\n     * Initializes all buffer objects and the vertex array. Please note that implicit arguments are used in order to\r\n     * enable custom initialization signatures for inheritors.\r\n     * @param targets - Targets to initialize the buffers for.\r\n     * @param indices - Binding points that are passed to the inheritors (un)bind buffer methods.\r\n     */\r\n    @Initializable.initialize()\r\n    initialize(...args: Array<any>): boolean {\r\n        const targets = args[0] as Array<GLenum>;\r\n        const indices = args[1] as Array<GLuint>;\r\n\r\n        let valid = true;\r\n        for (let i = 0; i < this._buffers.length; ++i) {\r\n            valid = this._buffers[i].initialize(targets[i]) && valid;\r\n        }\r\n\r\n        this._vertexArray.initialize(() => this.bindBuffers(indices), () => this.unbindBuffers(indices));\r\n        return this._vertexArray.valid && valid;\r\n    }\r\n\r\n    /**\r\n     * Uninitialize the vertex array object and the rectangle.\r\n     */\r\n    @Initializable.uninitialize()\r\n    uninitialize(): void {\r\n        this._vertexArray.uninitialize();\r\n        this._buffers.forEach((buffer) => buffer.uninitialize());\r\n    }\r\n\r\n\r\n    /**\r\n     * Binds the vertex array object.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    bind(): void {\r\n        this._vertexArray.bind();\r\n    }\r\n\r\n    /**\r\n     * Unbinds the vertex array object.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    unbind(): void {\r\n        this._vertexArray.unbind();\r\n    }\r\n\r\n\r\n    abstract draw(): void;\r\n\r\n\r\n    /**\r\n     * Read-only access to the buffer(s) associated to this instances vertex array object.\r\n     */\r\n    get buffers(): Array<Buffer> {\r\n        return this._buffers;\r\n    }\r\n\r\n    /**\r\n     * Read-only access to the buffers' and vertex array's context.\r\n     */\r\n    get context(): Context {\r\n        return this._vertexArray.context;\r\n    }\r\n\r\n    /**\r\n     * Read-only access to the vertex array.\r\n     */\r\n    get vertexArray(): VertexArray {\r\n        return this._vertexArray;\r\n    }\r\n\r\n}\r\n\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { mat2, mat3, mat4, vec2, vec3, vec4 } from 'gl-matrix';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/** Namespace that comprises various gl-matrix extensions (also cleans up documentation). */\r\nnamespace gl_matrix_extensions {\r\n\r\n    // GLSL sign https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/sign.xhtml\r\n\r\n    /**\r\n     * Extract the sign of the parameter as specified in GLSL.\r\n     * @param x - Value from which to extract the sign.\r\n     * @returns - -1.0 if x is less than 0.0, 0.0 if x is equal to 0.0, and +1.0 if x is greater than 0.0.\r\n     */\r\n    export function sign(x: number): number {\r\n        return x > 0.0 ? 1.0 : x < 0.0 ? -1.0 : 0.0;\r\n    }\r\n\r\n    // GLSL clamp https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/clamp.xhtml\r\n\r\n    /**\r\n     * Constrain a value to lie between two further values.\r\n     * ```\r\n     * clamp(+3, +0, +2); // results in +2;\r\n     * ```\r\n     * @param x - The number to clamp.\r\n     * @param min - Minimum number operand.\r\n     * @param max - Maximum number operand.\r\n     * @returns - Number constrained to [min,max].\r\n     */\r\n    export function clamp(x: number, min: number, max: number): number {\r\n        return Math.max(min, Math.min(max, x));\r\n    }\r\n\r\n    /**\r\n     * Compute the fractional part of the argument.\r\n     * ```\r\n     * fract(+1.23); // results in +0.23\r\n     * fract(-1.23); // results in -0.23\r\n     * ```\r\n     * @param x - The number to compute the fractional part of.\r\n     * @returns - The fractional part of x. This is calculated as x - floor(x).\r\n     */\r\n    export function fract(x: number): number {\r\n        return x > 0 ? x - Math.floor(x) : x - Math.ceil(x);\r\n    }\r\n\r\n\r\n    /**\r\n     * A vec2 placeholder to overcome the gl-matrix out interface.\r\n     */\r\n    export function v2(): vec2 {\r\n        return vec2.create();\r\n    }\r\n\r\n    /**\r\n     * Constrain a two-component vector to lie between two further two-component vectors.\r\n     * ```\r\n     * let a: vec2 = vec2.fromValues(2, 2);\r\n     * clamp2(a, a, [0, 0], [1, 1]);\r\n     * ```\r\n     * @param out - The receiving vector.\r\n     * @param x - The vector to clamp.\r\n     * @param min - Minimum vector operand.\r\n     * @param max - Maximum vector operand.\r\n     * @returns - Vector constrained to [min,max].\r\n     */\r\n    export function clamp2(out: vec2, x: vec2 | number[], min: vec2 | number[], max: vec2 | number[]): vec2 {\r\n        out[0] = Math.max(min[0], Math.min(max[0], x[0]));\r\n        out[1] = Math.max(min[1], Math.min(max[1], x[1]));\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Derive the absolute values of each of the two vector components.\r\n     * ```\r\n     * let a: vec2 = vec2.fromValues(-2, 2);\r\n     * abs2(a, a); // should result in [2,2]\r\n     * ```\r\n     * @param out - The receiving vector.\r\n     * @param x - The vector to apply abs to.\r\n     * @returns - Vector with each component as absolute value.\r\n     */\r\n    export function abs2(out: vec2, x: vec2): vec2 {\r\n        out[0] = Math.abs(x[0]);\r\n        out[1] = Math.abs(x[1]);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * A vec3 placeholder to overcome the gl-matrix out interface.\r\n     */\r\n    export function v3(): vec3 {\r\n        return vec3.create();\r\n    }\r\n\r\n    /**\r\n     * Constrain a three-component vector to lie between two further three-component vectors.\r\n     * ```\r\n     * let a: vec3 = vec3.fromValues(2, 2, 2);\r\n     * clamp3(a, a, [0, 0, 0], [1, 1, 1]);\r\n     * ```\r\n     * @param out -The receiving vector.\r\n     * @param x - The vector to clamp.\r\n     * @param min - Minimum vector operand.\r\n     * @param max - Maximum vector operand.\r\n     * @returns - Vector constrained to [min,max].\r\n     */\r\n    export function clamp3(out: vec3, x: vec3 | number[], min: vec3 | number[], max: vec3 | number[]): vec3 {\r\n        out[0] = Math.max(min[0], Math.min(max[0], x[0]));\r\n        out[1] = Math.max(min[1], Math.min(max[1], x[1]));\r\n        out[2] = Math.max(min[2], Math.min(max[2], x[2]));\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Derive the absolute values of each of the three vector components.\r\n     * ```\r\n     * let a: vec3 = vec3.fromValues(-2, 2, -1);\r\n     * abs3(a, a); // should result in [2,2,1]\r\n     * ```\r\n     * @param out - The receiving vector.\r\n     * @param x - The vector to apply abs to.\r\n     * @returns  - Vector with each component as absolute value.\r\n     */\r\n    export function abs3(out: vec3, x: vec3): vec3 {\r\n        out[0] = Math.abs(x[0]);\r\n        out[1] = Math.abs(x[1]);\r\n        out[2] = Math.abs(x[2]);\r\n        return out;\r\n    }\r\n\r\n    const one256ths: number = 1.0 / 256.0;\r\n\r\n    /**\r\n     * Encodes a 24bit floating point in [0,1] into three 8bit components (vec3 of uint8).\r\n     * @param out - The vector to encode into.\r\n     * @param x - 24bit floating point number to encode.\r\n     * @returns - Vector with the float encoded.\r\n     */\r\n    export function encode_float24x1_to_uint8x3(out: vec3, x: number): vec3 {\r\n        out[0] = Math.floor(x * 256.0);\r\n        out[1] = Math.floor(fract(x * 256.0) * 256.0);\r\n        out[2] = Math.floor(fract(x * 65536.0) * 256.0);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Decodes three 8bit components of a vec3 to a 24bit floating point number.\r\n     * @param x - Vector with three 8bit unsigned int components (uint8x3).\r\n     * @returns - Encoded 24bit floating point number.\r\n     */\r\n    export function decode_float24x1_from_uint8x3(x: vec3): number {\r\n        return (x[0] + (x[1] + x[2] * one256ths) * one256ths) * one256ths;\r\n    }\r\n\r\n    /**\r\n     * Packs a 24bit unsigned int into a three component byte vector.\r\n     * ```\r\n     * let uint8x3: vec3 = vec3.create();\r\n     * encode_uint24_in_rgb8(uint8x3, 250285); // should result in [ 173, 209, 3 ]\r\n     * ```\r\n     * @param out - byte (uint8) vector with packed uint24 data\r\n     * @param x - uint24 number\r\n     * @returns - Three component byte vector with x packed.\r\n     */\r\n    export function encode_uint24_to_rgb8(out: vec3, x: number): vec3 {\r\n        out[0] = (x >>> 0) & 0xFF;\r\n        out[1] = (x >>> 8) & 0xFF;\r\n        out[2] = (x >>> 16) & 0xFF;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Packs a 32bit unsigned int into a four component byte vector.\r\n     * ```\r\n     * let uint8x4: vec3 = vec4.create();\r\n     * encode_uint24_in_rgb8(uint8x4, 250285); // should result in [ 173, 209, 3, 0 ]\r\n     * ```\r\n     * @param out - byte (uint8) vector with packed uint32 data\r\n     * @param x - uint32 number\r\n     * @returns - Three component byte vector with x packed.\r\n     */\r\n    export function encode_uint32_to_rgba8(out: vec4, x: number): vec4 {\r\n        out[0] = (x >>> 0) & 0xFF;\r\n        out[1] = (x >>> 8) & 0xFF;\r\n        out[2] = (x >>> 16) & 0xFF;\r\n        out[3] = (x >>> 24) & 0xFF;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Unpacks a 24bit unsigned int from a three component byte vector.\r\n     * ```\r\n     * let uint8x3: vec3 = vec3.fromValues(173, 209, 3);\r\n     * decode_uint24_from_rgb8(uint8x3); // should return 250285\r\n     * ```\r\n     * @param x - byte (uint8) vector with packed uint24 data\r\n     * @returns - Unpacked 24bit unsigned int.\r\n     */\r\n    export function decode_uint24_from_rgb8(x: vec3): number {\r\n        return x[0] + (x[1] << 8) + (x[2] << 16);\r\n    }\r\n\r\n    /**\r\n     * Unpacks a 32bit unsigned int from a four component byte vector.\r\n     * ```\r\n     * let uint8x4: vec4 = vec4.fromValues(173, 209, 3, 23);\r\n     * decode_uint24_from_rgba8(uint8x4); // should return xxx\r\n     * ```\r\n     * @param x - byte (uint8) vector with packed uint32 data\r\n     * @returns - Unpacked 32bit unsigned int.\r\n     */\r\n    export function decode_uint32_from_rgba8(x: vec4): number {\r\n        return x[0] + (x[1] << 8) + (x[2] << 16) + (x[3] << 24) >>> 0;\r\n    }\r\n\r\n    /**\r\n     * Constructs a vec3 from a vec4 with division by the w component applied. If the w component is zero, division\r\n     * skipped.\r\n     * ```\r\n     * const v4: vec4 = vec4.fromValues(2, 4, 6, 2);\r\n     * const v3: vec3 = fromVec4(v4); // v3 is [1, 2, 3]\r\n     * ```\r\n     * @param x - The vector to be transformed to a vec3.\r\n     * @returns - Three component vector based on x.\r\n     */\r\n    export function fromVec4(x: vec4): vec3 {\r\n        if (x[3] === 0) {\r\n            return vec3.fromValues(x[0], x[1], x[2]);\r\n        }\r\n        return vec3.fromValues(x[0] / x[3], x[1] / x[3], x[2] / x[3]);\r\n    }\r\n\r\n    /**\r\n     * A vec4 placeholder to overcome the gl-matrix out interface.\r\n     */\r\n    export function v4(): vec4 {\r\n        return vec4.create();\r\n    }\r\n\r\n    /**\r\n     * Constrain a four-component vector to lie between two further four-component vectors.\r\n     * ```\r\n     * let a: vec4 = vec4.fromValues(2, 2, 2, 2);\r\n     * clamp4(a, a, [0, 0, 0, 0], [1, 1, 1, 1]);\r\n     * ```\r\n     * @param out - The receiving vector.\r\n     * @param x - The vector to clamp.\r\n     * @param min - Minimum vector operand.\r\n     * @param max - Maximum vector operand.\r\n     * @returns - Vector constrained to [min,max].\r\n     */\r\n    export function clamp4(out: vec4, x: vec4 | number[], min: vec4 | number[], max: vec4 | number[]): vec4 {\r\n        out[0] = Math.max(min[0], Math.min(max[0], x[0]));\r\n        out[1] = Math.max(min[1], Math.min(max[1], x[1]));\r\n        out[2] = Math.max(min[2], Math.min(max[2], x[2]));\r\n        out[3] = Math.max(min[3], Math.min(max[3], x[3]));\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Derive the absolute values of each of the four vector components.\r\n     * ```\r\n     * let a: vec4 = vec4.fromValues(-2, 2, -1, 1);\r\n     * abs4(a, a); // should result in [2,2,1,1]\r\n     * ```\r\n     * @param out - The receiving vector.\r\n     * @param x - The vector to apply abs to.\r\n     * @returns - Vector with each component as absolute value.\r\n     */\r\n    export function abs4(out: vec4, x: vec4): vec4 {\r\n        out[0] = Math.abs(x[0]);\r\n        out[1] = Math.abs(x[1]);\r\n        out[2] = Math.abs(x[2]);\r\n        out[3] = Math.abs(x[3]);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Constructs a vec4 from a vec3 by appending 1.0 as the w component.\r\n     * ```\r\n     * const v3: vec3 = vec3.fromValues(2, 4, 6);\r\n     * const v4: vec4 = fromVec3(v3); // v3 is [2, 4, 6, 1]\r\n     * ```\r\n     * @param x - The vector to be transformed to a vec4.\r\n     * @returns - Four component vector based on x.\r\n     */\r\n    export function fromVec3(x: vec3): vec4 {\r\n        return vec4.fromValues(x[0], x[1], x[2], 1.0);\r\n    }\r\n\r\n\r\n    /**\r\n     * Parses a vec2 from a string.\r\n     * @param v2str - String in the format '<number>, <number>', e.g., '1.0, 0.0'.\r\n     * @returns - Vec2 if string was parsed successfully, undefined else.\r\n     */\r\n    export function parseVec2(v2str: string | undefined): vec2 | undefined {\r\n        if (v2str === undefined || v2str === '') {\r\n            return undefined;\r\n        }\r\n        let numbers = [];\r\n        try {\r\n            numbers = JSON.parse(`[${v2str}]`);\r\n        } catch (error) {\r\n            return undefined;\r\n        }\r\n        return numbers.length !== 2 || isNaN(numbers[0]) || isNaN(numbers[1]) ?\r\n            undefined : vec2.clone(numbers);\r\n    }\r\n\r\n    /**\r\n     * Parses a vec3 from a string.\r\n     * @param v3str - String in the format '<number>, <number>, <number>', e.g., '1.0, 0.0, 1.0'.\r\n     * @returns - Vec3 if string was parsed successfully, undefined else.\r\n     */\r\n    export function parseVec3(v3str: string | undefined): vec3 | undefined {\r\n        if (v3str === undefined || v3str === '') {\r\n            return undefined;\r\n        }\r\n        let numbers = [];\r\n        try {\r\n            numbers = JSON.parse(`[${v3str}]`);\r\n        } catch (error) {\r\n            return undefined;\r\n        }\r\n        return numbers.length !== 3 || isNaN(numbers[0]) || isNaN(numbers[1]) || isNaN(numbers[2]) ?\r\n            undefined : vec3.clone(numbers);\r\n    }\r\n\r\n    /**\r\n     * Parses a vec4 from a string.\r\n     * @param v4str - String in the format '<number>, <number>, <number>, <number>', e.g., '1.0, 0.0, 0.0, 0.0'.\r\n     * @returns - Vec4 if string was parsed successfully, undefined else.\r\n     */\r\n    export function parseVec4(v4str: string | undefined): vec4 | undefined {\r\n        if (v4str === undefined || v4str === '') {\r\n            return undefined;\r\n        }\r\n        let numbers = [];\r\n        try {\r\n            numbers = JSON.parse(`[${v4str}]`);\r\n        } catch (error) {\r\n            return undefined;\r\n        }\r\n        return numbers.length !== 4 || isNaN(numbers[0]) || isNaN(numbers[1]) ||\r\n            isNaN(numbers[2]) || isNaN(numbers[3]) ?\r\n            undefined : vec4.clone(numbers);\r\n    }\r\n\r\n\r\n    /**\r\n     * Performs a mix as specified in GLSL.\r\n     * @param value1 - The first value.\r\n     * @param value2 - The second value.\r\n     * @param interpolation - The interpolation value (usually between 0 and 1).\r\n     * @returns - The interpolated value between value1 and value2.\r\n     */\r\n    export function mix(value1: number, value2: number, interpolation: number): number {\r\n        return value1 * (1.0 - interpolation) + value2 * interpolation;\r\n    }\r\n\r\n\r\n    /**\r\n     * A mat2 placeholder to overcome the gl-matrix out interface.\r\n     */\r\n    export function m2(): mat2 {\r\n        return mat2.create();\r\n    }\r\n    /**\r\n     * A mat3 placeholder to overcome the gl-matrix out interface.\r\n     */\r\n    export function m3(): mat3 {\r\n        return mat3.create();\r\n    }\r\n\r\n    /**\r\n     * A mat4 placeholder to overcome the gl-matrix out interface.\r\n     */\r\n    export function m4(): mat4 {\r\n        return mat4.create();\r\n    }\r\n\r\n}\r\n\r\nexport = gl_matrix_extensions;\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { assert, logIf, LogLevel } from './auxiliaries';\r\n\r\nimport { Context } from './context';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\nexport type TexImage2DData = GLintptr | HTMLImageElement | HTMLCanvasElement | HTMLVideoElement |\r\n    ImageBitmap | ImageData | ArrayBufferView | undefined;\r\n\r\nexport type TexImage3DData = GLintptr | HTMLImageElement | HTMLCanvasElement | HTMLVideoElement |\r\n    ImageBitmap | ImageData | ArrayBufferView | undefined;\r\n\r\n/**\r\n * A WebGL 2 facade, simplifying the access to gl functions that are either not available, exposed via extension or\r\n * supported directly, e.g., in webgl2. All gl features/interfaces handled by this facade are mandatory.\r\n */\r\nexport class GL2Facade {\r\n\r\n    /**\r\n     * @param context - Wrapped gl context for function resolution.\r\n     */\r\n    constructor(context: Context) {\r\n        assert(context !== undefined, `gl2 facade expects a valid WebGL context`);\r\n\r\n        this.queryHalfFloatSupport(context);\r\n        this.queryColorAttachments(context);\r\n        this.queryInstancedArraySupport(context);\r\n        this.queryDrawBuffersSupport(context);\r\n        this.queryVertexArrayObjectSupport(context);\r\n        this.queryMaxUniformVec3Components(context);\r\n        this.queryBufferSubDataInterface(context);\r\n        this.queryTexImageInterface(context);\r\n    }\r\n\r\n\r\n    // HALF FLOAT\r\n\r\n    /**\r\n     * Stores the HALF_FLOAT enum if supported. @see {@link HALF_FLOAT}\r\n     */\r\n    protected _halfFloat: GLenum;\r\n\r\n    /**\r\n     * The HALF_FLOAT format enum. Is `undefined` if not supported.\r\n     */\r\n    get HALF_FLOAT(): GLenum {\r\n        return this._halfFloat;\r\n    }\r\n\r\n    /**\r\n     *  For WebGL1 the HALF_FLOAT enum needs to be saved via the extension object.\r\n     */\r\n    protected queryHalfFloatSupport(context: Context): void {\r\n        switch (context.backend) {\r\n            case Context.BackendType.WebGL1:\r\n                this._halfFloat = context.supportsTextureHalfFloat && context.textureHalfFloat ?\r\n                    context.textureHalfFloat.HALF_FLOAT_OES : undefined;\r\n                break;\r\n\r\n            case Context.BackendType.WebGL2:\r\n            /* falls through */\r\n            default:\r\n                this._halfFloat = context.gl.HALF_FLOAT;\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    // COLOR ATTACHMENTS\r\n\r\n    /**\r\n     * Stores the lowest color attachment identifier.\r\n     */\r\n    protected _colorAttachmentMin: GLenum;\r\n    /**\r\n     * The lowest color attachment identifier format enum.\r\n     */\r\n    get COLOR_ATTACHMENT_MIN(): GLenum {\r\n        return this._colorAttachmentMin;\r\n    }\r\n\r\n    /**\r\n     * Stores the highest supported color attachment identifier.\r\n     */\r\n    protected _colorAttachmentMax: GLenum;\r\n\r\n    /**\r\n     * Stores all context/backend sepcific color attachment identifier for COLOR_ATTACHMENT# getter.\r\n     */\r\n    protected _colorAttachments: Array<GLenum>;\r\n\r\n    /**\r\n     * The lowest color attachment identifier format enum.\r\n     * Is at least `COLOR_ATTACHMENT_MIN`.\r\n     */\r\n    get COLOR_ATTACHMENT_MAX(): GLenum {\r\n        return this._colorAttachmentMax;\r\n    }\r\n\r\n    get COLOR_ATTACHMENT0(): GLenum {\r\n        return this._colorAttachments[0];\r\n    }\r\n    get COLOR_ATTACHMENT1(): GLenum {\r\n        return this._colorAttachments[1];\r\n    }\r\n    get COLOR_ATTACHMENT2(): GLenum {\r\n        return this._colorAttachments[2];\r\n    }\r\n    get COLOR_ATTACHMENT3(): GLenum {\r\n        return this._colorAttachments[3];\r\n    }\r\n    get COLOR_ATTACHMENT4(): GLenum {\r\n        return this._colorAttachments[4];\r\n    }\r\n    get COLOR_ATTACHMENT5(): GLenum {\r\n        return this._colorAttachments[5];\r\n    }\r\n    get COLOR_ATTACHMENT6(): GLenum {\r\n        return this._colorAttachments[6];\r\n    }\r\n    get COLOR_ATTACHMENT7(): GLenum {\r\n        return this._colorAttachments[7];\r\n    }\r\n    get COLOR_ATTACHMENT8(): GLenum {\r\n        return this._colorAttachments[8];\r\n    }\r\n    get COLOR_ATTACHMENT9(): GLenum {\r\n        return this._colorAttachments[9];\r\n    }\r\n    get COLOR_ATTACHMENT10(): GLenum {\r\n        return this._colorAttachments[10];\r\n    }\r\n    get COLOR_ATTACHMENT11(): GLenum {\r\n        return this._colorAttachments[11];\r\n    }\r\n    get COLOR_ATTACHMENT12(): GLenum {\r\n        return this._colorAttachments[12];\r\n    }\r\n    get COLOR_ATTACHMENT13(): GLenum {\r\n        return this._colorAttachments[13];\r\n    }\r\n    get COLOR_ATTACHMENT14(): GLenum {\r\n        return this._colorAttachments[14];\r\n    }\r\n    get COLOR_ATTACHMENT15(): GLenum {\r\n        return this._colorAttachments[15];\r\n    }\r\n\r\n    /**\r\n     * Queries the valid range of color attachments and provides an interface for convenience.\r\n     */\r\n    protected queryColorAttachments(context: Context): void {\r\n        const gl = context.gl;\r\n\r\n        this._colorAttachments = new Array<GLenum>(16);\r\n        this._colorAttachments[0] = gl.COLOR_ATTACHMENT0;\r\n\r\n        /**\r\n         * In WebGL, draw buffers is supported by extension, in WebGL2 by default.\r\n         * This maps the various default color attachment identifier to a unified interface.\r\n         */\r\n        switch (context.backend) {\r\n            case Context.BackendType.WebGL1:\r\n                const drawBuffers = context.supportsDrawBuffers ? context.drawBuffers : undefined;\r\n\r\n                this._colorAttachmentMin = this._colorAttachments[0];\r\n                this._colorAttachmentMax = this._colorAttachmentMin + (drawBuffers ?\r\n                    gl.getParameter(drawBuffers.MAX_COLOR_ATTACHMENTS_WEBGL) : 0) as GLenum;\r\n\r\n                this._colorAttachments[0] = drawBuffers ? drawBuffers.COLOR_ATTACHMENT0_WEBGL : gl.COLOR_ATTACHMENT0;\r\n                if (!drawBuffers) {\r\n                    break;\r\n                }\r\n                for (let i = 1; i < 16; ++i) {\r\n                    // Enums are assumed to be incremental in their definition ...\r\n                    this._colorAttachments[i] = drawBuffers.COLOR_ATTACHMENT0_WEBGL + i;\r\n                }\r\n                break;\r\n\r\n            case Context.BackendType.WebGL2:\r\n            /* falls through */\r\n            default:\r\n                this._colorAttachmentMin = context.gl.COLOR_ATTACHMENT0;\r\n                this._colorAttachmentMax = context.gl.COLOR_ATTACHMENT0\r\n                    + gl.getParameter(gl.MAX_COLOR_ATTACHMENTS) as GLenum;\r\n\r\n                for (let i = 0; i < 16; ++i) {\r\n                    // Enums are assumed to be incremental in their definition ...\r\n                    this._colorAttachments[i] = gl.COLOR_ATTACHMENT0 + i;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    // INSTANCED ARRAYS\r\n\r\n    /**\r\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/ANGLE_instanced_arrays/drawArraysInstancedANGLE\r\n     */\r\n    drawArraysInstanced: (mode: GLenum, first: GLint, count: GLsizei, instanceCount: GLsizei) => void;\r\n    /**\r\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/ANGLE_instanced_arrays/drawElementsInstancedANGLE\r\n     */\r\n    drawElementsInstanced: (mode: GLenum, count: GLint, type: GLsizei, offset: GLintptr, primcount: GLsizei) => void;\r\n    /**\r\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/ANGLE_instanced_arrays/vertexAttribDivisorANGLE\r\n     */\r\n    vertexAttribDivisor: (index: GLuint, divisor: GLuint) => void;\r\n\r\n    /**\r\n     * Evaluate whether or not ANGLE_instanced_arrays is supported (either by extension or in WebGL2 by default) and, if\r\n     * supported, binds the associated functions.\r\n     * @param context - WebGL context to query extension support in\r\n     */\r\n    protected queryInstancedArraySupport(context: Context): void {\r\n        if (!context.isWebGL2 && !context.supportsInstancedArrays) {\r\n            return;\r\n        }\r\n\r\n        this.drawArraysInstanced = context.isWebGL2 ?\r\n            (mode: GLenum, first: GLint, count: GLsizei, instanceCount: GLsizei) =>\r\n                context.gl.drawArraysInstanced(mode, first, count, instanceCount) :\r\n            (mode: GLenum, first: GLint, count: GLsizei, instanceCount: GLsizei) =>\r\n                context.instancedArrays.drawArraysInstancedANGLE(mode, first, count, instanceCount);\r\n\r\n        this.drawElementsInstanced = context.isWebGL2 ?\r\n            (mode: GLenum, count: GLint, type: GLsizei, offset: GLintptr, primcount: GLsizei) =>\r\n                context.gl.drawElementsInstanced(mode, count, type, offset, primcount) :\r\n            (mode: GLenum, count: GLint, type: GLsizei, offset: GLintptr, primcount: GLsizei) =>\r\n                context.instancedArrays.drawElementsInstancedANGLE(mode, count, type, offset, primcount);\r\n\r\n        this.vertexAttribDivisor = context.isWebGL2 ?\r\n            (index: GLuint, divisor: GLuint) => context.gl.vertexAttribDivisor(index, divisor) :\r\n            (index: GLuint, divisor: GLuint) => context.instancedArrays.vertexAttribDivisorANGLE(index, divisor);\r\n    }\r\n\r\n\r\n    // DRAW BUFFERS\r\n\r\n    /**\r\n     * Stores the MAX_DRAW_BUFFERS enum if supported. @see {@link MAX_DRAW_BUFFERS}\r\n     */\r\n    protected _maxDrawBuffers: GLenum;\r\n\r\n    /**\r\n     * The MAX_DRAW_BUFFERS format enum. Is `undefined` if not supported.\r\n     */\r\n    get MAX_DRAW_BUFFERS(): GLenum {\r\n        return this._maxDrawBuffers;\r\n    }\r\n\r\n\r\n    /**\r\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_draw_buffers/drawBuffersWEBGL\r\n     */\r\n    drawBuffers: ((buffers: Array<GLenum>) => void) | undefined = undefined;\r\n\r\n    /**\r\n     * Evaluate whether or not WEBGL_draw_buffers is supported (either by extension or in WebGL2 by default) and, if\r\n     * supported, binds the associated functions.\r\n     * @param context - WebGL context to query extension support in.\r\n     */\r\n    protected queryDrawBuffersSupport(context: Context): void {\r\n        if (!context.isWebGL2 && !context.supportsDrawBuffers) {\r\n            return;\r\n        }\r\n\r\n        this.drawBuffers = context.isWebGL2 ?\r\n            (buffers: Array<GLenum>) => context.gl.drawBuffers(buffers) :\r\n            (buffers: Array<GLenum>) => context.drawBuffers.drawBuffersWEBGL(buffers);\r\n\r\n        this._maxDrawBuffers = context.isWebGL2 ?\r\n            context.gl.MAX_DRAW_BUFFERS :\r\n            context.drawBuffers.MAX_DRAW_BUFFERS_WEBGL;\r\n    }\r\n\r\n\r\n    // VERTEX ARRAY\r\n\r\n    /**\r\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/createVertexArray\r\n     */\r\n    createVertexArray: () => any /* WebGLVertexArrayObject */;\r\n\r\n    /**\r\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/createVertexArray\r\n     */\r\n    deleteVertexArray: (arrayObject: any /* WebGLVertexArrayObject */) => void;\r\n\r\n    /**\r\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/isVertexArray\r\n     */\r\n    isVertexArray: (arrayObject: any /* WebGLVertexArrayObject */) => GLboolean;\r\n\r\n    /**\r\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/bindVertexArray\r\n     */\r\n    bindVertexArray: (arrayObject: any /* WebGLVertexArrayObject */) => void;\r\n\r\n    protected queryVertexArrayObjectSupport(context: Context): void {\r\n        if (!context.isWebGL2 && !context.supportsVertexArrayObject) {\r\n            return;\r\n        }\r\n\r\n        this.createVertexArray = context.isWebGL2 ?\r\n            () => context.gl.createVertexArray() :\r\n            () => context.vertexArrayObject.createVertexArrayOES();\r\n\r\n        this.deleteVertexArray = context.isWebGL2 ?\r\n            (arrayObject: any) => context.gl.deleteVertexArray(arrayObject) :\r\n            (arrayObject: any) => context.vertexArrayObject.deleteVertexArrayOES(arrayObject);\r\n\r\n        this.isVertexArray = context.isWebGL2 ?\r\n            (arrayObject: any) => context.gl.isVertexArray(arrayObject) :\r\n            (arrayObject: any) => context.vertexArrayObject.isVertexArrayOES(arrayObject);\r\n\r\n        this.bindVertexArray = context.isWebGL2 ?\r\n            (arrayObject: any) => context.gl.bindVertexArray(arrayObject) :\r\n            (arrayObject: any) => context.vertexArrayObject.bindVertexArrayOES(arrayObject);\r\n    }\r\n\r\n\r\n    // MAX UNIFORM COMPONENTS\r\n\r\n    /** @see {@link maxUniformVec3Components} */\r\n    protected _maxUniformVec3Components: GLint | undefined;\r\n    /**\r\n     * The maximum number of floats, integers, or booleans that can be in storage for a vertex shader.\r\n     */\r\n    get maxUniformVec3Components(): GLint | undefined {\r\n        return this._maxUniformVec3Components;\r\n    }\r\n\r\n    /**\r\n     * Query and store the maximum number of floats, integers, or booleans that can be in storage for a vertex shader.\r\n     * @param context - WebGL context to query the value in.\r\n     */\r\n    protected queryMaxUniformVec3Components(context: Context): void {\r\n        const gl = context.gl;\r\n\r\n        this._maxUniformVec3Components = context.isWebGL2\r\n            ? gl.getParameter(gl.MAX_VERTEX_UNIFORM_COMPONENTS)\r\n            : gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS) * 3;\r\n    }\r\n\r\n\r\n    // BUFFER INTERFACE\r\n\r\n    /**\r\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferSubData\r\n     */\r\n    bufferSubData: (target: GLenum, dstByteOffset: GLintptr,\r\n        srcData: ArrayBufferView | ArrayBuffer, srcOffset: GLuint, length: GLuint) => void;\r\n\r\n    protected queryBufferSubDataInterface(context: Context): void {\r\n        const gl = context.gl;\r\n\r\n        if (context.isWebGL2) {\r\n            this.bufferSubData = (target: GLenum, dstByteOffset: GLintptr,\r\n                srcData: ArrayBufferView | ArrayBuffer, srcOffset: GLuint, length: GLuint = 0) => {\r\n\r\n                return gl.bufferSubData(target, dstByteOffset, srcData, srcOffset, length);\r\n            };\r\n        } else {\r\n            this.bufferSubData = (target: GLenum, dstByteOffset: GLintptr,\r\n                srcData: ArrayBufferView | ArrayBuffer, srcOffset: GLuint = 0, length: GLuint = 0) => {\r\n\r\n                logIf(srcOffset !== 0, LogLevel.Warning, `srcOffset ignored (not supported in WebGL)`);\r\n                logIf(length !== 0, LogLevel.Warning, `length ignored (not supported in WebGL)`);\r\n                return gl.bufferSubData(target, dstByteOffset, srcData);\r\n            };\r\n        }\r\n    }\r\n\r\n    // TEX IMAGE INTERFACE\r\n\r\n    /**\r\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texImage2D\r\n     */\r\n    texImage2D: (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei,\r\n        border: GLint, format: GLenum, type: GLenum, source?: TexImage2DData, offset?: GLintptr) => void;\r\n\r\n    /**\r\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/texImage3D\r\n     */\r\n    texImage3D: (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei,\r\n        border: GLint, format: GLenum, type: GLenum, source?: TexImage3DData, offset?: GLintptr) => void;\r\n\r\n    protected queryTexImageInterface(context: Context): void {\r\n        const gl = context.gl;\r\n\r\n        if (context.isWebGL2) {\r\n            this.texImage2D = (target: GLenum, level: GLint, internalformat: GLenum,\r\n                width: GLsizei, height: GLsizei, border: GLint,\r\n                format: GLenum, type: GLenum, source?: TexImage2DData, offset?: GLintptr) => {\r\n                /* Please note that source must be 'null', not '0' nor 'undefined' for ie and edge to work. */\r\n                if (source instanceof ArrayBuffer) {\r\n                    return gl.texImage2D(target, level, internalformat, width, height, border\r\n                        , format, type, source === undefined ? null : source, offset);\r\n                }\r\n                assert(offset === undefined, `offset expected to be undefined for non ArrayBuffer source`);\r\n                return gl.texImage2D(target, level, internalformat, width, height, border\r\n                    , format, type, source === undefined ? null : source);\r\n            };\r\n\r\n        } else {\r\n            this.texImage2D = (target: GLenum, level: GLint, internalformat: GLenum,\r\n                width: GLsizei, height: GLsizei, border: GLint,\r\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n                format: GLenum, type: GLenum, source?: TexImage2DData, offset?: GLintptr) => {\r\n\r\n                if (source === undefined) {\r\n                    return gl.texImage2D(target, level, internalformat, width, height, border, format, type, null);\r\n                }\r\n                if (source instanceof Int8Array ||\r\n                    source instanceof Uint8Array ||\r\n                    source instanceof Uint8ClampedArray ||\r\n                    source instanceof Int16Array ||\r\n                    source instanceof Uint16Array ||\r\n                    source instanceof Int32Array ||\r\n                    source instanceof Uint32Array ||\r\n                    source instanceof Float32Array ||\r\n                    source instanceof Float64Array ||\r\n                    source instanceof DataView) {\r\n                    return gl.texImage2D(target, level, internalformat, width, height, border, format, type, source);\r\n                }\r\n                return gl.texImage2D(target, level, internalformat, format, type, source);\r\n            };\r\n        }\r\n\r\n        if (context.supportsTexImage3D) {\r\n            this.texImage3D = (target: GLenum, level: GLint, internalformat: GLenum,\r\n                width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint,\r\n                format: GLenum, type: GLenum, source?: TexImage3DData, offset?: GLintptr) => {\r\n                /* Please note that source must be 'null', not '0' nor 'undefined' for ie and edge to work. */\r\n                if (source instanceof ArrayBuffer) {\r\n                    return gl.texImage3D(target, level, internalformat, width, height, depth, border\r\n                        , format, type, source === undefined ? null : source, offset);\r\n                }\r\n                assert(offset === undefined, `offset expected to be undefined for non ArrayBuffer source`);\r\n                return gl.texImage3D(target, level, internalformat, width, height, depth, border\r\n                    , format, type, source === undefined ? null : source);\r\n            };\r\n        } else {\r\n            /* eslint-disable @typescript-eslint/no-unused-vars */\r\n            this.texImage3D = (target: GLenum, level: GLint, internalformat: GLenum,\r\n                width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint,\r\n                format: GLenum, type: GLenum, source?: TexImage3DData, offset?: GLintptr) =>\r\n                assert(false, 'texImage3D not supported on this context');\r\n            /* eslint-enable @typescript-eslint/no-unused-vars */\r\n        }\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { assert } from './auxiliaries';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\ninterface MethodDecorator { (target: any, propertyKey: string, descriptor: PropertyDescriptor): PropertyDescriptor; }\r\n\r\n\r\n/**\r\n * Mixin that incorporates basic (un-)initialization workflow. The inheritor should specialize initialize and\r\n * uninitialize and decorate them with @initialize and @uninitialize respectively. When the object gets constructed it\r\n * is not initialized. It can be initialized only when it is not initialized and uninitialized vice versa. Failure\r\n * states result in invalid asserts.\r\n * The initialization status within the inheritor can be asserted using assertInitialized and assertUninitialized.\r\n * Note that the use of this class requires decorator support (compilerOptions: experimentalDecorators: true).\r\n * ```\r\n * class Test extends Initializable {\r\n *\r\n *     @initialize()\r\n *     initialize(name: string): boolean {\r\n *         ....\r\n *         return true;\r\n *     }\r\n *\r\n *     @uninitialize()\r\n *     uninitialize(): void {\r\n *         ...\r\n *     }\r\n *\r\n *     doStuffWhenInitialized(): void {\r\n *         this.assertInitialized();\r\n *         ...\r\n *     }\r\n *     // ... or alternatively:\r\n *     @assert_initialized()\r\n *     doOtherStuffWhenInitialized(): void {\r\n *         ...\r\n *     }\r\n * ```\r\n */\r\nexport abstract class Initializable {\r\n\r\n    /** @see {@link initialized} */\r\n    private _initialized = false;\r\n\r\n\r\n    protected static readonly assertInitializedFalse = (object: Initializable) =>\r\n        /* tslint:disable-next-line:semicolon */\r\n        assert(false, `instance of ${object.constructor.name} expected to be initialized`);\r\n    protected static readonly assertUninitializedFalse = (object: Initializable) =>\r\n        /* tslint:disable-next-line:semicolon */\r\n        assert(false, `instance of ${object.constructor.name} not expected to be initialized`);\r\n\r\n    /**\r\n     * Method decorator for initialization of Initializable inheritors. This decorator asserts the initialization status\r\n     * of the instance that is to be initialized, invokes its initialization with arbitrary number of parameters,\r\n     * and sets the initialization status to the initialization success (either false or true).\r\n     * In order to encourage the use of `assertInitialized` and `assertUninitialized` they are dynamically\r\n     * bound to either a static, always-failing assert or an empty/undefined function.\r\n     */\r\n    static initialize(): MethodDecorator {\r\n        return (target: any, propertyKey: string, descriptor: PropertyDescriptor): PropertyDescriptor => {\r\n\r\n            const initialize = descriptor.value;\r\n            /* tslint:disable-next-line:space-before-function-paren only-arrow-functions */\r\n            descriptor.value = function (): boolean {\r\n                assert(this._initialized === false, `re-initialization of initialized object not anticipated`);\r\n\r\n                /* Call actual initialization and set initialization status. */\r\n                // eslint-disable-next-line prefer-rest-params\r\n                this._initialized = initialize.apply(this, arguments);\r\n\r\n                /* Assign assert functions for better performance when initialized. */\r\n                if (this._initialized) {\r\n                    this.assertInitialized = () => undefined;\r\n                    this.assertUninitialized = () => Initializable.assertUninitializedFalse(this);\r\n                } else {\r\n                    this.assertUninitialized = () => undefined;\r\n                    this.assertInitialized = () => Initializable.assertInitializedFalse(this);\r\n                }\r\n                return this._initialized;\r\n            };\r\n            return descriptor;\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Method decorator for uninitialization of Initializable inheritors. This decorator asserts the initialization\r\n     * status of the instance that is to be uninitialized, invokes its uninitialization, and falsifies the\r\n     * initialization status. In order to encourage the use of `assertInitialized` and `assertUninitialized` they are\r\n     * dynamically bound to a static, always-failing assert and an empty/undefined function respectively.\r\n     */\r\n    static uninitialize(): MethodDecorator {\r\n        return (target: any, propertyKey: string, descriptor: PropertyDescriptor) => {\r\n\r\n            const uninitialize = descriptor.value;\r\n            /* tslint:disable-next-line:space-before-function-paren only-arrow-functions */\r\n            descriptor.value = function (): void {\r\n                assert(this._initialized === true, `expected object to be initialized in order to uninitialize`);\r\n\r\n                /* call actual uninitialization */\r\n                uninitialize.apply(this);\r\n                this._initialized = false;\r\n\r\n                /* assign assert functions for better performance when uninitialized */\r\n                this.assertUninitialized = () => undefined;\r\n                this.assertInitialized = () => Initializable.assertInitializedFalse(this);\r\n            };\r\n            return descriptor;\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Method decorator for discarding of Initializable inheritors. This decorator asserts the initialization\r\n     * status of the instance that is to be discarded, invokes its uninitialization, and falsifies the\r\n     * initialization status. In order to encourage the use of `assertInitialized` and `assertUninitialized` they are\r\n     * dynamically bound to a static, always-failing assert and an empty/undefined function respectively.\r\n     */\r\n    static discard(): MethodDecorator {\r\n        return (target: any, propertyKey: string, descriptor: PropertyDescriptor) => {\r\n\r\n            const discard = descriptor.value;\r\n            /* tslint:disable-next-line:space-before-function-paren only-arrow-functions */\r\n            descriptor.value = function (): void {\r\n                assert(this._initialized === true, `expected object to be initialized in order to uninitialize`);\r\n\r\n                /* call actual uninitialization */\r\n                discard.apply(this);\r\n                this._initialized = false;\r\n\r\n                /* assign assert functions for better performance when uninitialized */\r\n                this.assertUninitialized = () => undefined;\r\n                this.assertInitialized = () => Initializable.assertInitializedFalse(this);\r\n            };\r\n            return descriptor;\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Method decorator for asserting the initialization status of an initializable to be true.\r\n     * @see {@link assertInitialized}\r\n     */\r\n    static assert_initialized(): MethodDecorator {\r\n        return (target: any, propertyKey: string, descriptor: PropertyDescriptor) => {\r\n\r\n            const initialize = descriptor.value;\r\n            /* tslint:disable-next-line:space-before-function-paren only-arrow-functions */\r\n            descriptor.value = function (): any {\r\n                this.assertInitialized();\r\n                /* call actual initialization and set initialization status */\r\n                // eslint-disable-next-line prefer-rest-params\r\n                return initialize.apply(this, arguments);\r\n            };\r\n            return descriptor;\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Method decorator for asserting the initialization status of an initializable to be false.\r\n     * @see {@link assertUninitialized}\r\n     */\r\n    static assert_uninitialized(): MethodDecorator {\r\n        return (target: any, propertyKey: string, descriptor: PropertyDescriptor) => {\r\n\r\n            const initialize = descriptor.value;\r\n            /* tslint:disable-next-line:space-before-function-paren only-arrow-functions */\r\n            descriptor.value = function (): void {\r\n                this.assertUninitialized();\r\n                /* Call actual initialization and set initialization status. */\r\n                // eslint-disable-next-line prefer-rest-params\r\n                initialize.apply(this, arguments);\r\n            };\r\n            return descriptor;\r\n        };\r\n    }\r\n\r\n\r\n    /**\r\n     * Asserts the objects initialization status to be true. Note that the implementation is cached and forwarded to\r\n     * either an empty function when initialized and to an acutal assert(false) otherwise.\r\n     */\r\n    protected assertInitialized: () => void = () => Initializable.assertInitializedFalse(this);\r\n\r\n    /**\r\n     * Asserts the objects initialization status to be false. Note that the implementation is cached and forwarded to\r\n     * either an empty function when uninitialized and to an acutal assert(false) otherwise.\r\n     */\r\n    protected assertUninitialized: () => void = () => undefined;\r\n\r\n    /**\r\n     * Should implement actual initialization and has to be decorated by @initialize in order to assert initialization\r\n     * status and update the initialization status (based on return value).\r\n     * @param args - All args are passed to the onInitialize function a subclass must override.\r\n     * @returns - True if initialization was successful.\r\n     */\r\n    abstract initialize(...args: Array<any>): boolean;\r\n\r\n    /**\r\n     * Uninitialization event that should be specialized by inheritor and has to be decorated by @uninitialize in order\r\n     * to assert initialization status and set the initialization status to false.\r\n     */\r\n    abstract uninitialize(): void;\r\n\r\n    /**\r\n     * Property getter for readonly access to the initialization status of an initializable instance.\r\n     */\r\n    get initialized(): boolean {\r\n        return this._initialized;\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { assert } from './auxiliaries';\r\n\r\nimport { GLsizei3 } from './tuples';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\nexport interface KernelJSON {\r\n    kernel: any;\r\n    size: {\r\n        width: number,\r\n        height: number,\r\n        depth: number,\r\n    };\r\n}\r\n\r\n\r\n/**\r\n * Kernel class is based on the idea of glkernel {@link https://github.com/cginternals/glkernel} and is the basis for\r\n * various auxiliary kernels that are mainly intended for but not limited to GPU use. A kernel stores samples in a\r\n * three-dimensional structure. Each sample can have up to four components (vec4) and is strongly typed, e.g.,\r\n * {@link KernelF32}. The samples can be accessed and modified in various ways and easily passed to the GPU.\r\n */\r\nexport abstract class AbstractKernel<T extends Float32Array | Uint32Array | Int32Array | Uint8Array | Int8Array> {\r\n\r\n    protected _samples: T;\r\n\r\n    /** @see {@link width} */\r\n    protected _width: GLsizei;\r\n\r\n    /** @see {@link height} */\r\n    protected _height: GLsizei;\r\n\r\n    /** @see {@link depth} */\r\n    protected _depth: GLsizei;\r\n\r\n    /** @see {@link components} */\r\n    protected _components: 1 | 2 | 3 | 4;\r\n\r\n\r\n    constructor(components: 1 | 2 | 3 | 4, width: GLsizei, height: GLsizei = 1, depth: GLsizei = 1) {\r\n        this._components = components;\r\n        this._width = isNaN(width) ? 1 : Math.max(1, width);\r\n        this._height = Math.max(1, height);\r\n        this._depth = Math.max(1, depth);\r\n\r\n        this.resize();\r\n    }\r\n\r\n    /**\r\n     * Should resize the samples array w.r.t. to the typed array buffer.\r\n     * The resulting array buffer may be empty.\r\n     */\r\n    protected abstract resize(): void;\r\n\r\n\r\n    /**\r\n     * Returns the n-tuple/n-component element at index within the cached kernel.\r\n     * @param xPosOrIndex - If x is greater than width, this is interpreted as overall kernel index (requires y and z\r\n     * positions to be undefined). Position is clamped to the range [0, width - 1].\r\n     * @param yPos - Position along the y-axis to access the kernel element at (clamped to range [0, height - 1]).\r\n     * @param zPos - Position along the z-axis to access the kernel element at (clamped to range [0, depth  - 1]).\r\n     * @returns - Tuple of all components of the element at the requested index/position.\r\n     */\r\n    get(xPosOrIndex: GLsizei, yPos?: GLsizei, zPos?: GLsizei): number[] {\r\n\r\n        let i: number;\r\n        if (yPos === undefined && zPos === undefined) {\r\n            i = this._components * xPosOrIndex;\r\n        } else {\r\n            i = this.index(xPosOrIndex, yPos, zPos ? zPos : 0);\r\n        }\r\n        assert(i < this.length, `index expected to be in range [0, ${this.length - 1}], given ${i}`);\r\n\r\n        // eslint-disable-next-line default-case\r\n        switch (this._components) {\r\n            case 1:\r\n                return [this._samples[i]];\r\n            case 2:\r\n                return [this._samples[i], this._samples[i + 1]];\r\n            case 3:\r\n                return [this._samples[i], this._samples[i + 1], this._samples[i + 2]];\r\n            case 4:\r\n                return [this._samples[i], this._samples[i + 1], this._samples[i + 2], this._samples[i + 3]];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the n-tuple/n-component sample at index within the cached kernel.\r\n     * @param sample - Values to be set at specified index or position.\r\n     * @param xPosOrIndex - If x is greater than width, this is interpreted as overall kernel index (requires y and z\r\n     * positions to be undefined). Position is clamped to the range [0, width - 1].\r\n     * @param yPos - Position along the y-axis to access the kernel element at (clamped to range [0, height - 1]).\r\n     * @param zPos - Position along the z-axis to access the kernel element at (clamped to range [0, depth  - 1]).\r\n     */\r\n    set(sample: number[], xPosOrIndex: GLsizei, yPos?: GLsizei, zPos?: GLsizei): void {\r\n        assert(sample.length === this._components,\r\n            `number of components expected to be ${this._components}, given ${sample.length}`);\r\n\r\n        let i: number;\r\n        if (yPos === undefined && zPos === undefined) {\r\n            i = this._components * Math.min(this.elements, Math.max(0, xPosOrIndex));\r\n        } else {\r\n            i = this._components * this.index(xPosOrIndex, yPos, zPos ? zPos : 0);\r\n        }\r\n        assert(i < this.length, `index expected to be in range [0, ${this.length - 1}], given ${i}`);\r\n\r\n        // eslint-disable-next-line default-case\r\n        switch (this._components) {\r\n            /* falls through */\r\n            case 4:\r\n                this._samples[i + 3] = sample[3];\r\n            /* falls through */\r\n            case 3:\r\n                this._samples[i + 2] = sample[2];\r\n            /* falls through */\r\n            case 2:\r\n                this._samples[i + 1] = sample[1];\r\n            /* falls through */\r\n            case 1:\r\n                this._samples[i + 0] = sample[0];\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Inheritor is expected to implement this in order to copy and type-convert a flat array.\r\n     * @param samples - Array of all sample components in a flat sequence.\r\n     */\r\n    abstract fromArray(samples: Array<number>): void;\r\n\r\n    /**\r\n     * Fully reconfigures, i.e., resizes and copies samples, the kernel.\r\n     * @param json - JSON object either from file, or set manually. These kernels can be generated using, e.g.,\r\n     * glkernel {@link https://github.com/cginternals/glkernel}.\r\n     */\r\n    fromJSON(json: KernelJSON): void {\r\n\r\n        assert(json.size && json.size.width !== undefined && json.size.height !== undefined &&\r\n            json.size.depth !== undefined, `expected kernel width, height, and depth to be set, given '${json.size}'`);\r\n\r\n        const flatten = (array: Array<number>): Array<number> => array.reduce(\r\n            (a: any, b: any) => a.concat(Array.isArray(b) ? flatten(b) : b), []);\r\n\r\n        this._width = Math.max(1, json.size.width);\r\n        this._height = Math.max(1, json.size.height);\r\n        this._depth = Math.max(1, json.size.depth);\r\n\r\n        const array = flatten(json.kernel);\r\n        this._components = Math.floor(array.length / this.elements) as 1 | 2 | 3 | 4;\r\n\r\n        this.resize();\r\n        this.fromArray(array);\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns the index of an element at a specific position.\r\n     * @param xPos - Position along the x-axis (clamped to range [0, width  - 1]).\r\n     * @param yPos - Position along the y-axis (clamped to range [0, height - 1]).\r\n     * @param zPos - Position along the z-axis (clamped to range [0, depth  - 1]).\r\n     * @returns - The index of the element at the requested position.\r\n     */\r\n    index(xPos: GLsizei, yPos: GLsizei = 0, zPos: GLsizei = 0): GLsizei {\r\n        return this._width * (this._height * Math.min(this._depth, Math.max(0, zPos))\r\n            + Math.min(this._height, Math.max(0, yPos))) + Math.min(this._width, Math.max(0, xPos));\r\n    }\r\n\r\n    /**\r\n     * Returns the position of an element at a specific index.\r\n     * @param index - Index of the requested position (clamped to range [0, size]).\r\n     * @returns - The position of the element at the requested index as 3-tuple [x, y, z].\r\n     */\r\n    position(index: GLsizei): GLsizei3 {\r\n        let clamped = Math.min(this.elements, Math.max(0, index));\r\n        const zPos: GLsizei = Math.floor(clamped / (this._width * this._height));\r\n        clamped -= zPos * this._width * this._height;\r\n        const yPos: GLsizei = Math.floor(clamped / this._width);\r\n        clamped -= yPos * this._width;\r\n        const xPos: GLsizei = clamped;\r\n        return [xPos, yPos, zPos];\r\n    }\r\n\r\n\r\n    /**\r\n     * Sorts all samples based on the given sorting approach, e.g., by length of a sample. In order to sort an array\r\n     * of samples comprising a number of components an sort-auxiliary array is created, sorted, and, finally, mapped to\r\n     * the sample array.\r\n     * @param approach - Sorting approach that is to be used.\r\n     */\r\n    sort(approach: AbstractKernel.SortApproach): void {\r\n        if (this.elements < 2) {\r\n            return;\r\n        }\r\n\r\n        /* Create index structure for sorting (handling the stride). */\r\n        const tuples = Array<[GLsizei, number]>(this.elements);\r\n        for (let i = 0; i < this.elements; ++i) {\r\n            let value = 0.0;\r\n            switch (approach) {\r\n                case AbstractKernel.SortApproach.BySquaredLength:\r\n                default:\r\n                    for (let c = 0; c < this._components; ++c) {\r\n                        const v = this._samples[i * this._components + c];\r\n                        value += v * v;\r\n                    }\r\n                    break;\r\n            }\r\n            tuples[i] = [i, value];\r\n        }\r\n\r\n        /* Invoke the actual sorting approaches. Since the samples are always dense, the index structure can later be\r\n        used directly for restructuring/applying the new order to the samples. */\r\n        switch (approach) {\r\n            case AbstractKernel.SortApproach.BySquaredLength:\r\n            default:\r\n                tuples.sort((a: [number, number], b: [number, number]) => a[1] - b[1]);\r\n                break;\r\n        }\r\n\r\n        /* Apply the new, sorted order/sequences to the samples array. */\r\n        const source = this._samples.slice();\r\n        for (let i = 0; i < tuples.length; ++i) {\r\n            for (let c = 0; c < this._components; ++c) {\r\n                const iSource = tuples[i][0] * this._components + c;\r\n                const iTarget = i * this._components + c;\r\n                this._samples[iTarget] = source[iSource];\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * All elements/samples of the kernel as array buffer.\r\n     */\r\n    get samples(): T {\r\n        return this._samples;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of samples, i.e., the number of elements times the number of components per element.\r\n     */\r\n    get length(): GLsizei {\r\n        return this._width * this._height * this._depth * this._components;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of samples.\r\n     */\r\n    get elements(): GLsizei {\r\n        const elementCount = this._width * this._height * this._depth;\r\n        return isNaN(elementCount) ? 0 : elementCount;\r\n    }\r\n\r\n    /**\r\n     * Number of components per sample, e.g., 2 for 2-tuple samples, 3 for 3-tuple samples, etc.\r\n     */\r\n    get components(): GLsizei {\r\n        return this._components;\r\n    }\r\n\r\n    /**\r\n     * The width of the kernel (x-axis)\r\n     */\r\n    get width(): GLsizei {\r\n        return this._width;\r\n    }\r\n\r\n    /**\r\n     * The height of the kernel (y-axis)\r\n     */\r\n    get height(): GLsizei {\r\n        return this._height;\r\n    }\r\n\r\n    /**\r\n     * The depth of the kernel (z-axis)\r\n     */\r\n    get depth(): GLsizei {\r\n        return this._depth;\r\n    }\r\n\r\n    /**\r\n     * Distance between the indices of two adjacent elements along the x-axis in bytes.\r\n     */\r\n    get xStride(): GLsizei {\r\n        return this.bytesPerComponent * this._components;\r\n    }\r\n\r\n    /**\r\n     * Distance between the indices of two adjacent elements along the y-axis in bytes.\r\n     */\r\n    get yStride(): GLsizei {\r\n        return this.bytesPerComponent * this._components * this._width;\r\n    }\r\n\r\n    /**\r\n     * Distance between the indices of two adjacent elements along the z-axis in bytes.\r\n     */\r\n    get zStride(): GLsizei {\r\n        return this.bytesPerComponent * this._components * this._width * this._depth;\r\n    }\r\n\r\n    /**\r\n     * Length of all samples in bytes.\r\n     */\r\n    get bytesLength(): GLsizei {\r\n        return this.bytesPerComponent * this._components * this._width * this._height * this._depth;\r\n    }\r\n\r\n    /**\r\n     * Size of a sample's component in bytes.\r\n     */\r\n    abstract get bytesPerComponent(): GLsizei;\r\n\r\n}\r\n\r\nexport namespace AbstractKernel {\r\n\r\n    export enum SortApproach {\r\n        BySquaredLength,\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class KernelF32 extends AbstractKernel<Float32Array> {\r\n\r\n    protected resize(): void {\r\n        this._samples = new Float32Array(this.length);\r\n    }\r\n\r\n    /**\r\n     * Copies and converts samples to this kernels typed samples.\r\n     * @param samples - Flat array of all sample values.\r\n     */\r\n    fromArray(samples: Array<number>): void {\r\n        assert(samples.length === this.length, `expected samples length to match this kernel's length`);\r\n        this._samples.set(new Float32Array(samples));\r\n    }\r\n\r\n    get bytesPerComponent(): GLsizei {\r\n        return 4;\r\n    }\r\n}\r\n\r\n\r\nexport class KernelUI32 extends AbstractKernel<Uint32Array> {\r\n\r\n    protected resize(): void {\r\n        this._samples = new Uint32Array(this.length);\r\n    }\r\n\r\n    /**\r\n     * Copies and converts samples to this kernels typed samples.\r\n     * @param samples - Flat array of all sample values.\r\n     */\r\n    fromArray(samples: Array<number>): void {\r\n        assert(samples.length === this.length, `expected samples length to match this kernel's length`);\r\n        this._samples.set(new Uint32Array(samples));\r\n    }\r\n\r\n    get bytesPerComponent(): GLsizei {\r\n        return 4;\r\n    }\r\n}\r\n\r\nexport class KernelI32 extends AbstractKernel<Int32Array> {\r\n\r\n    protected resize(): void {\r\n        this._samples = new Int32Array(this.length);\r\n    }\r\n\r\n    /**\r\n     * Copies and converts samples to this kernels typed samples.\r\n     * @param samples - Flat array of all sample values.\r\n     */\r\n    fromArray(samples: Array<number>): void {\r\n        assert(samples.length === this.length, `expected samples length to match this kernel's length`);\r\n        this._samples.set(new Int32Array(samples));\r\n    }\r\n\r\n    get bytesPerComponent(): GLsizei {\r\n        return 4;\r\n    }\r\n}\r\n\r\n\r\nexport class KernelUI8 extends AbstractKernel<Uint8Array> {\r\n\r\n    protected resize(): void {\r\n        this._samples = new Uint8Array(this.length);\r\n    }\r\n\r\n    /**\r\n     * Copies and converts samples to this kernels typed samples.\r\n     * @param samples - Flat array of all sample values.\r\n     */\r\n    fromArray(samples: Array<number>): void {\r\n        assert(samples.length === this.length, `expected samples length to match this kernel's length`);\r\n        this._samples.set(new Uint8Array(samples));\r\n    }\r\n\r\n    get bytesPerComponent(): GLsizei {\r\n        return 4;\r\n    }\r\n}\r\n\r\nexport class KernelI8 extends AbstractKernel<Int8Array> {\r\n\r\n    protected resize(): void {\r\n        this._samples = new Int8Array(this.length);\r\n    }\r\n\r\n    /**\r\n     * Copies and converts samples to this kernels typed samples.\r\n     * @param samples - Flat array of all sample values.\r\n     */\r\n    fromArray(samples: Array<number>): void {\r\n        assert(samples.length === this.length, `expected samples length to match this kernel's length`);\r\n        this._samples.set(new Int8Array(samples));\r\n    }\r\n\r\n    get bytesPerComponent(): GLsizei {\r\n        return 4;\r\n    }\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { Observable, ReplaySubject } from 'rxjs';\r\n\r\nimport { assert, bitInBitfield } from './auxiliaries';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\nexport class KeyboardEventProvider {\r\n\r\n    /**\r\n     * HTML canvas element within the HTML5 document to register event listeners to.\r\n     */\r\n    protected _element: HTMLCanvasElement;\r\n\r\n    /**\r\n     * Time frame for events to be buffered (windowTime in rxjs per ReplaySubject).\r\n     */\r\n    protected _timeframe: number | undefined;\r\n\r\n    protected _keyDownListener: { (event: KeyboardEvent): void };\r\n    protected _keyDownSubject: ReplaySubject<KeyboardEvent>;\r\n\r\n    protected _keyPressListener: { (event: KeyboardEvent): void };\r\n    protected _keyPressSubject: ReplaySubject<KeyboardEvent>;\r\n\r\n    protected _keyUpListener: { (event: KeyboardEvent): void };\r\n    protected _keyUpSubject: ReplaySubject<KeyboardEvent>;\r\n\r\n    /**\r\n     * This mask saves for which types of events, event.preventDefault should be called. This is useful to disallow\r\n     * some kinds of standard events.\r\n     */\r\n    protected _preventDefaultMask: KeyboardEventType;\r\n\r\n    constructor(element: HTMLCanvasElement, timeframe?: number) {\r\n        assert(element !== undefined, `expected valid canvas element on initialization, given ${element}`);\r\n        this._element = element;\r\n        this._timeframe = timeframe;\r\n\r\n        // Add pointer lock stuff if needed. Not sure yet if theres any events we need to watch out for\r\n    }\r\n\r\n    /**\r\n     * Checks whether or not to prevent the default handling of the given event. This depends on the internal\r\n     * `preventDefaultMask` which can be modified using `preventDefault` function @see{@link preventDefault}.\r\n     * @param type - Internal event type of the incoming event.\r\n     * @param event - Actual event to prevent default handling on (if masked).\r\n     */\r\n    protected preventDefaultOnEvent(type: KeyboardEventType, event: KeyboardEvent): void {\r\n        if (bitInBitfield(this._preventDefaultMask, type)) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Prevent default event handling on specific event types (using preventDefault on the event).\r\n     * @param types - Event types to prevent default handling on.\r\n     */\r\n    preventDefault(...types: KeyboardEventType[]): void {\r\n        for (const type of types) {\r\n            if (!bitInBitfield(this._preventDefaultMask, type)) {\r\n                this._preventDefaultMask |= type;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Allow default event handling on specific event types (not calling preventDefault on the event).\r\n     * @param types - Event types to allow default handling on.\r\n     */\r\n    allowDefault(...types: KeyboardEventType[]): void {\r\n        for (const type of types) {\r\n            if (bitInBitfield(this._preventDefaultMask, type)) {\r\n                this._preventDefaultMask &= ~type;\r\n            }\r\n        }\r\n    }\r\n\r\n    observable(type: KeyboardEventType): Observable<KeyboardEvent> | undefined {\r\n        switch (type) {\r\n            case KeyboardEventType.KeyDown:\r\n                return this.keyDown$;\r\n            case KeyboardEventType.KeyPress:\r\n                return this.keyPress$;\r\n            case KeyboardEventType.KeyUp:\r\n                return this.keyUp$;\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n\r\n    get keyDown$(): Observable<KeyboardEvent> {\r\n        if (this._keyDownSubject === undefined) {\r\n            this._keyDownSubject = new ReplaySubject<KeyboardEvent>(undefined, this._timeframe);\r\n            this._keyDownListener = (event: KeyboardEvent) => {\r\n                this.preventDefaultOnEvent(KeyboardEventType.KeyDown, event);\r\n                this._keyDownSubject.next(event);\r\n            }\r\n            this._element.addEventListener('keydown', this._keyDownListener);\r\n        }\r\n        return this._keyDownSubject.asObservable();\r\n    }\r\n\r\n    get keyPress$(): Observable<KeyboardEvent> {\r\n        if (this._keyPressSubject === undefined) {\r\n            this._keyPressSubject = new ReplaySubject<KeyboardEvent>(undefined, this._timeframe);\r\n            this._keyPressListener = (event: KeyboardEvent) => {\r\n                this.preventDefaultOnEvent(KeyboardEventType.KeyPress, event);\r\n                this._keyPressSubject.next(event);\r\n            }\r\n            this._element.addEventListener('keypress', this._keyPressListener);\r\n        }\r\n        return this._keyPressSubject.asObservable();\r\n    }\r\n\r\n    get keyUp$(): Observable<KeyboardEvent> {\r\n        if (this._keyUpSubject === undefined) {\r\n            this._keyUpSubject = new ReplaySubject<KeyboardEvent>(undefined, this._timeframe);\r\n            this._keyUpListener = (event: KeyboardEvent) => {\r\n                this.preventDefaultOnEvent(KeyboardEventType.KeyUp, event);\r\n                this._keyUpSubject.next(event);\r\n            }\r\n            this._element.addEventListener('keyup', this._keyUpListener);\r\n        }\r\n        return this._keyUpSubject.asObservable();\r\n    }\r\n}\r\n\r\nexport enum KeyboardEventType {\r\n    KeyDown = 1 << 0,\r\n    KeyPress = 1 << 1,\r\n    KeyUp = 1 << 2,\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { Observable, ReplaySubject } from 'rxjs';\r\n\r\nimport { assert, bitInBitfield } from './auxiliaries';\r\nimport { IS_EDGE, IS_IE11 } from './msagent';\r\n\r\nimport { PointerLock } from './pointerlock';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\nexport class MouseEventProvider {\r\n\r\n    /**\r\n     * HTML canvas element within the HTML5 document to register event listeners to.\r\n     */\r\n    protected _element: HTMLCanvasElement;\r\n\r\n    /**\r\n     * Time frame for events to be buffered (windowTime in rxjs per ReplaySubject).\r\n     */\r\n    protected _timeframe: number | undefined;\r\n\r\n    protected _clickListener: { (event: MouseEvent): void };\r\n    protected _clickSubject: ReplaySubject<MouseEvent>;\r\n\r\n    protected _enterListener: { (event: MouseEvent): void };\r\n    protected _enterSubject: ReplaySubject<MouseEvent>;\r\n\r\n    protected _leaveListener: { (event: MouseEvent): void };\r\n    protected _leaveSubject: ReplaySubject<MouseEvent>;\r\n\r\n    protected _downListener: { (event: MouseEvent): void };\r\n    protected _downSubject: ReplaySubject<MouseEvent>;\r\n    protected _upListener: { (event: MouseEvent): void };\r\n    protected _upSubject: ReplaySubject<MouseEvent>;\r\n\r\n    protected _moveListener: { (event: MouseEvent): void };\r\n    protected _moveSubject: ReplaySubject<MouseEvent>;\r\n\r\n    protected _wheelListener: { (event: WheelEvent): void };\r\n    protected _wheelSubject: ReplaySubject<WheelEvent>;\r\n\r\n    protected _dragListener: { (event: DragEvent): void };\r\n    protected _dragSubject: ReplaySubject<DragEvent>;\r\n\r\n\r\n    /** @see {@link pointerLock} */\r\n    protected _pointerLockRequestPending = false;\r\n\r\n    /**\r\n     * This mask saves for which types of events, event.preventDefault should be called. This is useful to disallow\r\n     * some kinds of standard events like scrolling or clicking on links.\r\n     */\r\n    protected _preventDefaultMask: MouseEventProvider.Type;\r\n\r\n    constructor(element: HTMLCanvasElement, timeframe?: number) {\r\n        assert(element !== undefined, `expected valid canvas element on initialization, given ${element}`);\r\n        this._element = element;\r\n        this._timeframe = timeframe;\r\n\r\n        this._element.addEventListener('click', () => this.processPointerLockRequests());\r\n\r\n        /* Prevent unintentional drag content detection by Microsoft Edge/IE11, e.g., when processing mouse move events\r\n        during mouse down and up. */\r\n        if (IS_EDGE || IS_IE11) {\r\n            this._element.addEventListener('dragstart', (event: DragEvent) => event.preventDefault());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The pointer lock API requires a little workaround in order to avoid something like '... not called from inside a\r\n     * short running user-generated event handler'. A click event listener is registered and whenever a pointer lock is\r\n     * requested, e.g., from an event handler (which in turn exposes this interface to, e.g., a navigation), the next\r\n     * click will result in a probably more successful pointer lock.\r\n     */\r\n    protected processPointerLockRequests(): void {\r\n        if (!this._pointerLockRequestPending) {\r\n            return;\r\n        }\r\n        PointerLock.request(this._element);\r\n    }\r\n\r\n    /**\r\n     * Checks whether or not to prevent the default handling of the given event. This depends on the internal\r\n     * `preventDefaultMask` which can be modified using `preventDefault` function @see{@link preventDefault}.\r\n     * @param type - Internal event type of the incoming event.\r\n     * @param event - Actual event to prevent default handling on (if masked).\r\n     */\r\n    protected preventDefaultOnEvent(type: MouseEventProvider.Type, event: MouseEvent): void {\r\n        if (bitInBitfield(this._preventDefaultMask, type)) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Prevent default event handling on specific event types (using preventDefault on the event).\r\n     * @param types - Event types to prevent default handling on.\r\n     */\r\n    preventDefault(...types: MouseEventProvider.Type[]): void {\r\n        for (const type of types) {\r\n            if (!bitInBitfield(this._preventDefaultMask, type)) {\r\n                this._preventDefaultMask |= type;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Allow default event handling on specific event types (not calling preventDefault on the event).\r\n     * @param types - Event types to allow default handling on.\r\n     */\r\n    allowDefault(...types: MouseEventProvider.Type[]): void {\r\n        for (const type of types) {\r\n            if (bitInBitfield(this._preventDefaultMask, type)) {\r\n                this._preventDefaultMask &= ~type;\r\n            }\r\n        }\r\n    }\r\n\r\n    observable(type: MouseEventProvider.Type): Observable<MouseEvent>\r\n        | Observable<WheelEvent> | Observable<DragEvent> | undefined {\r\n        switch (type) {\r\n            case MouseEventProvider.Type.Click:\r\n                return this.click$;\r\n            case MouseEventProvider.Type.Enter:\r\n                return this.enter$;\r\n            case MouseEventProvider.Type.Leave:\r\n                return this.leave$;\r\n            case MouseEventProvider.Type.Down:\r\n                return this.down$;\r\n            case MouseEventProvider.Type.Up:\r\n                return this.up$;\r\n            case MouseEventProvider.Type.Move:\r\n                return this.move$;\r\n            case MouseEventProvider.Type.Wheel:\r\n                return this.wheel$;\r\n            case MouseEventProvider.Type.Drag:\r\n                return this.drag$;\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Enable/disable pointer lock on click. If true, the next click on this event provider's canvas will invoke a\r\n     * pointer lock request on the canvas element.\r\n     */\r\n    set pointerLock(lock: boolean) {\r\n        this._pointerLockRequestPending = lock;\r\n        if (lock === false) {\r\n            this._pointerLockRequestPending = false;\r\n            PointerLock.exit();\r\n        }\r\n    }\r\n    get pointerLock(): boolean {\r\n        return PointerLock.active(this._element);\r\n    }\r\n\r\n    get click$(): Observable<MouseEvent> {\r\n        if (this._clickSubject === undefined) {\r\n            this._clickSubject = new ReplaySubject<MouseEvent>(undefined, this._timeframe);\r\n            this._clickListener = (event: MouseEvent) => {\r\n                this.preventDefaultOnEvent(MouseEventProvider.Type.Click, event);\r\n                this._clickSubject.next(event);\r\n            };\r\n            this._element.addEventListener('click', this._clickListener);\r\n        }\r\n        return this._clickSubject.asObservable();\r\n    }\r\n\r\n    get enter$(): Observable<MouseEvent> {\r\n        if (this._enterSubject === undefined) {\r\n            this._enterSubject = new ReplaySubject<MouseEvent>(undefined, this._timeframe);\r\n            this._enterListener = (event: MouseEvent) => {\r\n                this.preventDefaultOnEvent(MouseEventProvider.Type.Enter, event);\r\n                this._enterSubject.next(event);\r\n            };\r\n            this._element.addEventListener('mouseenter', this._enterListener);\r\n        }\r\n        return this._enterSubject.asObservable();\r\n    }\r\n\r\n    get leave$(): Observable<MouseEvent> {\r\n        if (this._leaveSubject === undefined) {\r\n            this._leaveSubject = new ReplaySubject<MouseEvent>(undefined, this._timeframe);\r\n            this._leaveListener = (event: MouseEvent) => {\r\n                this.preventDefaultOnEvent(MouseEventProvider.Type.Leave, event);\r\n                this._leaveSubject.next(event);\r\n            };\r\n            this._element.addEventListener('mouseleave', this._leaveListener);\r\n        }\r\n        return this._leaveSubject.asObservable();\r\n    }\r\n\r\n    get down$(): Observable<MouseEvent> {\r\n        if (this._downSubject === undefined) {\r\n            this._downSubject = new ReplaySubject<MouseEvent>(undefined, this._timeframe);\r\n            this._downListener = (event: MouseEvent) => {\r\n                this.preventDefaultOnEvent(MouseEventProvider.Type.Down, event);\r\n                this._downSubject.next(event);\r\n            };\r\n            this._element.addEventListener('mousedown', this._downListener);\r\n        }\r\n        return this._downSubject.asObservable();\r\n    }\r\n\r\n    get up$(): Observable<MouseEvent> {\r\n        if (this._upSubject === undefined) {\r\n            this._upSubject = new ReplaySubject<MouseEvent>(undefined, this._timeframe);\r\n            this._upListener = (event: MouseEvent) => {\r\n                this.preventDefaultOnEvent(MouseEventProvider.Type.Up, event);\r\n                this._upSubject.next(event);\r\n            };\r\n            this._element.addEventListener('mouseup', this._upListener);\r\n        }\r\n        return this._upSubject.asObservable();\r\n    }\r\n\r\n    get move$(): Observable<MouseEvent> {\r\n        if (this._moveSubject === undefined) {\r\n            this._moveSubject = new ReplaySubject<MouseEvent>(undefined, this._timeframe);\r\n            this._moveListener = (event: MouseEvent) => {\r\n                this.preventDefaultOnEvent(MouseEventProvider.Type.Move, event);\r\n                this._moveSubject.next(event);\r\n            };\r\n            this._element.addEventListener('mousemove', this._moveListener);\r\n        }\r\n        return this._moveSubject.asObservable();\r\n    }\r\n\r\n    get wheel$(): Observable<WheelEvent> {\r\n        if (this._wheelSubject === undefined) {\r\n            this._wheelSubject = new ReplaySubject<WheelEvent>(undefined, this._timeframe);\r\n            this._wheelListener = (event: WheelEvent) => {\r\n                this.preventDefaultOnEvent(MouseEventProvider.Type.Wheel, event);\r\n                this._wheelSubject.next(event);\r\n            };\r\n            this._element.addEventListener('wheel', this._wheelListener);\r\n        }\r\n        return this._wheelSubject.asObservable();\r\n    }\r\n\r\n    get drag$(): Observable<DragEvent> {\r\n        if (this._dragSubject === undefined) {\r\n            this._dragSubject = new ReplaySubject<DragEvent>(undefined, this._timeframe);\r\n            this._dragListener = (event: DragEvent) => {\r\n                this.preventDefaultOnEvent(MouseEventProvider.Type.Drag, event);\r\n                this._dragSubject.next(event);\r\n            };\r\n            this._element.addEventListener('drag', this._dragListener);\r\n        }\r\n        return this._dragSubject.asObservable();\r\n    }\r\n}\r\n\r\n\r\nexport namespace MouseEventProvider {\r\n\r\n    export enum Type {\r\n        Click = 1 << 0,\r\n        Wheel = 1 << 1,\r\n        Enter = 1 << 2,\r\n        Leave = 1 << 3,\r\n        Move = 1 << 4,\r\n        Down = 1 << 5,\r\n        Up = 1 << 6,\r\n        Drag = 1 << 7,\r\n    }\r\n\r\n}\r\n","\r\nexport const IS_IE11 = typeof navigator === 'undefined' ?\r\n    undefined : /MSIE 11|Windows/i.test(navigator.userAgent);\r\nexport const IS_EDGE = typeof navigator === 'undefined' ?\r\n    undefined : /Edge\\/\\d./i.test(navigator.userAgent);\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { vec2 } from 'gl-matrix';\r\n\r\nimport { Camera } from './camera';\r\nimport { EventHandler } from './eventhandler';\r\nimport { PointerLock } from './pointerlock';\r\nimport { Invalidate } from './renderer';\r\n\r\nimport { log, LogLevel } from './auxiliaries';\r\nimport { FirstPersonModifier } from './firstpersonmodifier';\r\nimport { PanModifier } from './panmodifier';\r\nimport { PinchZoomModifier } from './pinchzoommodifier';\r\nimport { TrackballModifier } from './trackballmodifier';\r\nimport { TurntableModifier } from './turntablemodifier';\r\nimport { EventProvider } from './eventhandler'\r\nimport { WheelZoomModifier } from './wheelzoommodifier';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * This navigation is merely a design template/recipe for more refined, specialized navigation and provides some basic,\r\n * commonly used camera modifier such as turntable, first-person, as well as trackball. This implementation is also\r\n * unfinished and will be continued as soon as possible (e.g., first-person navigation is not usable for now).\r\n * @todo - Refine and comment this class to be usable at least as common/most-basic navigation auxiliary.\r\n */\r\nexport class Navigation {\r\n\r\n    /**\r\n     * The navigation's invalidation callback. This should usually be setup by the owning renderer and invoke the\r\n     * same callback the renderer has been given by the canvas. This invalidation is required, when continuous\r\n     * rendering is not present, events might cause need for new rendering requests.\r\n     */\r\n    protected _invalidate: Invalidate;\r\n\r\n    /** @see {@link camera} */\r\n    protected _camera: Camera;\r\n\r\n    /**\r\n     * Currently active metaphor.\r\n     */\r\n    protected _rotationMetaphor: Navigation.RotationMetaphor;\r\n\r\n    /**\r\n     * Identifies the active camera modifier.\r\n     */\r\n    protected _mode: Navigation.Modes | undefined;\r\n\r\n    /**\r\n     * Specifies, whether or not rotation mode should be invoked on any move event, regardless of buttons.\r\n     */\r\n    protected _alwaysRotateOnMove = false;\r\n\r\n    /**\r\n     * First person camera modifier.\r\n     */\r\n    protected _firstPerson: FirstPersonModifier | undefined;\r\n\r\n    /**\r\n     * Trackball camera modifier.\r\n     */\r\n    protected _trackball: TrackballModifier | undefined;\r\n\r\n    /**\r\n     * Turntable camera modifier.\r\n     */\r\n    protected _turntable: TurntableModifier | undefined;\r\n\r\n    /**\r\n     * Pan camera modifier.\r\n     */\r\n    protected _pan: PanModifier;\r\n\r\n    /**\r\n     * Pinch camera modifier.\r\n     */\r\n    protected _pinch: PinchZoomModifier;\r\n\r\n    /**\r\n     * Wheel zoom modifier.\r\n     */\r\n    protected _wheelZoom: WheelZoomModifier;\r\n\r\n    /**\r\n     * Even handler used to forward/map events to specific camera modifiers.\r\n     */\r\n    protected _eventHandler: EventHandler;\r\n\r\n    /**\r\n     * This keeps track of all events that are currently interacting with the canvas.\r\n     * It maps from pointer id to the currecnt position.\r\n     */\r\n    protected _activeEvents: Map<number, PointerEvent>;\r\n\r\n    /**\r\n     * Keep track of the latest interaction in order to allow a cooldown before the next\r\n     * interaction is allowed.\r\n     */\r\n    protected _lastInteractionTime: number;\r\n\r\n    constructor(\r\n        invalidate: Invalidate,\r\n        eventProvider: EventProvider) {\r\n\r\n        this._invalidate = invalidate;\r\n\r\n        /* Create event handler that listens to mouse events. */\r\n        this._eventHandler = new EventHandler(invalidate, eventProvider);\r\n\r\n        /* Listen to pointer events. */\r\n        this._eventHandler.pushPointerDownHandler((latests: Array<PointerEvent>, previous: Array<PointerEvent>) =>\r\n            this.onPointerDown(latests, previous));\r\n        this._eventHandler.pushPointerUpHandler((latests: Array<PointerEvent>, previous: Array<PointerEvent>) =>\r\n            this.onPointerUp(latests, previous));\r\n        this._eventHandler.pushPointerEnterHandler((latests: Array<PointerEvent>, previous: Array<PointerEvent>) =>\r\n            this.onPointerEnter(latests, previous));\r\n        this._eventHandler.pushPointerLeaveHandler((latests: Array<PointerEvent>, previous: Array<PointerEvent>) =>\r\n            this.onPointerLeave(latests, previous));\r\n        this._eventHandler.pushPointerMoveHandler((latests: Array<PointerEvent>, previous: Array<PointerEvent>) =>\r\n            this.onPointerMove(latests, previous));\r\n        this._eventHandler.pushPointerCancelHandler((latests: Array<PointerEvent>, previous: Array<PointerEvent>) =>\r\n            this.onPointerCancel(latests, previous));\r\n\r\n        this._eventHandler.pushMouseWheelHandler((latests: Array<WheelEvent>, previous: Array<WheelEvent>) =>\r\n            this.onWheel(latests, previous));\r\n\r\n        /* Explicitly use the setter here to create the appropriate modifier. */\r\n        this.rotationMetaphor = Navigation.RotationMetaphor.Turntable;\r\n\r\n        this._pan = new PanModifier();\r\n        this._pinch = new PinchZoomModifier();\r\n        this._wheelZoom = new WheelZoomModifier();\r\n\r\n        this._activeEvents = new Map();\r\n    }\r\n\r\n\r\n    /**\r\n     * Resolves the event to camera modifier mapping by returning the responsible camera modifier.\r\n     * @param event - Event to retrieve navigation mode for.\r\n     */\r\n    protected mode(): Navigation.Modes | undefined {\r\n\r\n        const events = Array.from(this._activeEvents.values());\r\n        const primaryEvent = this.getPrimaryEvent(events);\r\n\r\n        if (primaryEvent === undefined) {\r\n            log(LogLevel.Warning, 'No primary pointer event detected in Navigation::mode.');\r\n            return;\r\n        }\r\n\r\n        const isMouseEvent = primaryEvent.pointerType === 'mouse';\r\n        const isTouchEvent = primaryEvent.pointerType === 'touch' || primaryEvent.pointerType === 'pen';\r\n\r\n        const isPrimaryButtonDown = primaryEvent.buttons & 1;\r\n        const isShiftKeyDown = primaryEvent.shiftKey;\r\n\r\n        // const touchEvent = event as TouchEvent;\r\n        // let isTouchEvent = false;\r\n        // if (touchEvent !== undefined) {\r\n        //     isTouchEvent = touchEvent.touches !== undefined && touchEvent.touches.length > 0;\r\n        // }\r\n\r\n        const isPointerLockedRotate = PointerLock.active() && this._alwaysRotateOnMove;\r\n        const numPointers = this._activeEvents.size;\r\n\r\n        const isMouseRotate = isMouseEvent && isPrimaryButtonDown && numPointers === 1;\r\n        const isTouchRotate = isTouchEvent && numPointers === 1;\r\n\r\n        const isMousePan = isMouseEvent && isPrimaryButtonDown && isShiftKeyDown && numPointers === 1;\r\n        const isMultiTouch = isTouchEvent && numPointers === 2;\r\n\r\n        if (isPointerLockedRotate) {\r\n            return Navigation.Modes.Rotate;\r\n        }\r\n\r\n        if (isMousePan) {\r\n            return Navigation.Modes.Pan;\r\n        } else if (isMultiTouch) {\r\n            return Navigation.Modes.MultiTouch;\r\n        } else if (isMouseRotate || isTouchRotate) {\r\n            return Navigation.Modes.Rotate;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    protected resolveMultiTouch(): Navigation.Modes | undefined {\r\n        if (this._activeEvents.size < 2) {\r\n            log(LogLevel.Warning,\r\n                'MultiTouch resolution was canceled because less than two touches were detected.');\r\n            return undefined;\r\n        }\r\n\r\n        const events = Array.from(this._activeEvents.values());\r\n        const direction1 = vec2.fromValues(events[0].movementX, events[0].movementY);\r\n        const direction2 = vec2.fromValues(events[1].movementX, events[1].movementY);\r\n\r\n        if (vec2.length(direction1) === 0 || vec2.length(direction2) === 0) {\r\n            return Navigation.Modes.Zoom;\r\n        }\r\n\r\n        vec2.normalize(direction1, direction1);\r\n        vec2.normalize(direction2, direction2);\r\n        const cosAngle = vec2.dot(direction1, direction2);\r\n\r\n        const panThreshold = 0.2;\r\n        if (cosAngle > panThreshold) {\r\n            return Navigation.Modes.Pan;\r\n        }\r\n        return Navigation.Modes.Zoom;\r\n    }\r\n\r\n    protected rotate(start: boolean): void {\r\n        if (this._activeEvents.size !== 1) {\r\n            log(LogLevel.Info,\r\n                'Rotate event was canceled because less or more than two pointers were detected.');\r\n            return;\r\n        }\r\n        const events = Array.from(this._activeEvents.values());\r\n        const point = this._eventHandler.offsets(events[0])[0];\r\n\r\n        switch (this._rotationMetaphor) {\r\n            case Navigation.RotationMetaphor.FirstPerson:\r\n                const firstPerson = this._firstPerson as FirstPersonModifier;\r\n                let movement: vec2 | undefined;\r\n                if (PointerLock.active() && event instanceof MouseEvent) {\r\n                    movement = vec2.fromValues((event as MouseEvent).movementX, (event as MouseEvent).movementY);\r\n                }\r\n                start ? firstPerson.initiate(point) : firstPerson.process(point, movement);\r\n                break;\r\n\r\n            case Navigation.RotationMetaphor.Trackball:\r\n                const trackball = this._trackball as TrackballModifier;\r\n                start ? trackball.initiate(point) : trackball.process(point);\r\n                break;\r\n\r\n            case Navigation.RotationMetaphor.Turntable:\r\n                const turntable = this._turntable as TurntableModifier;\r\n                start ? turntable.initiate(point) : turntable.process(point);\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    protected pan(start: boolean): void {\r\n        const events = Array.from(this._activeEvents.values());\r\n        const event = this.getPrimaryEvent(events);\r\n\r\n        if (event === undefined) {\r\n            log(LogLevel.Warning,\r\n                'Pan event was canceled because no primary event was detected.');\r\n            return;\r\n        }\r\n\r\n        const point = this._eventHandler.offsets(event)[0];\r\n\r\n        const pan = this._pan as PanModifier;\r\n        start ? pan.initiate(point) : pan.process(point);\r\n    }\r\n\r\n    protected pinch(start: boolean): void {\r\n        if (this._activeEvents.size !== 2) {\r\n            log(LogLevel.Info,\r\n                'Pinch event was canceled because less or more than two pointers were detected.');\r\n            return;\r\n        }\r\n        const events = Array.from(this._activeEvents.values());\r\n        const point1 = this._eventHandler.offsets(events[0])[0];\r\n        const point2 = this._eventHandler.offsets(events[1])[0];\r\n\r\n        const pinch = this._pinch as PinchZoomModifier;\r\n        start ? pinch.initiate(point1, point2) : pinch.process(point1, point2);\r\n    }\r\n\r\n    protected getPrimaryEvent(events: Array<PointerEvent>): PointerEvent | undefined {\r\n        for (const event of events) {\r\n            if (event.isPrimary) {\r\n                return event;\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    protected onPointerDown(latests: Array<PointerEvent>, previous: Array<PointerEvent>): void {\r\n        for (const event of latests) {\r\n            this._activeEvents.set(event.pointerId, event);\r\n        }\r\n\r\n        this._mode = this.mode();\r\n        switch (this._mode) {\r\n            case Navigation.Modes.Rotate:\r\n                this.rotate(true);\r\n                break;\r\n\r\n            case Navigation.Modes.Pan:\r\n                this.pan(true);\r\n                break;\r\n\r\n            case Navigation.Modes.Zoom:\r\n                this.pinch(true);\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    protected onPointerUp(latests: Array<PointerEvent>, previous: Array<PointerEvent>): void {\r\n        for (const pointer of latests) {\r\n            this._activeEvents.delete(pointer.pointerId);\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\r\n    protected onPointerEnter(latests: Array<PointerEvent>, previous: Array<PointerEvent>): void { }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    protected onPointerLeave(latests: Array<PointerEvent>, previous: Array<PointerEvent>): void {\r\n        for (const pointer of latests) {\r\n            this._activeEvents.delete(pointer.pointerId);\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    protected onPointerCancel(latests: Array<PointerEvent>, previous: Array<PointerEvent>): void {\r\n        for (const pointer of latests) {\r\n            this._activeEvents.delete(pointer.pointerId);\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    protected onPointerMove(latests: Array<PointerEvent>, previous: Array<PointerEvent>): void {\r\n\r\n        for (const event of latests) {\r\n            this._activeEvents.set(event.pointerId, event);\r\n        }\r\n\r\n        if (this._mode === undefined) {\r\n            return;\r\n        }\r\n\r\n        const events = Array.from(this._activeEvents.values());\r\n        const primaryEvent = this.getPrimaryEvent(events);\r\n\r\n        /**\r\n         * Update the mode for every movement when using a mouse. This is necessary since mouse events do not trigger\r\n         * 'pointerup' events, so we need to figure out when the primary button is released manually\r\n         */\r\n        if (primaryEvent && primaryEvent.pointerType === 'mouse') {\r\n            this._mode = this.mode();\r\n        }\r\n\r\n        /**\r\n         * Handle the case where this is the first movement of a multi-touch gesture. We need to find out which\r\n         * kind of gesture is executed.\r\n         */\r\n        let modeUpdated = false;\r\n        if (this._mode === Navigation.Modes.MultiTouch) {\r\n            this._mode = this.resolveMultiTouch();\r\n            modeUpdated = true;\r\n        }\r\n\r\n        switch (this._mode) {\r\n            case Navigation.Modes.Rotate:\r\n                this.rotate(modeUpdated);\r\n                break;\r\n\r\n            case Navigation.Modes.Pan:\r\n                this.pan(modeUpdated);\r\n                break;\r\n\r\n            case Navigation.Modes.Zoom:\r\n                this.pinch(modeUpdated);\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this._lastInteractionTime = performance.now();\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    protected onWheel(latests: Array<WheelEvent>, previous: Array<WheelEvent>): void {\r\n        const event = latests[0];\r\n        this._wheelZoom.process(event.deltaY);\r\n    }\r\n\r\n\r\n    /**\r\n     * Update should invoke navigation specific event processing. When using, e.g., an event handler, the event handlers\r\n     * update method should be called in order to have navigation specific event processing invoked.\r\n     */\r\n    update(): void {\r\n        this._eventHandler.update();\r\n    }\r\n\r\n    /**\r\n     * The camera that is to be modified in response to various events.\r\n     */\r\n    set camera(camera: Camera) {\r\n        this._camera = camera;\r\n        if (this._firstPerson) {\r\n            this._firstPerson.camera = camera;\r\n        }\r\n        if (this._trackball) {\r\n            this._trackball.camera = camera;\r\n        }\r\n        if (this._turntable) {\r\n            this._turntable.camera = camera;\r\n        }\r\n        if (this._pan) {\r\n            this._pan.camera = camera;\r\n        }\r\n        if (this._pinch) {\r\n            this._pinch.camera = camera;\r\n        }\r\n        if (this._wheelZoom) {\r\n            this._wheelZoom.camera = camera;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Configure this navigation's metaphor.\r\n     */\r\n    set rotationMetaphor(metaphor: Navigation.RotationMetaphor) {\r\n        if (this._rotationMetaphor === metaphor) {\r\n            return;\r\n        }\r\n\r\n        this._firstPerson = undefined;\r\n        this._trackball = undefined;\r\n        this._turntable = undefined;\r\n\r\n        this._eventHandler.exitPointerLock(); /* Might be requested (and active) from FirstPerson or Flight. */\r\n        this._alwaysRotateOnMove = false;\r\n\r\n        this._rotationMetaphor = metaphor;\r\n        switch (this._rotationMetaphor) {\r\n            case Navigation.RotationMetaphor.FirstPerson:\r\n\r\n                this._eventHandler.requestPointerLock();\r\n                this._alwaysRotateOnMove = true;\r\n\r\n                this._firstPerson = new FirstPersonModifier();\r\n                this._firstPerson.camera = this._camera;\r\n                break;\r\n\r\n            case Navigation.RotationMetaphor.Trackball:\r\n                this._trackball = new TrackballModifier();\r\n                this._trackball.camera = this._camera;\r\n                break;\r\n\r\n            case Navigation.RotationMetaphor.Turntable:\r\n                this._turntable = new TurntableModifier();\r\n                this._turntable.camera = this._camera;\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        this._invalidate(true);\r\n    }\r\n\r\n    get rotationMetaphor(): Navigation.RotationMetaphor {\r\n        return this._rotationMetaphor;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport namespace Navigation {\r\n\r\n    /**\r\n     * Navigation modes used for identification of the current navigation intend, which is derived based on the event\r\n     * types or gestures, regardless of the active navigation metaphor and its constraints.\r\n     */\r\n    export enum Modes {\r\n        Move,\r\n        Pan,\r\n        /**\r\n         * MultiTouch is used when interaction with two fingers was initiated but it is not clear yet what\r\n         * interaction the user intends\r\n         */\r\n        MultiTouch,\r\n        Rotate,\r\n        Zoom,\r\n        ZoomStep,\r\n    }\r\n\r\n    /**\r\n     * Navigation metaphors supported by the default navigation implementation.\r\n     */\r\n    export enum RotationMetaphor {\r\n        FirstPerson = 'firstperson',\r\n        Flight = 'flight',\r\n        Trackball = 'trackball',\r\n        Turntable = 'turntable',\r\n    }\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { Buffer } from './buffer';\r\nimport { Context } from './context';\r\nimport { Geometry } from './geometry';\r\nimport { Initializable } from './initializable';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * Geometry for a viewport/screen-filling rectangle. The geometry creates rectangle vertices, associated to\r\n * a vertex array object (from geometry base class), and provides a specialized draw call for rendering. It is intended\r\n * for, e.g., viewport/screen-filling rendering in post-processing. The vertices can be used directly as normalized\r\n * device space (NDC) coordinates, e.g., by using the following vertex shader snippet:\r\n *\r\n * ```\r\n * #if __VERSION__ == 100\r\n *     attribute vec2 a_vertex;\r\n * #else\r\n *     layout(location = 0) in vec2 a_vertex;\r\n * #endif\r\n *\r\n * ...\r\n *\r\n * v_uv = a_vertex * 0.5 + 0.5;\r\n * gl_Position = vec4(a_vertex, 0.0, 1.0);\r\n * ```\r\n */\r\nexport class NdcFillingRectangle extends Geometry {\r\n\r\n    /**\r\n     * 2 ───── 3\r\n     * │  \\    │\r\n     * │    \\  │\r\n     * 0 ───── 1\r\n     */\r\n    protected static readonly VERTICES = new Float32Array(\r\n        [-1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0]);\r\n\r\n\r\n    /** @see {@link vertexLocation} */\r\n    protected _vertexLocation: GLuint;\r\n\r\n\r\n    /**\r\n     * Object constructor, requires a context and an identifier.\r\n     * @param context - Valid context to create the object for.\r\n     * @param identifier - Meaningful name for identification of this instance.\r\n     */\r\n    constructor(context: Context, identifier?: string) {\r\n        super(context, identifier);\r\n\r\n        /* Generate identifier from constructor name if none given. */\r\n        identifier = identifier !== undefined && identifier !== `` ? identifier : this.constructor.name;\r\n\r\n        const vertexVBO = new Buffer(context, `${identifier}VBO`);\r\n        this._buffers.push(vertexVBO);\r\n    }\r\n\r\n\r\n    /**\r\n     * Binds all vertex buffer objects (VBOs) to pre-set attribute binding points.\r\n     * @param indices - Unused, since pre-set locations are used.\r\n     */\r\n    protected bindBuffers(/*indices: Array<GLuint>*/): void {\r\n        /* Please note the implicit bind in attribEnable. */\r\n        this._buffers[0].attribEnable(this._vertexLocation,\r\n            2, this.context.gl.FLOAT, false, 0, 0, true, false);\r\n    }\r\n\r\n    /**\r\n     * Unbinds all vertex buffer objects (VBOs) and disables their attribute binding points.\r\n     * @param indices - Unused, since pre-set locations are used.\r\n     */\r\n    protected unbindBuffers(/*indices: Array<GLuint>*/): void {\r\n        /* Please note the implicit unbind in attribEnable is skipped. */\r\n        this._buffers[0].attribDisable(this._vertexLocation, true, true);\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates the vertex buffer object (VBO) and creates and initializes the buffer's data store.\r\n     * @param vertexLocation - Attribute binding point for vertices.\r\n     */\r\n    initialize(vertexLocation: GLuint = 0): boolean {\r\n        this._vertexLocation = vertexLocation;\r\n\r\n        const gl = this.context.gl;\r\n        const valid = super.initialize([gl.ARRAY_BUFFER]);\r\n\r\n        this._buffers[0].data(NdcFillingRectangle.VERTICES, gl.STATIC_DRAW);\r\n\r\n        return valid;\r\n    }\r\n\r\n    /**\r\n     * Specifies/invokes the draw of this screen-aligned triangle.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    draw(): void {\r\n        const gl = this.context.gl;\r\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n    }\r\n\r\n    /**\r\n     * Attribute location to which this geometry's vertices are bound to.\r\n     */\r\n    get vertexLocation(): GLint {\r\n        return this._vertexLocation;\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { Buffer } from './buffer';\r\nimport { Context } from './context';\r\nimport { Geometry } from './geometry';\r\nimport { Initializable } from './initializable';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * Geometry for a viewport/screen-filling triangle. The geometry creates triangle vertices, associated to\r\n * a vertex array object (from geometry base class), and provides a specialized draw call for rendering. It is intended\r\n * for, e.g., viewport/screen-filling rendering in post-processing. The vertices can be used directly as normalized\r\n * device space (NDC) coordinates, e.g., by using the following vertex shader snippet:\r\n * ```\r\n * #if __VERSION__ == 100\r\n *     attribute vec2 a_vertex;\r\n * #else\r\n *     layout(location = 0) in vec2 a_vertex;\r\n * #endif\r\n *\r\n * ...\r\n *\r\n * v_uv = a_vertex * 0.5 + 0.5;\r\n * gl_Position = vec4(a_vertex, 0.0, 1.0);\r\n * ```\r\n */\r\nexport class NdcFillingTriangle extends Geometry {\r\n\r\n    /**\r\n     * 2───────┬ ----- 1\r\n     * │       │    /\r\n     * │       │ /\r\n     * ├───────┘\r\n     * |     /\r\n     * |  /\r\n     * 0\r\n     */\r\n    protected static readonly VERTICES = new Float32Array(\r\n        [-1.0, -3.0, 3.0, 1.0, -1.0, 1.0]);\r\n\r\n    /** @see {@link vertexLocation} */\r\n    protected _vertexLocation: GLuint;\r\n\r\n\r\n    /**\r\n     * Object constructor, requires a context and an identifier.\r\n     * @param context - Valid context to create the object for.\r\n     * @param identifier - Meaningful name for identification of this instance.\r\n     */\r\n    constructor(context: Context, identifier?: string) {\r\n        super(context, identifier);\r\n\r\n        /* Generate identifier from constructor name if none given. */\r\n        identifier = identifier !== undefined && identifier !== `` ? identifier : this.constructor.name;\r\n\r\n        const vertexVBO = new Buffer(context, `${identifier}VBO`);\r\n        this._buffers.push(vertexVBO);\r\n    }\r\n\r\n\r\n    /**\r\n     * Binds all vertex buffer objects (VBOs) to pre-set attribute binding points.\r\n     * @param indices - Unused, since pre-set locations are used.\r\n     */\r\n    protected bindBuffers(/*indices: Array<GLuint>*/): void {\r\n        /* Please note the implicit bind in attribEnable */\r\n        this._buffers[0].attribEnable(this._vertexLocation,\r\n            2, this.context.gl.FLOAT, false, 0, 0, true, false);\r\n    }\r\n\r\n    /**\r\n     * Unbinds all vertex buffer objects (VBOs) and disables their attribute binding points.\r\n     * @param indices - Unused, since pre-set locations are used.\r\n     */\r\n    protected unbindBuffers(/*indices: Array<GLuint>*/): void {\r\n        /* Please note the implicit unbind in attribEnable is skipped */\r\n        this._buffers[0].attribDisable(this._vertexLocation, true, true);\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates the vertex buffer object (VBO) and creates and initializes the buffer's data store.\r\n     * @param vertexLocation - Attribute binding point for vertices.\r\n     */\r\n    initialize(vertexLocation: GLuint = 0): boolean {\r\n        this._vertexLocation = vertexLocation;\r\n\r\n        const gl = this.context.gl;\r\n        const valid = super.initialize([gl.ARRAY_BUFFER]);\r\n\r\n        this._buffers[0].data(NdcFillingTriangle.VERTICES, gl.STATIC_DRAW);\r\n\r\n        return valid;\r\n    }\r\n\r\n    /**\r\n     * Specifies/invokes the draw of this screen-aligned triangle.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    draw(): void {\r\n        const gl = this.context.gl;\r\n        gl.drawArrays(gl.TRIANGLES, 0, 3);\r\n    }\r\n\r\n\r\n    /**\r\n     * Attribute location to which this geometry's vertices are bound to.\r\n     */\r\n    get vertexLocation(): GLint {\r\n        return this._vertexLocation;\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { assert, log, LogLevel } from './auxiliaries';\r\n\r\nimport { Context } from './context';\r\nimport { Initializable } from './initializable';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * A generic WebGL object trait that has a size, a status, an identifier, and is initializable. A context and an object\r\n * handle are provided for internal use and can be read from outside. Furthermore, an object supports optional reference\r\n * counting. If used, an object cannot be initialized when already referenced, and cannot be delete as long as at least\r\n * a single reference is active.\r\n */\r\nexport abstract class AbstractObject<T> extends Initializable {\r\n\r\n    /** @see {@link context} */\r\n    protected _context: Context;\r\n\r\n    /** @see {@link identifier} */\r\n    protected _identifier: string;\r\n\r\n    /** @see {@link object} */\r\n    protected _object: T | undefined;\r\n\r\n    /** @see {@link valid} */\r\n    protected _valid = false;\r\n\r\n    /**\r\n     * Number of references to this object. If at least a single reference was counted, this object can neither be\r\n     * initialized (and thus created) nor uninitialized (and thus deleted). The reference count is controlled via\r\n     * ref() and unref() functions.\r\n     */\r\n    protected _referenceCount = 0;\r\n\r\n    /**\r\n     * Object constructor, requires a context and a valid identifier.\r\n     * @param context - Valid context to create the object for.\r\n     * @param identifier - Meaningful name for identification of this instance.\r\n     */\r\n    constructor(context: Context, identifier?: string) {\r\n        super();\r\n        this._context = context;\r\n        this._identifier = identifier !== undefined && identifier !== `` ? identifier : 'Object';\r\n    }\r\n\r\n\r\n    /**\r\n     * Object creation which is invoked on initialization.\r\n     * @returns - The created WebGL object handle.\r\n     */\r\n    protected abstract create(...args: Array<any>): T | undefined;\r\n\r\n    /**\r\n     * Object deletion which is invoked on uninitialization.\r\n     */\r\n    protected abstract delete(): void;\r\n\r\n\r\n    /**\r\n     * @override\r\n     * Ensure that an object handle is created at the point of initialization. When overriding this function\r\n     * super.initialize() has to be invoked immediately/first. Please note that initialization of invalid\r\n     * object raises an assertion in order to prevent further actions without a valid WebGL object. After\r\n     * object creation the valid property is expected to be set accordingly.\r\n     */\r\n    @Initializable.initialize()\r\n    initialize(...args: Array<any>): boolean {\r\n        this._identifier = this._context.allocationRegister.createUniqueIdentifier(this._identifier);\r\n        this.create(...args);\r\n\r\n        if (!this._valid) {\r\n            this._context.allocationRegister.deleteUniqueIdentifier(this._identifier);\r\n            log(LogLevel.Error, `initialization of '${this._identifier}' failed`);\r\n        }\r\n        return this._valid;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * Ensure that an object handle is deleted, invalidated, and its allocated GPU resources are set to zero.\r\n     * When overriding this function super.uninitialize() has to be invoked last/at the end.\r\n     * Note that an object cannot be uninitialized if it is referenced (reference count > 0).\r\n     */\r\n    @Initializable.uninitialize()\r\n    uninitialize(): void {\r\n        this._context.allocationRegister.reallocate(this._identifier, 0);\r\n        this._context.allocationRegister.deleteUniqueIdentifier(this._identifier);\r\n\r\n        this.delete();\r\n        assert(this._object === undefined, `expected object '${this._identifier}' to be undefined after delete`);\r\n        assert(this._valid === false, `expected object '${this._identifier}' to be invalid after delete`);\r\n    }\r\n\r\n\r\n    /**\r\n     * Read-only access to the objects context, used to get context information and WebGL API access.\r\n     */\r\n    get context(): Context {\r\n        return this._context;\r\n    }\r\n\r\n    /**\r\n     * Every GPU asset that allocates memory should provide a human readable identifier for GPU allocation tracking and\r\n     * debugging purposes. Please note that the identifier might changed on initialization due to the generation and\r\n     * assignment of a unique identifier.\r\n     * @returns - This assets identifier used for gpu allocation tracking and debugging.\r\n     */\r\n    get identifier(): string {\r\n        return this._identifier;\r\n    }\r\n\r\n    /**\r\n     * Read-only access to the WebGL object handle.\r\n     */\r\n    get object(): T {\r\n        assert(this._object !== undefined, `access to undefined object`);\r\n        return this._object as T;\r\n    }\r\n\r\n    /**\r\n     * Cached object status used to derive validity when initialized.\r\n     * @returns - True if the object status is complete, false otherwise.\r\n     */\r\n    get valid(): boolean {\r\n        return this._valid;\r\n    }\r\n\r\n    /**\r\n     * Increment the reference count of this object.\r\n     */\r\n    ref(): void {\r\n        assert(this.initialized, `expected object to be initialized in order to be referenced`);\r\n        ++this._referenceCount;\r\n    }\r\n\r\n    /**\r\n     * Decrement the reference count of this object.\r\n     */\r\n    unref(): void {\r\n        assert(this._referenceCount > 0, `expected object to be referenced in order to decrease its reference count`);\r\n        --this._referenceCount;\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { mat4, vec2, vec3 } from 'gl-matrix';\r\n\r\nimport { m4, v2, v3 } from './gl-matrix-extensions';\r\n\r\nimport { CameraModifier } from './cameramodifier';\r\n\r\n/* spellchecker: enable */\r\n\r\nexport class PanModifier extends CameraModifier {\r\n\r\n    protected static readonly DEFAULT_SENSITIVITY = 0.002;\r\n\r\n    protected _sensitivity: number = PanModifier.DEFAULT_SENSITIVITY;\r\n\r\n    protected _translation: vec3 = v3();\r\n\r\n    /**\r\n     * Initiate a new panning at a specific event position.\r\n     * @param point - Position of the current event to derive the magnitude for rotation from.\r\n     */\r\n    initiate(point: vec2): void {\r\n        Object.assign(this._reference, this._camera);\r\n\r\n        /* Retrieve initial event position. */\r\n        this._initialPoint = point;\r\n    }\r\n\r\n    /**\r\n     * Update the panning transform w.r.t. a specific event position.\r\n     * @param point - Position of the current event to derive the magnitude for translation from.\r\n     */\r\n    process(point: vec2): void {\r\n        /* Retrieve current event positions. */\r\n        this._currentPoint = point;\r\n\r\n        const magnitudes = vec2.subtract(v2(), this._initialPoint, this._currentPoint);\r\n        vec2.scale(magnitudes, magnitudes, window.devicePixelRatio * this._sensitivity);\r\n\r\n        const centerToEye = vec3.sub(v3(), this._reference.eye, this._reference.center);\r\n        vec3.normalize(centerToEye, centerToEye);\r\n        const up = this._reference.up;\r\n        vec3.normalize(up, up);\r\n        const right = vec3.cross(v3(), up, centerToEye);\r\n\r\n        const rightTranslation = vec3.scale(v3(), right, magnitudes[0]);\r\n        const upTranslation = vec3.scale(v3(), up, magnitudes[1]);\r\n        vec3.negate(upTranslation, upTranslation);\r\n        this._translation = vec3.add(v3(), upTranslation, rightTranslation);\r\n\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Actually applies the trackball rotation to the given camera.\r\n     */\r\n    update(): void {\r\n        if (this._camera === undefined) {\r\n            return;\r\n        }\r\n\r\n        /* Adjust for arbitrary camera center and rotate using quaternion based rotation. */\r\n        const T = mat4.fromTranslation(m4(), this._translation);\r\n\r\n        const eye = vec3.transformMat4(v3(), this._reference.eye, T);\r\n        const center = vec3.transformMat4(v3(), this._reference.center, T);\r\n\r\n        this._camera.eye = eye;\r\n        this._camera.center = center;\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { mat4, vec2, vec3 } from 'gl-matrix';\r\n\r\nimport { m4, v2, v3 } from './gl-matrix-extensions';\r\n\r\nimport { CameraModifier } from './cameramodifier';\r\n\r\n/* spellchecker: enable */\r\n\r\nexport class PinchZoomModifier extends CameraModifier {\r\n\r\n    protected static readonly DEFAULT_SENSITIVITY = 2.0;\r\n\r\n    protected _sensitivity: number = PinchZoomModifier.DEFAULT_SENSITIVITY;\r\n\r\n    protected _initialDistance: number;\r\n    protected _currentDistance: number;\r\n\r\n    protected _translation: vec3 = v3();\r\n\r\n    /**\r\n     * Initiate a new panning at a specific event position.\r\n     * @param point - Position of the current event to derive the magnitude for rotation from.\r\n     */\r\n    initiate(point1: vec2, point2: vec2): void {\r\n        Object.assign(this._reference, this._camera);\r\n\r\n        const magnitudes = vec2.subtract(v2(), point1, point2);\r\n        this._initialDistance = vec2.length(magnitudes);\r\n    }\r\n\r\n    /**\r\n     * Update the panning transform w.r.t. a specific event position.\r\n     * @param point - Position of the current event to derive the magnitude for translation from.\r\n     */\r\n    process(point1: vec2, point2: vec2): void {\r\n        /* Retrieve current event positions. */\r\n        const magnitudes = vec2.subtract(v2(), point1, point2);\r\n        this._currentDistance = vec2.length(magnitudes);\r\n\r\n        const change = (this._currentDistance / this._initialDistance) - 1.0;\r\n        const magnitude = change * PinchZoomModifier.DEFAULT_SENSITIVITY;\r\n\r\n        const eyeToCenter = vec3.sub(v3(), this._reference.center, this._reference.eye);\r\n        vec3.normalize(eyeToCenter, eyeToCenter);\r\n\r\n        this._translation = vec3.scale(v3(), eyeToCenter, magnitude);\r\n\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Actually applies the trackball rotation to the given camera.\r\n     */\r\n    update(): void {\r\n        if (this._camera === undefined) {\r\n            return;\r\n        }\r\n\r\n        /* Adjust for arbitrary camera center and rotate using quaternion based rotation. */\r\n        const T = mat4.fromTranslation(m4(), this._translation);\r\n\r\n        const eye = vec3.transformMat4(v3(), this._reference.eye, T);\r\n\r\n        this._camera.eye = eye;\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { Observable, ReplaySubject } from 'rxjs';\r\n\r\nimport { assert, bitInBitfield } from './auxiliaries';\r\nimport { IS_EDGE, IS_IE11 } from './msagent';\r\n\r\nimport { PointerLock } from './pointerlock';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\nexport class PointerEventProvider {\r\n\r\n    /**\r\n     * HTML canvas element within the HTML5 document to register event listeners to.\r\n     */\r\n    protected _element: HTMLCanvasElement;\r\n\r\n    /**\r\n     * Time frame for events to be buffered (windowTime in rxjs per ReplaySubject).\r\n     */\r\n    protected _timeframe: number | undefined;\r\n\r\n    protected _enterListener: { (event: PointerEvent): void };\r\n    protected _enterSubject: ReplaySubject<PointerEvent>;\r\n    protected _leaveListener: { (event: PointerEvent): void };\r\n    protected _leaveSubject: ReplaySubject<PointerEvent>;\r\n\r\n    protected _cancelListener: { (event: PointerEvent): void };\r\n    protected _cancelSubject: ReplaySubject<PointerEvent>;\r\n\r\n    protected _downListener: { (event: PointerEvent): void };\r\n    protected _downSubject: ReplaySubject<PointerEvent>;\r\n    protected _upListener: { (event: PointerEvent): void };\r\n    protected _upSubject: ReplaySubject<PointerEvent>;\r\n\r\n    protected _moveListener: { (event: PointerEvent): void };\r\n    protected _moveSubject: ReplaySubject<PointerEvent>;\r\n\r\n\r\n    /** @see {@link pointerLock} */\r\n    protected _pointerLockRequestPending = false;\r\n\r\n    /**\r\n     * This mask saves for which types of events, event.preventDefault should be called. This is useful to disallow\r\n     * some kinds of standard events like scrolling or clicking on links.\r\n     */\r\n    protected _preventDefaultMask: PointerEventProvider.Type;\r\n\r\n    constructor(element: HTMLCanvasElement, timeframe?: number) {\r\n        assert(element !== undefined, `expected valid canvas element on initialization, given ${element}`);\r\n        this._element = element;\r\n        this._timeframe = timeframe;\r\n\r\n        this._element.addEventListener('click', () => this.processPointerLockRequests());\r\n\r\n        /* Prevent unintentional drag content detection by Microsoft Edge/IE11, e.g., when processing mouse move events\r\n        during mouse down and up. */\r\n        if (IS_EDGE || IS_IE11) {\r\n            this._element.addEventListener('dragstart', (event: DragEvent) => event.preventDefault());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The pointer lock API requires a little workaround in order to avoid something like '... not called from inside a\r\n     * short running user-generated event handler'. A click event listener is registered and whenever a pointer lock is\r\n     * requested, e.g., from an event handler (which in turn exposes this interface to, e.g., a navigation), the next\r\n     * click will result in a probably more successful pointer lock.\r\n     */\r\n    protected processPointerLockRequests(): void {\r\n        if (!this._pointerLockRequestPending) {\r\n            return;\r\n        }\r\n        PointerLock.request(this._element);\r\n    }\r\n\r\n    /**\r\n     * Checks whether or not to prevent the default handling of the given event. This depends on the internal\r\n     * `preventDefaultMask` which can be modified using `preventDefault` function @see{@link preventDefault}.\r\n     * @param type - Internal event type of the incoming event.\r\n     * @param event - Actual event to prevent default handling on (if masked).\r\n     */\r\n    protected preventDefaultOnEvent(type: PointerEventProvider.Type, event: PointerEvent): void {\r\n        if (bitInBitfield(this._preventDefaultMask, type)) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Prevent default event handling on specific event types (using preventDefault on the event).\r\n     * @param types - Event types to prevent default handling on.\r\n     */\r\n    preventDefault(...types: PointerEventProvider.Type[]): void {\r\n        for (const type of types) {\r\n            if (!bitInBitfield(this._preventDefaultMask, type)) {\r\n                this._preventDefaultMask |= type;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Allow default event handling on specific event types (not calling preventDefault on the event).\r\n     * @param types - Event types to allow default handling on.\r\n     */\r\n    allowDefault(...types: PointerEventProvider.Type[]): void {\r\n        for (const type of types) {\r\n            if (bitInBitfield(this._preventDefaultMask, type)) {\r\n                this._preventDefaultMask &= ~type;\r\n            }\r\n        }\r\n    }\r\n\r\n    observable(type: PointerEventProvider.Type): Observable<PointerEvent> | undefined {\r\n        switch (type) {\r\n            case PointerEventProvider.Type.Enter:\r\n                return this.enter$;\r\n            case PointerEventProvider.Type.Leave:\r\n                return this.leave$;\r\n            case PointerEventProvider.Type.Down:\r\n                return this.down$;\r\n            case PointerEventProvider.Type.Up:\r\n                return this.up$;\r\n            case PointerEventProvider.Type.Move:\r\n                return this.move$;\r\n            case PointerEventProvider.Type.Cancel:\r\n                return this.cancel$;\r\n\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Enable/disable pointer lock on click. If true, the next click on this event provider's canvas will invoke a\r\n     * pointer lock request on the canvas element.\r\n     */\r\n    set pointerLock(lock: boolean) {\r\n        this._pointerLockRequestPending = lock;\r\n        if (lock === false) {\r\n            this._pointerLockRequestPending = false;\r\n            PointerLock.exit();\r\n        }\r\n    }\r\n    get pointerLock(): boolean {\r\n        return PointerLock.active(this._element);\r\n    }\r\n\r\n    get enter$(): Observable<PointerEvent> {\r\n        if (this._enterSubject === undefined) {\r\n            this._enterSubject = new ReplaySubject<PointerEvent>(undefined, this._timeframe);\r\n            this._enterListener = (event: PointerEvent) => {\r\n                this.preventDefaultOnEvent(PointerEventProvider.Type.Enter, event);\r\n                this._enterSubject.next(event);\r\n            };\r\n            this._element.addEventListener('pointerenter', this._enterListener);\r\n        }\r\n        return this._enterSubject.asObservable();\r\n    }\r\n\r\n    get leave$(): Observable<PointerEvent> {\r\n        if (this._leaveSubject === undefined) {\r\n            this._leaveSubject = new ReplaySubject<PointerEvent>(undefined, this._timeframe);\r\n            this._leaveListener = (event: PointerEvent) => {\r\n                this.preventDefaultOnEvent(PointerEventProvider.Type.Leave, event);\r\n                this._leaveSubject.next(event);\r\n            };\r\n            this._element.addEventListener('pointerleave', this._leaveListener);\r\n        }\r\n        return this._leaveSubject.asObservable();\r\n    }\r\n\r\n    get down$(): Observable<PointerEvent> {\r\n        if (this._downSubject === undefined) {\r\n            this._downSubject = new ReplaySubject<PointerEvent>(undefined, this._timeframe);\r\n            this._downListener = (event: PointerEvent) => {\r\n                this.preventDefaultOnEvent(PointerEventProvider.Type.Down, event);\r\n                this._downSubject.next(event);\r\n            };\r\n            this._element.addEventListener('pointerdown', this._downListener);\r\n        }\r\n        return this._downSubject.asObservable();\r\n    }\r\n\r\n    get up$(): Observable<PointerEvent> {\r\n        if (this._upSubject === undefined) {\r\n            this._upSubject = new ReplaySubject<PointerEvent>(undefined, this._timeframe);\r\n            this._upListener = (event: PointerEvent) => {\r\n                this.preventDefaultOnEvent(PointerEventProvider.Type.Up, event);\r\n                this._upSubject.next(event);\r\n            };\r\n            this._element.addEventListener('pointerup', this._upListener);\r\n        }\r\n        return this._upSubject.asObservable();\r\n    }\r\n\r\n    get move$(): Observable<PointerEvent> {\r\n        if (this._moveSubject === undefined) {\r\n            this._moveSubject = new ReplaySubject<PointerEvent>(undefined, this._timeframe);\r\n            this._moveListener = (event: PointerEvent) => {\r\n                this.preventDefaultOnEvent(PointerEventProvider.Type.Move, event);\r\n                this._moveSubject.next(event);\r\n            };\r\n            this._element.addEventListener('pointermove', this._moveListener);\r\n        }\r\n        return this._moveSubject.asObservable();\r\n    }\r\n\r\n    get cancel$(): Observable<PointerEvent> {\r\n        if (this._cancelSubject === undefined) {\r\n            this._cancelSubject = new ReplaySubject<PointerEvent>(undefined, this._timeframe);\r\n            this._cancelListener = (event: PointerEvent) => {\r\n                this.preventDefaultOnEvent(PointerEventProvider.Type.Cancel, event);\r\n                this._cancelSubject.next(event);\r\n            };\r\n            this._element.addEventListener('pointercancel', this._cancelListener);\r\n        }\r\n        return this._cancelSubject.asObservable();\r\n    }\r\n\r\n}\r\n\r\n\r\nexport namespace PointerEventProvider {\r\n\r\n    export enum Type {\r\n        Enter = 1 << 0,\r\n        Leave = 1 << 1,\r\n        Move = 1 << 2,\r\n        Down = 1 << 3,\r\n        Up = 1 << 4,\r\n        Cancel = 1 << 5,\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { assert } from './auxiliaries';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * Utility class providing simplified access to the clients pointer lock API.\r\n */\r\nexport class PointerLock {\r\n\r\n    /**\r\n     * Cached exit call of the clients specific pointer lock API.\r\n     */\r\n    protected static _exit: () => void;\r\n\r\n    /**\r\n     * Cached request call of the clients specific pointer API.\r\n     */\r\n    protected static _request: (element: HTMLElement) => void;\r\n\r\n    /**\r\n     * Cached element call returning the fullscreen element specific to the clients fullscreen API.\r\n     */\r\n    protected static _element: () => HTMLElement;\r\n\r\n\r\n    /**\r\n     * Query and cache the client specific pointer lock API.\r\n     */\r\n    protected static queryAndCacheAPI(): void {\r\n        if (PointerLock._exit !== undefined) {\r\n            return;\r\n        }\r\n\r\n        /**\r\n         * Shadow global document declaration with an untyped one. This is done in order to use vendor specific\r\n         * properties without a compile error.\r\n         */\r\n        const document = window.document as any;\r\n\r\n        // Query the API to use.\r\n        const exits = [\r\n            document.exitPointerLock,\r\n            document.mozExitPointerLock,\r\n            document.webkitExitPointerLock,\r\n            undefined];\r\n\r\n        let api = 0;\r\n        for (; api < exits.length; ++api) {\r\n            if (exits[api] === undefined) {\r\n                continue;\r\n            }\r\n            break;\r\n        }\r\n\r\n        switch (api) {\r\n            case 0: // native\r\n                PointerLock._exit = () => document.exitPointerLock();\r\n                /* @todo - refine the request pointer lock as soon as candidate recommendation is approved. */\r\n                PointerLock._request = (element: HTMLElement) => (element as any).requestPointerLock();\r\n                PointerLock._element = () => document.pointerLockElement;\r\n                break;\r\n\r\n            case 1: // mozilla\r\n                PointerLock._exit = () => document.mozCancelPointerLock();\r\n                PointerLock._request = (element: HTMLElement) => (element as any).mozRequestPointerLock();\r\n                PointerLock._element = () => document.mozPointerLockElement;\r\n                break;\r\n\r\n            case 2: // webkit\r\n                PointerLock._exit = () => document.webkitExitPointerLock();\r\n                PointerLock._request = (element: HTMLElement) => (element as any).webkitRequestPointerLock();\r\n                PointerLock._element = () => document.webkitPointerLockElement;\r\n                break;\r\n\r\n            default:\r\n                assert(false, `none of the following pointer lock apis was found: native, moz, or webkit`);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns whether or not a pointer lock element exists, indicating if pointer lock is active or not.\r\n     */\r\n    static active(element?: HTMLElement): boolean {\r\n        if (this._element === undefined) {\r\n            return false;\r\n        }\r\n        return (element !== undefined && PointerLock._element() === element) || (element === undefined &&\r\n            PointerLock._element() !== undefined && PointerLock._element() !== null);\r\n    }\r\n\r\n    /**\r\n     * Requests pointer lock for a given element. If another element is already in pointer lock, it is unlocked\r\n     * first. The function considers various platform specific pointer lock interfaces, i.e., native, moz, and webkit.\r\n     * @param element - Element to toggle pointer lock state of.\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    static request(element: HTMLElement, callback?: () => void): void {\r\n        if (element === undefined) {\r\n            return;\r\n        }\r\n        PointerLock.queryAndCacheAPI();\r\n\r\n        if (PointerLock.active() && PointerLock._element() !== element) {\r\n            PointerLock._exit();\r\n        }\r\n\r\n        if (!PointerLock.active()) {\r\n            PointerLock._request(element);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Exit pointer lock. The function considers various platform specific pointer lock interfaces, i.e., native, moz,\r\n     * and webkit.\r\n     */\r\n    static exit(): void {\r\n        if (PointerLock._exit) {\r\n            PointerLock._exit();\r\n        }\r\n    }\r\n\r\n}\r\n","/**\r\n * IE11 polyfill for string.repeat function, from\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat#Polyfill\r\n */\r\nif (String.prototype.repeat === undefined) {\r\n    // tslint:disable-next-line:space-before-function-paren\r\n    String.prototype.repeat = function (count): string {\r\n        if (this === null) {\r\n            throw new TypeError('can\\'t convert ' + this + ' to object');\r\n        }\r\n        const str = '' + this;\r\n        count = +count;\r\n        if (count !== count) {\r\n            count = 0;\r\n        }\r\n        if (count < 0) {\r\n            throw new RangeError('repeat count must be non-negative');\r\n        }\r\n        if (count === Infinity) {\r\n            throw new RangeError('repeat count must be less than infinity');\r\n        }\r\n        count = Math.floor(count);\r\n        if (str.length === 0 || count === 0) {\r\n            return '';\r\n        }\r\n        // Ensuring count is a 31-bit integer allows us to heavily optimize the\r\n        // main part. But anyway, most current (August 2014) browsers can't handle\r\n        // strings 1 << 28 chars or longer, so:\r\n        if (str.length * count >= 1 << 28) {\r\n            throw new RangeError('repeat count must not overflow maximum string size');\r\n        }\r\n        let rpt = '';\r\n        for (let i = 0; i < count; i++) {\r\n            rpt += str;\r\n        }\r\n        return rpt;\r\n    };\r\n\r\n}\r\n\r\n\r\n/**\r\n * IE11 polyfill for string.startsWith function, from https://stackoverflow.com/a/30867255.\r\n */\r\nif (String.prototype.startsWith === undefined) {\r\n    /* tslint:disable-next-line:space-before-function-paren */\r\n    String.prototype.startsWith = function (searchString, position): boolean {\r\n        position = position || 0;\r\n        return this.indexOf(searchString, position) === position;\r\n    };\r\n}\r\n\r\n/**\r\n * IE11 polyfill for string.endsWith function, from\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\r\n */\r\nif (String.prototype.endsWith === undefined) {\r\n    /* tslint:disable-next-line:space-before-function-paren */\r\n    String.prototype.endsWith = function (search, length?): boolean {\r\n        if (length === undefined || length > this.length) {\r\n            length = this.length as number;\r\n        }\r\n        return this.substring(length - search.length, length) === search;\r\n    };\r\n}\r\n\r\n/**\r\n * IE11 polyfill for string.includes function, from\r\n * https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/String/includes\r\n */\r\nif (String.prototype.includes === undefined) {\r\n    // tslint:disable-next-line: space-before-function-paren\r\n    String.prototype.includes = function (search, start): boolean {\r\n        if (typeof start !== 'number') {\r\n            start = 0;\r\n        }\r\n\r\n        if (start + search.length > this.length) {\r\n            return false;\r\n        } else {\r\n            return this.indexOf(search, start) !== -1;\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * IE11 polyfill for string.trimLeft function, from\r\n * https://stackoverflow.com/a/2308168\r\n */\r\nif (String.prototype.trimLeft === undefined) {\r\n    // tslint:disable-next-line: space-before-function-paren\r\n    String.prototype.trimLeft = function (): string {\r\n        return this.replace(/^\\s+/, '');\r\n    };\r\n}\r\n\r\n/**\r\n * IE11 polyfill for string.trimLeft function, from\r\n * https://stackoverflow.com/a/2308168\r\n */\r\nif (String.prototype.trimRight === undefined) {\r\n    // tslint:disable-next-line: space-before-function-paren\r\n    String.prototype.trimRight = function (): string {\r\n        return this.replace(/\\s+$/, '');\r\n    };\r\n}\r\n\r\n/**\r\n * IE11 polyfill for Array.forEach function, from ...\r\n */\r\nif (Array.prototype.forEach === undefined) {\r\n    /* tslint:disable-next-line:space-before-function-paren */\r\n    Array.prototype.forEach = (action, that /*opt*/) => {\r\n        const n = this.length;\r\n        /* tslint:disable-prefer-for-of */\r\n        for (let i = 0; i < n; i++) {\r\n            if (i in this) {\r\n                action.call(that, (this as any)[i], i, this);\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * IE11 polyfill for Array.fill function, from ...\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fill\r\n */\r\nif (Array.prototype.fill === undefined) {\r\n    Array.prototype.fill = (value, start: number, end: number) => {\r\n\r\n        // Steps 1-2.\r\n        if (this === null) {\r\n            throw new TypeError('this is null or not defined');\r\n        }\r\n\r\n        const O = Object(this);\r\n\r\n        // Steps 3-5.\r\n        const len = O.length >>> 0;\r\n\r\n        // Steps 6-7.\r\n        const relativeStart = start >> 0;\r\n\r\n        // Step 8.\r\n        let k = relativeStart < 0 ?\r\n            Math.max(len + relativeStart, 0) :\r\n            Math.min(relativeStart, len);\r\n\r\n        // Steps 9-10.\r\n        const relativeEnd = end === undefined ?\r\n            len : end >> 0;\r\n\r\n        // Step 11.\r\n        const final = relativeEnd < 0 ?\r\n            Math.max(len + relativeEnd, 0) :\r\n            Math.min(relativeEnd, len);\r\n\r\n        // Step 12.\r\n        while (k < final) {\r\n            O[k] = value;\r\n            ++k;\r\n        }\r\n\r\n        // Step 13.\r\n        return O;\r\n    };\r\n}\r\n\r\n/**\r\n * IE11 polyfill for Math.log10 function\r\n */\r\nif (Math.log10 === undefined) {\r\n    /* tslint:disable-next-line:space-before-function-paren */\r\n    Math.log10 = (x) => Math.log(x) * Math.LOG10E;\r\n}\r\n\r\n/**\r\n * IE11 polyfill for Number.EPSILON.\r\n */\r\ninterface NumberPolyfill {\r\n    EPSILON: number;\r\n}\r\nif (Number.EPSILON === undefined) {\r\n    (Number as NumberPolyfill).EPSILON = Math.pow(2, -52);\r\n}\r\n\r\n\r\n// tslint:disable-next-line:max-line-length\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/slice#Polyfill\r\n[Float32Array, Uint8Array, Int8Array, Uint32Array, Int32Array].forEach((arrayType) => {\r\n    if (!arrayType.prototype.slice) {\r\n        Object.defineProperty(arrayType.prototype, 'slice', { value: Array.prototype.slice });\r\n    }\r\n    if (!arrayType.prototype.reduce) {\r\n        Object.defineProperty(arrayType.prototype, 'reduce', { value: Array.prototype.reduce });\r\n    }\r\n    if (!arrayType.prototype.filter) {\r\n        Object.defineProperty(arrayType.prototype, 'filter', { value: Array.prototype.filter });\r\n    }\r\n    if (!arrayType.prototype.map) {\r\n        Object.defineProperty(arrayType.prototype, 'map', { value: Array.prototype.map });\r\n    }\r\n    if (!arrayType.prototype.indexOf) {\r\n        Object.defineProperty(arrayType.prototype, 'indexOf', { value: Array.prototype.indexOf });\r\n    }\r\n});\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\r\nif (typeof Object.assign === 'undefined') {\r\n    // Must be writable: true, enumerable: false, configurable: true\r\n    Object.defineProperty(Object, 'assign', {\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n        value(target: any, varArgs: any): void { // .length of function is 2\r\n            if (target === undefined && target === null) { // TypeError if undefined or null\r\n                throw new TypeError('Cannot convert undefined or null to object');\r\n            }\r\n\r\n            const to = Object(target);\r\n\r\n            for (let index = 1; index < arguments.length; index++) {\r\n                // eslint-disable-next-line prefer-rest-params\r\n                const nextSource = arguments[index];\r\n\r\n                if (nextSource !== undefined && nextSource !== null) { // Skip over if undefined or null\r\n                    for (const nextKey in nextSource) {\r\n                        // Avoid bugs when hasOwnProperty is shadowed\r\n                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\r\n                            to[nextKey] = nextSource[nextKey];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return to;\r\n        },\r\n        configurable: true,\r\n        writable: true,\r\n    });\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { assert, log, logIf, LogLevel } from './auxiliaries';\r\n\r\nimport { Bindable } from './bindable';\r\nimport { Initializable } from './initializable';\r\nimport { AbstractObject } from './object';\r\nimport { Shader } from './shader';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * WebGL Program wrapper encapsulating program creation, shader attachment, linking, binding, as well as attribute and\r\n * uniform location retrieval. A program is intended to be used as follows:\r\n *\r\n * ```\r\n * const vert = new Shader(this._context, gl.VERTEX_SHADER, 'ndcvertices.vert (blit)');\r\n * vert.initialize(require('./shaders/ndcvertices.vert'));\r\n * const frag = new Shader(this._context, gl.FRAGMENT_SHADER, 'blit.frag');\r\n * frag.initialize(require('./shaders/blit.frag'));\r\n *\r\n * this._program = new Program(this._context, 'BlitProgram');\r\n * this._program.initialize([vert, frag]);\r\n *\r\n * this.aVertex = this._program.attribute('a_vertex');\r\n * const uTexture = this._program.uniform('u_texture');\r\n *\r\n * this._program.bind();\r\n * gl.uniform1i(uTexture, 0);\r\n * // ... draw\r\n * this._program.unbind();\r\n * ```\r\n */\r\nexport class Program extends AbstractObject<WebGLProgram> implements Bindable {\r\n\r\n    /**\r\n     * Default program, e.g., used for unbind.\r\n     */\r\n    static readonly DEFAULT_PROGRAM = undefined;\r\n\r\n\r\n    /** @see {@link shaders} */\r\n    protected _shaders = new Array<Shader>();\r\n\r\n    /** @see {@link linked} */\r\n    protected _linked = false;\r\n\r\n\r\n    /**\r\n     * Creates a WebGLProgram object and attaches, and references all shaders to it. The program is then linked. All\r\n     * shaders have to be initialized in order to be attached and at least on vertex and one fragment shader has to be\r\n     * present. Note that the shaders are not detached by default. If neither the shader objects nor recompilation is\r\n     * required all shaders should be detached manually after initialization/creation.\r\n     * @param shaders - Vertex and fragment shaders that are to be attached to the program.\r\n     * @param link - Whether or not to immediately link the program iff provided shader(s) are attached successfully.\r\n     * @returns - Either a new program or undefined if linking failed or one of the shaders is invalid/not compiled.\r\n     */\r\n    protected create(shaders: Array<Shader> = new Array<Shader>(),\r\n        link: boolean = true): WebGLProgram | undefined {\r\n\r\n        const gl = this._context.gl;\r\n\r\n        let numVertShaders = 0;\r\n        let numFragShaders = 0;\r\n\r\n        for (const shader of shaders) {\r\n            switch (shader.type) {\r\n                case gl.VERTEX_SHADER:\r\n                    ++numVertShaders;\r\n                    break;\r\n                case gl.FRAGMENT_SHADER:\r\n                    ++numFragShaders;\r\n                    break;\r\n                default:\r\n                    assert(false, `Unknown shader type detected.`);\r\n                    break;\r\n            }\r\n        }\r\n        logIf(numVertShaders < 1, LogLevel.Error, `at least one vertex shader is expected`);\r\n        logIf(numFragShaders < 1, LogLevel.Error, `at least one fragment shader is expected`);\r\n        if (numVertShaders < 1 || numFragShaders < 1) {\r\n            return undefined;\r\n        }\r\n\r\n        this._object = gl.createProgram();\r\n        this._valid = gl.isProgram(this._object);\r\n\r\n        assert(this._object instanceof WebGLProgram, `expected WebGLProgram object to be created`);\r\n\r\n        if (shaders.length > 0) {\r\n            this.attach(shaders, link);\r\n        }\r\n        return this._object;\r\n    }\r\n\r\n    /**\r\n     * Delete the program object on the GPU. This should have the reverse effect of `create`.\r\n     */\r\n    protected delete(): void {\r\n        assert(this._object !== undefined, `expected WebGLProgram object`);\r\n        this._context.gl.deleteProgram(this._object);\r\n        this._object = undefined;\r\n        this._valid = false;\r\n    }\r\n\r\n\r\n    /**\r\n     * Attaches and references all given shaders. Attach is expected to be called once within creation of a Program.\r\n     * Shaders that are not initialized will be skipped/not attached.\r\n     * @param shaders - All shaders to be attached to the program for linking.\r\n     * @param link - Whether or not to link the program again after attaching the shader(s).\r\n     * @returns - True if attaching all shaders and linking succeeded, false otherwise.\r\n     */\r\n    attach(shaders: Shader | Array<Shader>, link: boolean = false): boolean {\r\n        assert(this._object !== undefined, `expected a WebGLProgram object`);\r\n        const gl = this._context.gl;\r\n\r\n        for (const shader of (shaders instanceof Array ? shaders : [shaders])) {\r\n            if (this._shaders.indexOf(shader) > -1) {\r\n                continue;\r\n            }\r\n            this._shaders.push(shader);\r\n\r\n            if (!shader.initialized) {\r\n                log(LogLevel.Error, `shader '${shader.identifier}' not initialized.`);\r\n                continue;\r\n            }\r\n            gl.attachShader(this._object, shader.object);\r\n            shader.ref();\r\n        }\r\n        if (link) {\r\n            this.link();\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Detaches one or multiple shaders from the program. Note that relinking is not invoked automatically.\r\n     * @param shaders - Shaders that are to be deleted.\r\n     */\r\n    detach(shaders: Shader | Array<Shader>): void {\r\n        assert(this._object !== undefined, `expected WebGLProgram object`);\r\n        const gl = this._context.gl;\r\n\r\n        for (const shader of (shaders instanceof Array ? shaders : [shaders])) {\r\n            const index = this._shaders.indexOf(shader);\r\n            if (index > -1) {\r\n                this._shaders.splice(index);\r\n            }\r\n            assert(shader.initialized, `expected shader '${shader.identifier}' to be initialized`);\r\n            gl.detachShader(this._object, shader.object);\r\n            shader.unref();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Links the program with all its already attached shaders. If linking fails, a developer log with additional\r\n     * information is provided.\r\n     * @returns - True if linking the program succeeded, false otherwise.\r\n     */\r\n    link(): boolean {\r\n        assert(this._object !== undefined, `expected WebGLProgram object`);\r\n        const gl = this._context.gl;\r\n\r\n        gl.linkProgram(this._object);\r\n\r\n        if (!gl.getProgramParameter(this._object, gl.LINK_STATUS)) {\r\n            const infoLog: string = gl.getProgramInfoLog(this._object);\r\n            log(LogLevel.Error, `linking of program '${this._identifier}' failed: '${infoLog}'`);\r\n\r\n            this._linked = false;\r\n        } else {\r\n            this._linked = true;\r\n        }\r\n        return this._linked;\r\n    }\r\n\r\n\r\n    /**\r\n     * Activates this program for use.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    bind(): void {\r\n        this._context.gl.useProgram(this._object);\r\n    }\r\n\r\n    /**\r\n     * Deactivates this/any program for use.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    unbind(): void {\r\n        this._context.gl.useProgram(Program.DEFAULT_PROGRAM);\r\n    }\r\n\r\n\r\n    /**\r\n     * Requests the location of a uniform of the program.\r\n     * @param uniform - Uniform identifier to request location of.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    uniform(uniform: string): WebGLUniformLocation {\r\n        return this._context.gl.getUniformLocation(this._object, uniform);\r\n    }\r\n\r\n    /**\r\n     * Requests the location of an attribute of the program.\r\n     * @param attribute - Attribute identifier to request location of.\r\n     * @param location - Attribute location (if WebGL2 location is used)\r\n     * @returns - Location of the attribute (or location parameter if provided).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    attribute(attribute: string, location?: GLuint): GLint {\r\n        if (location !== undefined) {\r\n            logIf(this._linked, LogLevel.Debug,\r\n                `name-to-generic attribute index mapping does go into effect on next linking, ` +\r\n                `given ${attribute} -> ${location} (${this.identifier})`);\r\n\r\n            this._context.gl.bindAttribLocation(this._object, location, attribute);\r\n            return location as GLint;\r\n        } else {\r\n            return this._context.gl.getAttribLocation(this._object, attribute);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Provides access (leaky abstraction) to all shaders attached to this program.\r\n     */\r\n    get shaders(): Array<Shader> {\r\n        return this._shaders;\r\n    }\r\n\r\n    /**\r\n     * Read access the the program's link status. True if last linking was successful.\r\n     */\r\n    get linked(): boolean {\r\n        return this._linked;\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { Validator } from 'jsonschema';\r\n\r\nimport { assert, logIf, LogLevel } from './auxiliaries';\r\nimport { ChangeLookup } from './changelookup';\r\n\r\n/* spellchecker: enable */\r\n\r\n/* eslint-disable no-prototype-builtins */\r\n\r\n/**\r\n *\r\n * @param instance - Object to complement default values for.\r\n * @param schema - Schema used for validation.\r\n */\r\nfunction complementProperty(instance: any | undefined, schema: any): void {\r\n\r\n    const propertiesSchema = (schema as any)['properties'];\r\n    const props = Object.getOwnPropertyNames(propertiesSchema);\r\n\r\n    for (const key of props) {\r\n        const propertySchema = propertiesSchema[key];\r\n        const type: string | undefined = propertySchema['type'];\r\n\r\n        const isObject = type === 'object';\r\n        const isDefined = instance.hasOwnProperty(key);\r\n\r\n        const hasProperties = propertySchema.hasOwnProperty('properties');\r\n        const hasDefault = propertySchema.hasOwnProperty('default');\r\n\r\n        assert((hasProperties && isObject) || (!hasProperties && !isObject),\r\n            `expected property '${key}' to be of type 'object', given '${propertySchema['type']}'`);\r\n\r\n        if (isDefined && hasProperties) {\r\n            /* Invoke recursive defaulting for already defined object with properties. */\r\n            properties.complement(instance[key], propertySchema);\r\n\r\n        } else if (!isDefined && hasDefault) {\r\n            /* Default value for not yet defined property. */\r\n            Object.defineProperty(instance, key, {\r\n                value: propertySchema['default'],\r\n                writable: true,\r\n            });\r\n        }\r\n        // Don't complement non-existent objects on target tree\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * @param instance - Object to complement default values for.\r\n * @param schema - Schema used for validation.\r\n */\r\nfunction complementArray(instance: any | undefined, schema: any): void {\r\n\r\n    const itemsSchema = (schema as any)['items'];\r\n    if (itemsSchema['type'] !== 'object') {\r\n        return;\r\n    }\r\n    /* Invoke recursive defaulting for array of objects. */\r\n    for (const name of Object.getOwnPropertyNames(instance)) {\r\n        if (name === 'length') {\r\n            continue;\r\n        }\r\n        properties.complement(instance[name], itemsSchema);\r\n    }\r\n}\r\n\r\nnamespace properties {\r\n\r\n    /**\r\n     * Validates if an object (POJO/JSON) adheres to a specific structure using a JSON schema.\r\n     * @param instance - Object to validate.\r\n     * @param schema - JSON schema used for validation.\r\n     * @param references - Schema references for types etc.\r\n     * @returns - True iff the provided instance in valid according to the schema.\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n    export function validate(instance: any, schema: object, references?: Array<[object, string]>): boolean {\r\n        const validator = new Validator();\r\n        if (references !== undefined) {\r\n            for (const reference of references) {\r\n                validator.addSchema(reference[0], reference[1]);\r\n            }\r\n        }\r\n        /* Validate of (sub) schema of given POJO/JSON. */\r\n        const result = validator.validate(instance, schema);\r\n\r\n        logIf(!result.valid, LogLevel.Warning, `schema expected to be valid:\\n${result.toString()}`);\r\n        return result.valid;\r\n    }\r\n\r\n\r\n    /**\r\n     * Complements default values for all (nested) properties and array's of objects of a given object (POJO/JSON).\r\n     * ```\r\n     * const schema: any = { type: 'object', properties: {\r\n     *          foo: { type: 'object', properties: {\r\n     *              bar: { type: 'string', default: 'moep' },\r\n     *              baz: { type: 'string' } } } } };\r\n     *\r\n     * const object: any = { };\r\n     * JsonSchema.complement(object, schema);\r\n     * console.log(object.foo.bar); // should exist and output 'moep'\r\n     * ```\r\n     *\r\n     * @param instance - Object to complement default values for.\r\n     * @param schema - Schema used for validation.\r\n     */\r\n    export function complement(instance: any | undefined, schema: any): void {\r\n        if (instance === undefined) {\r\n            return;\r\n        }\r\n        assert((schema.hasOwnProperty('properties') && (schema as any)['type'] === 'object') ||\r\n            (schema.hasOwnProperty('items') && (schema as any)['type'] === 'array'),\r\n            `expected schema to have 'properties' or 'items', given ${schema}`);\r\n\r\n        // eslint-disable-next-line default-case\r\n        switch ((schema as any)['type']) {\r\n\r\n            case 'object':\r\n                complementProperty(instance, schema);\r\n                break;\r\n\r\n            case 'array':\r\n                complementArray(instance, schema);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Deep comparison of two objects. It returns whether or not changes have been found (returns true) or objects\r\n     * seem to be equal w.r.t. to their property structure and respective values (returns false). All changes that\r\n     * are found will be passed to the alteration lookup.\r\n     * @param objectL - Left operand for deep comparison.\r\n     * @param objectR - Right operand for deep comparison.\r\n     * @param lookup - Actual alteration lookup used for top-down property traversal.\r\n     * @returns - False iff both objects are equal w.r.t. structure and values. True otherwise.\r\n     */\r\n    export function compare(objectL: any | undefined, objectR: any | undefined,\r\n        tracker?: ChangeLookup, path: string = ''): boolean {\r\n\r\n        const track = tracker !== undefined;\r\n        // eslint-disable-next-line @typescript-eslint/ban-types\r\n        assert(!track || (tracker as object).hasOwnProperty('any'),\r\n            `expected allocation lookup object to have 'any' key`);\r\n\r\n        if ((objectL === undefined && objectR !== undefined) || (objectL !== undefined && objectR === undefined)) {\r\n            if (track) {\r\n                (tracker as ChangeLookup).alter(path);\r\n            }\r\n            return true;\r\n        }\r\n\r\n        let equals = true;\r\n\r\n        /* Primitive compare if at least one operand is neither object nor array. */\r\n        let types: [string, string] = [typeof objectL, typeof objectR];\r\n        const isArray: [boolean, boolean] = [objectL instanceof Array, objectR instanceof Array];\r\n\r\n        if ((!isArray[0] || !isArray[1]) && (types[0] !== 'object' || types[1] !== 'object')) {\r\n            equals = objectL === objectR;\r\n            if (!equals && track) {\r\n                (tracker as ChangeLookup).alter(`${path}`);\r\n            }\r\n            return !equals;\r\n        }\r\n\r\n        /* Get set of unique names of both objects. */\r\n        const names: Array<string> = Array.from(new Set<string>(\r\n            Array<string>().concat(Object.getOwnPropertyNames(objectL), Object.getOwnPropertyNames(objectR))).values());\r\n\r\n        /* Deep compare if both operands are either object or array. */\r\n        for (const name of names) {\r\n            if (name === 'length') {\r\n                continue;\r\n            }\r\n            const values = [(objectL as any)[name], (objectR as any)[name]];\r\n            types = [typeof values[0], typeof values[1]];\r\n\r\n            const propertyPath = `${path}${path.length > 0 && !isArray[0] ? '.' : ''}${!isArray[0] ? name : ''}`;\r\n\r\n            if ((values[0] instanceof Array && values[1] instanceof Array) ||\r\n                (types[0] === 'object' && types[1] === 'object')) {\r\n                equals = equals && !compare(values[0], values[1], tracker, propertyPath);\r\n            } else {\r\n                if (types[0] === types[1] && values[0] === values[1]) {\r\n                    continue;\r\n                }\r\n                equals = false;\r\n                if (track) {\r\n                    (tracker as ChangeLookup).alter(propertyPath);\r\n                }\r\n            }\r\n        }\r\n        return !equals;\r\n    }\r\n\r\n}\r\n\r\nexport = properties;\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { assert, rand } from './auxiliaries';\r\nimport { KernelF32 } from './kernel';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * Kernel providing random values in [-1,+1] for two components. The first sample is fixed at [0.0, 0.0] since the\r\n * kernel is intended for use of NDC offsets.\r\n *\r\n * Example for using this kernel:\r\n * ```\r\n * this._aaKernel.size = multiFrameNumber; // regenerates when multi-frame number changes\r\n * let ndcOffset = this._aaKernel.value(frameNumber);\r\n * ndcOffset[0] = ndcOffset[0] / this._intermediateFBO.width;\r\n * ndcOffset[1] = ndcOffset[1] / this._intermediateFBO.height;\r\n * ```\r\n */\r\nexport class RandomSquareKernel extends KernelF32 {\r\n\r\n    /**\r\n     * RandomSquareKernel is fixed to one-dimension (x-axis) and 2-components per sample.\r\n     * @param width - Width of the kernel along its x-axis.\r\n     */\r\n    constructor(width: GLsizei) {\r\n        super(2, width);\r\n        this.generate();\r\n    }\r\n\r\n    /**\r\n     * Generates for each sample random components in [-1.0, +1.0] except for the first.\r\n     */\r\n    protected generate(): void {\r\n        assert(this.width > 0, `expected every kernel to comprise at least one element`);\r\n        this.set([0.0, 0.0], 0);\r\n        for (let i = 1; i < this.width; ++i) {\r\n            this.set([rand(-0.5, +0.5), rand(-0.5, +0.5)], i);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * Seems to only work if the getter of this kernels width setter is redefined here.\r\n     */\r\n    get width(): GLsizei {\r\n        return this._width;\r\n    }\r\n\r\n    /**\r\n     * Changes the size of the kernel and triggers regeneration of all values.\r\n     */\r\n    set width(width: GLsizei) {\r\n        if (this._width === width) {\r\n            return;\r\n        }\r\n        this._width = width;\r\n        this.resize();\r\n        this.generate();\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { mat4, vec3, vec4 } from 'gl-matrix';\r\n\r\nimport { assert } from './auxiliaries';\r\nimport {\r\n    decode_float24x1_from_uint8x3,\r\n    decode_uint32_from_rgba8,\r\n} from './gl-matrix-extensions';\r\n\r\nimport { Context } from './context';\r\nimport { Framebuffer } from './framebuffer';\r\nimport { Initializable } from './initializable';\r\nimport { NdcFillingTriangle } from './ndcfillingtriangle';\r\nimport { Program } from './program';\r\nimport { Shader } from './shader';\r\nimport { Texture2D } from './texture2d';\r\nimport { GLsizei2 } from './tuples';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * This stage provides means to sample G-Buffers, in order to give access to world space coordinates, depth values and\r\n * IDs. World space coordinates are calculated by sampling the depth value and unprojecting the normalized device\r\n * coordinates. Depth and ID values are read from the GPU by rendering the requested pixel to a 1x1 texture and reading\r\n * back the value from this texture. Note that depth and ID values are cached as long as no redraw (frame) was invoked.\r\n */\r\nexport class ReadbackPass extends Initializable {\r\n\r\n    /**\r\n     * Read-only access to the objects context, used to get context information and WebGL API access.\r\n     */\r\n    protected _context: Context;\r\n\r\n\r\n    /** @see {@link cache} */\r\n    protected _cache = false;\r\n\r\n\r\n    /** @see {@link depthFBO} */\r\n    protected _depthFBO: Framebuffer;  // This is used if depth is already uint8x3 encoded\r\n\r\n    /** @see {@link depthAttachment} */\r\n    protected _depthAttachment: GLenum = 0;\r\n\r\n    /**\r\n     * Cache providing previously read depth values for a given position hash.\r\n     */\r\n    protected _cachedDepths = new Map<GLsizei, GLfloat | undefined>();\r\n\r\n\r\n    /** @see {@link idFBO} */\r\n    protected _idFBO: Framebuffer;\r\n\r\n    /** @see {@link idAttachment} */\r\n    protected _idAttachment: GLenum;\r\n\r\n    /**\r\n     * Cache providing previously read id values for a given position hash.\r\n     */\r\n    protected _cachedIDs = new Map<GLsizei, GLsizei | undefined>();\r\n\r\n\r\n    /**\r\n     * Buffer to read into.\r\n     */\r\n    protected _buffer = new Uint8Array(4);\r\n\r\n\r\n    /**\r\n     * Properties required for 24bit depth readback workaround. If a valid depth format is available as renderable\r\n     * texture format, a single fragment is rasterized in order to encode the depth of at a specific location into\r\n     * uint8x3 format, rendered into a RGBA texture for readback. This workaround is currently necessary since reading\r\n     * back depth buffer data is not supported. All following protected properties are undefined when this workaround\r\n     * is not required (i.e., in IE11), since the depth texture is already rendered explicitly in a previous render\r\n     * pass.\r\n     */\r\n    protected _texture: Texture2D;\r\n    protected _framebuffer: Framebuffer;\r\n\r\n    /**\r\n     * Coordinate reference size @see {@link coordinateReferenceSize}.\r\n     */\r\n    protected _referenceSize: GLsizei2 | undefined;\r\n\r\n\r\n    /**\r\n     * Geometry used to draw on. This is not provided by default to allow for geometry sharing. If no triangle is given,\r\n     * the ndc triangle will be created and managed internally.\r\n     */\r\n    protected _ndcTriangle: NdcFillingTriangle;\r\n\r\n    /**\r\n     * Tracks ownership of the ndc-filling triangle.\r\n     */\r\n    protected _ndcTriangleShared = false;\r\n\r\n\r\n    protected _program: Program;\r\n    protected _uOffset: WebGLUniformLocation;\r\n    protected _uScale: WebGLUniformLocation;\r\n\r\n\r\n    /**\r\n     * Read the the depth of a fragment in normalized device coordinates. The implementation of this function is\r\n     * assigned at initialization based on the available WebGL features.\r\n     * @param x - Horizontal coordinate for the upper left corner of the viewport origin.\r\n     * @param y - Vertical coordinate for the upper left corner of the viewport origin.\r\n     */\r\n    readDepthAt: (x: GLsizei, y: GLsizei) => Uint8Array;\r\n\r\n\r\n    /**\r\n     * Returns the maximal depth value that can be encoded when using a uint8[3] - @see{@link depthAt}.\r\n     */\r\n    static maxClearDepth(): GLfloat {\r\n        return decode_float24x1_from_uint8x3(vec3.fromValues(255, 255, 255));\r\n    }\r\n\r\n\r\n    constructor(context: Context) {\r\n        super();\r\n        this._context = context;\r\n    }\r\n\r\n\r\n    /**\r\n     * Frame implementation clearing depth and ID caches. To avoid unnecessary readbacks (potentially causing sync\r\n     * points), the requested and found IDs and depths are cached by position. Hence, these cached values have to be\r\n     * cleared whenever the framebuffers are written/rendered to.\r\n     */\r\n    protected onFrame(): void {\r\n        this._cachedDepths.clear();\r\n        this._cachedIDs.clear();\r\n    }\r\n\r\n\r\n    /**\r\n     * Create a numerical hash that can be used for efficient look-up (number preferred, no string for now). Note that\r\n     * the implementation assumes that we do not exceed 65k pixel in horizontal or vertical resolution soon.\r\n     * @param x - Horizontal coordinate from the upper left corner of the viewport origin.\r\n     * @param y - Vertical coordinate from the upper left corner of the viewport origin.\r\n     */\r\n    protected hash(x: GLsizei, y: GLsizei): GLsizei {\r\n        return 0xffff * y + x;\r\n    }\r\n\r\n    /**\r\n     * Implements the direct readback of uint8x3 encoded depth values from a given framebuffer (see depthFBO and\r\n     * depthAttachment).\r\n     * @param x - Horizontal coordinate from the upper left corner of the viewport origin.\r\n     * @param y - Vertical coordinate from the upper left corner of the viewport origin.\r\n     * @returns - An array with 4 uint8 entries, the first three of which encode the depth.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    protected directReadDepthAt(x: GLsizei, y: GLsizei): Uint8Array {\r\n        assert(this._depthFBO !== undefined && this._depthFBO.valid, `valid depth FBO expected for reading back depth`);\r\n        const texture = this._depthFBO.texture(this._depthAttachment) as Texture2D;\r\n\r\n        const gl = this._context.gl;\r\n        const size = texture.size;\r\n\r\n        this._depthFBO.bind();\r\n\r\n        const scale = this._referenceSize === undefined ? [1.0, 1.0] :\r\n            [size[0] / this._referenceSize[0], size[1] / this._referenceSize[1]];\r\n\r\n        if (this._context.isWebGL2 || this._context.supportsDrawBuffers) {\r\n            gl.readBuffer(this._depthAttachment);\r\n        }\r\n        gl.readPixels(x * scale[0], size[1] - y * scale[1], 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, this._buffer);\r\n        return this._buffer;\r\n    }\r\n\r\n\r\n    /**\r\n     * Implements the indirect readback of uint8x3 encoded depth values from a given framebuffer (see depthFBO and\r\n     * depthAttachment). This renders a single pixel (1x1 pixel viewport) with the depth fbo as texture and reads this\r\n     * afterwards. This is a fallback required when direct pixel read from depth attachments is not supported.\r\n     * @param x - Horizontal coordinate for the upper left corner of the viewport origin.\r\n     * @param y - Vertical coordinate for the upper left corner of the viewport origin.\r\n     * @returns - An array with 4 uint8 entries, the first three of which encode the depth.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    renderThenReadDepthAt(x: GLsizei, y: GLsizei): Uint8Array {\r\n        assert(this._depthFBO !== undefined && this._depthFBO.valid, `valid depth FBO expected for reading back depth`);\r\n        const texture = this._depthFBO.texture(this._depthAttachment) as Texture2D;\r\n\r\n        const gl = this._context.gl;\r\n        const size = texture.size;\r\n\r\n        const scale = this._referenceSize === undefined ? [1.0, 1.0] :\r\n            [size[0] / this._referenceSize[0], size[1] / this._referenceSize[1]];\r\n\r\n        /* Render a single fragment, thereby encoding the depth render texture data of the requested position. */\r\n        gl.viewport(0, 0, 1, 1);\r\n\r\n        this._program.bind();\r\n        gl.uniform2f(this._uOffset, x * scale[0] / size[0], (size[1] - y * scale[1]) / size[1]);\r\n        gl.uniform2f(this._uScale, 1.0 / size[0], 1.0 / size[1]);\r\n\r\n        texture.bind(gl.TEXTURE0);\r\n\r\n        this._framebuffer.bind();\r\n\r\n        this._ndcTriangle.bind();\r\n        this._ndcTriangle.draw();\r\n        this._ndcTriangle.unbind();\r\n\r\n        texture.unbind();\r\n\r\n        /** Every stage is expected to bind its own program when drawing, thus, unbinding is not necessary. */\r\n        // this._program.unbind();\r\n\r\n        if ((this._context.isWebGL2 || this._context.supportsDrawBuffers) && gl.readBuffer) {\r\n            gl.readBuffer(gl.COLOR_ATTACHMENT0);\r\n        }\r\n\r\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, this._buffer);\r\n        this._framebuffer.unbind();\r\n\r\n        return this._buffer;\r\n    }\r\n\r\n\r\n    /**\r\n     * Specializes this pass's initialization. If required. ad screen-filling triangle geometry and a single program\r\n     * are created. All attribute and dynamic uniform locations are cached.\r\n     * @param ndcTriangle - If specified, assumed to be used as shared geometry. If none is specified, a ndc-filling\r\n     * triangle will be created internally.\r\n     * @param direct - If depth is already uint8x3 encoded into a rgb/rgba target no readback workaround is required.\r\n     */\r\n    @Initializable.initialize()\r\n    initialize(ndcTriangle: NdcFillingTriangle | undefined, direct: boolean): boolean {\r\n        const gl = this._context.gl;\r\n        const gl2facade = this._context.gl2facade;\r\n\r\n        if (direct) {\r\n            this.readDepthAt = this.directReadDepthAt;\r\n            return true;\r\n        }\r\n\r\n        /* Configure read back for depth data. */\r\n        this.readDepthAt = this.renderThenReadDepthAt;\r\n\r\n\r\n        const vert = new Shader(this._context, gl.VERTEX_SHADER, 'ndcvertices.vert (readback)');\r\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n        vert.initialize(require('./shaders/ndcvertices.vert'));\r\n        const frag = new Shader(this._context, gl.FRAGMENT_SHADER, 'readbackdepth.frag');\r\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n        frag.initialize(require('./shaders/readbackdepth.frag'));\r\n\r\n        this._program = new Program(this._context, 'ReadbackDepthProgram');\r\n        this._program.initialize([vert, frag], false);\r\n\r\n        if (ndcTriangle === undefined) {\r\n            this._ndcTriangle = new NdcFillingTriangle(this._context);\r\n        } else {\r\n            this._ndcTriangle = ndcTriangle;\r\n            this._ndcTriangleShared = true;\r\n        }\r\n\r\n        if (!this._ndcTriangle.initialized) {\r\n            this._ndcTriangle.initialize();\r\n        }\r\n        this._program.attribute('a_vertex', this._ndcTriangle.vertexLocation);\r\n        this._program.link();\r\n\r\n        this._uOffset = this._program.uniform('u_offset');\r\n        this._program.bind();\r\n        gl.uniform1i(this._program.uniform('u_texture'), 0);\r\n        this._program.unbind();\r\n\r\n        /* Configure read back framebuffer and color attachment. */\r\n\r\n        this._texture = new Texture2D(this._context, 'ReadbackRenderTexture');\r\n        this._texture.initialize(1, 1, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE);\r\n\r\n        this._framebuffer = new Framebuffer(this._context, 'ReadbackFBO');\r\n        this._framebuffer.initialize([[gl2facade.COLOR_ATTACHMENT0, this._texture]]);\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Specializes this stage's uninitialization. Program and geometry resources are released (if allocated). Cached\r\n     * uniform and attribute locations are invalidated.\r\n     */\r\n    @Initializable.uninitialize()\r\n    uninitialize(): void {\r\n        if (this._context.isWebGL1 && !this._context.supportsDepthTexture) {\r\n            return;\r\n        }\r\n\r\n        if (!this._ndcTriangleShared && this._ndcTriangle.initialized) {\r\n            this._ndcTriangle.uninitialize();\r\n        }\r\n\r\n        this._program.uninitialize();\r\n\r\n        this._texture.uninitialize();\r\n        this._framebuffer.uninitialize();\r\n    }\r\n\r\n    /**\r\n     * Retrieve the depth of a fragment in normalized device coordinates. The implementation of this function is\r\n     * assigned at initialization based on the available WebGL features. Please note that in order to get the far plane\r\n     * depth at just below 1.0, the clear depth should be set to:\r\n     *     float24x1_from_uint8x3([255,255, 255]) = 0.9999999403953552\r\n     * This will result in a readback of [255, 255, 255] and is the deepest depth value representable using a uint8x3.\r\n     * Using 1.0 should result in [256, 0, 0] and would be easy to detect, however, it is somehow clamped to [255, 0, 0]\r\n     * which is highly misleading and actual not nearly the far plane's depth. Thus, if [255, 255, 255] is read back,\r\n     * undefined will be returned by this query and thereby reduce the effective depth range by 1 over 255^3 - sorry.\r\n     * @param x - Horizontal coordinate for the upper left corner of the viewport origin.\r\n     * @param y - Vertical coordinate for the upper left corner of the viewport origin.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    depthAt(x: GLsizei, y: GLsizei): GLfloat | undefined {\r\n\r\n        const hash = this.hash(x, y);\r\n        if (this._cache && this._cachedDepths.has(hash)) {\r\n            return this._cachedDepths.get(hash);\r\n        }\r\n\r\n        const buffer: Uint8Array = this.readDepthAt(x, y);\r\n\r\n        /* See notes above for more info on this weird convention. */\r\n        const depth: GLfloat | undefined = buffer[0] === 255 && buffer[1] === 255 && buffer[2] === 255 ?\r\n            undefined : decode_float24x1_from_uint8x3(vec3.fromValues(buffer[0], buffer[1], buffer[2]));\r\n\r\n        if (this._cache) {\r\n            this._cachedDepths.set(hash, depth);\r\n        }\r\n\r\n        return depth;\r\n    }\r\n\r\n    /**\r\n     * Retrieving the world space coordinate of a fragment.\r\n     * @param x - Horizontal coordinate for the upper left corner of the viewport origin.\r\n     * @param y - Vertical coordinate for the upper left corner of the viewport origin.\r\n     * @param zInNDC - optional depth parameter (e.g., from previous query).\r\n     * @param viewProjectionInverse - matrix used to unproject the coordinate from ndc to world space.\r\n     * @returns - The unprojected world space coordinate at location x, y.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    coordsAt(x: GLsizei, y: GLsizei, zInNDC: number | undefined, viewProjectionInverse: mat4): vec3 | undefined {\r\n        const size = (this._depthFBO.texture(this._depthAttachment) as Texture2D).size;\r\n        const depth = zInNDC === undefined ? this.depthAt(x, y) : zInNDC;\r\n        if (depth === undefined) {\r\n            return undefined;\r\n        }\r\n\r\n        const scale = this._referenceSize === undefined ? [1.0, 1.0] :\r\n            [size[0] / this._referenceSize[0], size[1] / this._referenceSize[1]];\r\n\r\n        const p = vec3.fromValues(\r\n            x * scale[0] * 2.0 / size[0] - 1.0, 1.0 - y * scale[1] * 2.0 / size[1], depth * 2.0 - 1.0);\r\n\r\n        return vec3.transformMat4(vec3.create(), p, viewProjectionInverse);\r\n    }\r\n\r\n    /**\r\n     * Retrieve the id of an object at fragment position.\r\n     * @param x - Horizontal coordinate for the upper left corner of the viewport origin.\r\n     * @param y - Vertical coordinate for the upper left corner of the viewport origin.\r\n     * @returns - The id rendered at location x, y.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    idAt(x: GLsizei, y: GLsizei): GLsizei | undefined {\r\n        const hash = this.hash(x, y);\r\n        if (this._cache && this._cachedIDs.has(hash)) {\r\n            return this._cachedIDs.get(hash);\r\n        }\r\n\r\n        const gl = this._context.gl;\r\n        const size = (this._idFBO.texture(this._idAttachment) as Texture2D).size;\r\n\r\n        const scale = this._referenceSize === undefined ? [1.0, 1.0] :\r\n            [size[0] / this._referenceSize[0], size[1] / this._referenceSize[1]];\r\n\r\n        this._idFBO.bind();\r\n        if (this._context.isWebGL2) {\r\n            gl.readBuffer(this._idAttachment);\r\n        }\r\n        gl.readPixels(x * scale[0], size[1] - y * scale[1], 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, this._buffer);\r\n\r\n        const id = decode_uint32_from_rgba8(\r\n            vec4.fromValues(this._buffer[0], this._buffer[1], this._buffer[2], this._buffer[3]));\r\n\r\n        if (this._cache) {\r\n            this._cachedIDs.set(hash, id);\r\n        }\r\n        return id;\r\n    }\r\n\r\n\r\n    /**\r\n     * Invokes the frame implementation @see{@link onFrame}.\r\n     */\r\n    frame(): void {\r\n        this.onFrame();\r\n    }\r\n\r\n\r\n    /**\r\n     * Whether or not caching of requested depths and ids should be used to reduce performance impact.\r\n     */\r\n    set cache(value: boolean) {\r\n        this._cache = value;\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets the framebuffer object that is to be used for depth readback.\r\n     * @param framebuffer - Framebuffer that is to be used for depth readback.\r\n     */\r\n    set depthFBO(framebuffer: Framebuffer) {\r\n        this._depthFBO = framebuffer;\r\n    }\r\n\r\n    /**\r\n     * Sets the framebuffer's {@link depthFBO} depth attachment that is to be used for depth readback.\r\n     * @param attachment - Depth attachment that is to be used for depth readback.\r\n     */\r\n    set depthAttachment(attachment: GLenum) {\r\n        this._depthAttachment = attachment;\r\n    }\r\n\r\n    /**\r\n     * Sets the framebuffer object that is to be used for id readback.\r\n     * @param framebuffer - Framebuffer that is to be used for id readback.\r\n     */\r\n    set idFBO(framebuffer: Framebuffer) {\r\n        this._idFBO = framebuffer;\r\n    }\r\n\r\n    /**\r\n     * Sets the framebuffer's {@link idFBO} id attachment that is to be used for id readback.\r\n     * @param attachment - ID attachment that is to be used for id readback.\r\n     */\r\n    set idAttachment(attachment: GLenum) {\r\n        this._idAttachment = attachment;\r\n    }\r\n\r\n    /**\r\n     * Sets the coordinate-reference size that is, if not undefined, used to scale incomming x and y coordinates.\r\n     * @param size - Size of the output, e.g., the canvas, the buffer is rendered to.\r\n     */\r\n    set coordinateReferenceSize(size: GLsizei2 | undefined) {\r\n        this._referenceSize = size;\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { assert } from './auxiliaries';\r\nimport { byteSizeOfFormat } from './formatbytesizes';\r\nimport { GLsizei2 } from './tuples';\r\n\r\nimport { Bindable } from './bindable';\r\nimport { Initializable } from './initializable';\r\nimport { AbstractObject } from './object';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * WebGL Renderbuffer implementation providing size accessors and requiring for bind, unbind, resize, validity, and\r\n * initialization implementations.\r\n * ```\r\n * @todo add usage example\r\n * ```\r\n */\r\nexport class Renderbuffer extends AbstractObject<WebGLRenderbuffer> implements Bindable {\r\n\r\n    /**\r\n     * Default renderbuffer, e.g., used for unbind.\r\n     */\r\n    static readonly DEFAULT_RENDER_BUFFER = undefined;\r\n\r\n    /** @see {@link width} */\r\n    protected _width: GLsizei;\r\n\r\n    /** @see {@link height} */\r\n    protected _height: GLsizei;\r\n\r\n    /**\r\n     * Cached internal format of the renderbuffer for efficient resize.\r\n     */\r\n    protected _internalFormat: GLenum | undefined = undefined;\r\n\r\n    /**\r\n     * Cached sample count for multisampling.\r\n     */\r\n    protected _samples: GLsizei;\r\n\r\n    /**\r\n     * Create a renderbuffer object on the GPU.\r\n     * @param width - Initial width of the renderbuffer.\r\n     * @param height - Initial height of the renderbuffer.\r\n     * @param internalFormat - Internal format of the renderbuffer data.\r\n     */\r\n    protected create(width: GLsizei, height: GLsizei, internalFormat: GLenum, samples = 1): WebGLRenderbuffer | undefined {\r\n        assert(width > 0 && height > 0, `renderbuffer object requires valid width and height greater than zero`);\r\n        const gl = this.context.gl;\r\n\r\n        this._object = gl.createRenderbuffer();\r\n\r\n        this._width = width;\r\n        this._height = height;\r\n        this._internalFormat = internalFormat;\r\n        this._samples = samples;\r\n\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, this._object);\r\n        if (this._samples > 1) {\r\n            gl.renderbufferStorageMultisample(gl.RENDERBUFFER, this._samples, internalFormat, width, height);\r\n        } else {\r\n            gl.renderbufferStorage(gl.RENDERBUFFER, internalFormat, width, height);\r\n        }\r\n        /* note that gl.isRenderbuffer requires the renderbuffer to be bound */\r\n        this._valid = gl.isRenderbuffer(this._object);\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, Renderbuffer.DEFAULT_RENDER_BUFFER);\r\n\r\n        const bytes: GLsizei = width * height * byteSizeOfFormat(this.context, internalFormat!);\r\n        this.context.allocationRegister.reallocate(this._identifier, bytes);\r\n\r\n        return this._object;\r\n    }\r\n\r\n    /**\r\n     * Delete the renderbuffer object on the GPU. This should have the reverse effect of `create`.\r\n     */\r\n    protected delete(): void {\r\n        assert(this._object instanceof WebGLRenderbuffer, `expected WebGLRenderbuffer object`);\r\n        this.context.gl.deleteRenderbuffer(this._object);\r\n\r\n        this._object = undefined;\r\n        this._valid = false;\r\n\r\n        this._internalFormat = undefined;\r\n\r\n        this._width = 0;\r\n        this._height = 0;\r\n    }\r\n\r\n\r\n    /**\r\n     * Bind the renderbuffer object.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    bind(): void {\r\n        this.context.gl.bindRenderbuffer(this.context.gl.RENDERBUFFER, this._object);\r\n    }\r\n\r\n    /**\r\n     * Unbind the renderbuffer object.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    unbind(): void {\r\n        this.context.gl.bindRenderbuffer(this.context.gl.RENDERBUFFER, Renderbuffer.DEFAULT_RENDER_BUFFER);\r\n    }\r\n\r\n    /**\r\n     * This should be used to implement efficient resize for all attachments.\r\n     * @param width - Targeted/new width of the renderbuffer in px.\r\n     * @param height - Targeted/new height of the renderbuffer in px.\r\n     * @param bind - Allows to skip binding the renderbuffer (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the renderbuffer (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    resize(width: GLsizei, height: GLsizei, bind: boolean = false, unbind: boolean = false): void {\r\n        if (width === this._width && height === this._height) {\r\n            return;\r\n        }\r\n        this._width = width;\r\n        this._height = height;\r\n\r\n        const gl = this.context.gl;\r\n\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n        if (this._samples > 1) {\r\n            gl.renderbufferStorageMultisample(gl.RENDERBUFFER, this._samples, this._internalFormat, width, height);\r\n        } else {\r\n            gl.renderbufferStorage(gl.RENDERBUFFER, this._internalFormat, width, height);\r\n        }\r\n        if (unbind) {\r\n            this.unbind();\r\n        }\r\n\r\n        // update allocated bytes\r\n        const bytes: GLsizei = width * height * byteSizeOfFormat(this.context, this._internalFormat!);\r\n        this.context.allocationRegister.reallocate(this._identifier, bytes);\r\n    }\r\n\r\n    /**\r\n     * Returns the number of bytes this object approximately allocates on the GPU.\r\n     */\r\n    get bytes(): GLsizei {\r\n        this.assertInitialized();\r\n        return this.context.allocationRegister.allocated(this._identifier);\r\n    }\r\n\r\n    /**\r\n     * Readonly access to the internal format of the renderbuffer object. This can only be changed by re-initialization.\r\n     */\r\n    get internalFormat(): GLenum {\r\n        this.assertInitialized();\r\n        return this._internalFormat!;\r\n    }\r\n\r\n    /**\r\n     * Convenience accessor: returns the width of the texture object.\r\n     */\r\n    get width(): GLsizei {\r\n        this.assertInitialized();\r\n        return this._width;\r\n    }\r\n\r\n    /**\r\n     * Convenience accessor: returns the height of the texture object.\r\n     */\r\n    get height(): GLsizei {\r\n        this.assertInitialized();\r\n        return this._height;\r\n    }\r\n\r\n    /**\r\n     * Convenience accessor: sample count for multisampling.\r\n     */\r\n    get samples(): GLsizei {\r\n        this.assertInitialized();\r\n        return this._samples;\r\n    }\r\n\r\n    /**\r\n     * Convenience accessor: if multisampling is enabled.\r\n     */\r\n    get multisampling(): boolean {\r\n        this.assertInitialized();\r\n        return this._samples > 1;\r\n    }\r\n\r\n    /**\r\n     * Convenience getter for the 2-tuple containing the render buffer's width and height.\r\n     * @see {@link width}\r\n     * @see {@link heigth}\r\n     */\r\n    get size(): GLsizei2 {\r\n        return [this.width, this.height];\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { Observable, ReplaySubject } from 'rxjs';\r\n\r\nimport { vec2, vec4 } from 'gl-matrix';\r\n\r\nimport { assert, logIf, LogLevel } from './auxiliaries';\r\nimport { clamp, v2 } from './gl-matrix-extensions';\r\n\r\nimport { ChangeLookup } from './changelookup';\r\nimport { Context } from './context';\r\nimport { Controllable } from './controller';\r\nimport { EventProvider } from './eventhandler'\r\nimport { Initializable } from './initializable';\r\nimport { GLclampf4, GLfloat2, GLsizei2, tuple2 } from './tuples';\r\nimport { Wizard } from './wizard';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * The interface to a callback that is called if the renderer is invalidated.\r\n */\r\nexport interface Invalidate { (force: boolean): void; }\r\n\r\nexport enum LoadingStatus {\r\n    Started,\r\n    Finished,\r\n}\r\n\r\n\r\n/**\r\n * Base class for hardware-accelerated processing and/or image-synthesis. It provides information such as the current\r\n * canvas, the canvas's size (native resolution), and the multi-frame number (for progressive rendering). A renderer's\r\n * properties are expected to be managed by its owning object or the canvas and should not be set directly/manually.\r\n * Alterations to these properties can be tracked with the `_altered` property. This allows an inheritor to implement\r\n * partial asset reallocation and, e.g., speed up dynamic multi-frame reconfiguration. The alterable object can be\r\n * extended using `Object.assign(this._alterable, ... some structure of booleans)`.\r\n *\r\n * This base class further provides the invalidate method that invokes an invalidation callback also provided by the\r\n * owning/controlling canvas.\r\n *\r\n * Since Initializable is extended, the initialization workflow applies to all specialized renderers (requires super\r\n * calls in constructor as well as in initialize and uninitialize).\r\n *\r\n * Note that a renderer is currently intended to always render to the canvas it is bound to. Hence, there is no\r\n * interface for setting a frame target.\r\n */\r\nexport abstract class Renderer extends Initializable implements Controllable {\r\n\r\n    /**\r\n     * The renderer's invalidation callback. This should usually be setup by the canvas and refer to a function in the\r\n     * canvas's controller, e.g., it should trigger an update within the controller.\r\n     */\r\n    protected _invalidate: Invalidate;\r\n\r\n    /** @see {@link context} */\r\n    protected _context: Context;\r\n\r\n\r\n    /**\r\n     * Alterable auxiliary object for tracking changes on renderer input and lazy updates.\r\n     */\r\n    protected readonly _altered = Object.assign(new ChangeLookup(), {\r\n        any: false, multiFrameNumber: false, frameSize: false, canvasSize: false, framePrecision: false,\r\n        clearColor: false, debugTexture: false,\r\n    });\r\n\r\n\r\n    /**\r\n     * This multi-frame number is for lazy reconfiguration and set on update. The inheritor can react to changes using\r\n     * this.altered.multiFrameNumber.\r\n     */\r\n    protected _multiFrameNumber: number;\r\n\r\n    /**\r\n     * Targeted resolution for image synthesis. This might differ from the canvas resolution and should be used in\r\n     * frame calls of inheritors.\r\n     */\r\n    protected _frameSize: GLsizei2 = [0, 0];\r\n\r\n    /**\r\n     * Actual, native resolution for the canvas currently in charge of controlling the renderer. This might differ from\r\n     * the targeted frame resolution but is required, e.g., for specific non-proportional ratios between frame size and\r\n     * canvas size.\r\n     */\r\n    protected _canvasSize: GLsizei2 = [0, 0];\r\n\r\n    /**\r\n     * Targeted frame precision, e.g., used for frame accumulation. Note that any renderer is currently\r\n     * expected to take advantage of progressive rendering (e.g., multi-frame sampling) and accumulation as well as a\r\n     * blit pass (since main intend is multi-frame based rendering).\r\n     */\r\n    protected _framePrecision: Wizard.Precision = Wizard.Precision.half;\r\n\r\n    /**\r\n     * The clear color, provided by the canvas the renderer is bound to. This is used in frame calls of inheritors.\r\n     */\r\n    protected _clearColor: GLclampf4 = [0.0, 0.0, 0.0, 1.0];\r\n\r\n\r\n    /**\r\n     * List of textures for debugging purposes such as normals, ids, depth, masks, etc. that can be populated by the\r\n     * inheritor. The index of a texture identifier can then be for specifying a debug output of a render texture.\r\n     */\r\n    protected _debugTextures = new Array<string>();\r\n\r\n    /**\r\n     * @see {@link debugTexture}\r\n     * This property can be observed, e.g., `aRenderer.debugTextureObservable.subscribe()`.\r\n     */\r\n    protected _debugTexture: GLint;\r\n    protected _debugTextureSubject = new ReplaySubject<GLint>(1);\r\n\r\n    /**\r\n     * @see {@link isLoading}\r\n     */\r\n    protected _isLoading: boolean;\r\n\r\n    /**\r\n     * This property can be observed via `aRenderer.loadingState$.observe()`. It is triggered when `finishLoading` or\r\n     * `startLoading` is called on this renderer.\r\n     */\r\n    protected _loadingStatusSubscription: ReplaySubject<LoadingStatus>;\r\n\r\n    /** @callback Invalidate\r\n     * A callback intended to be invoked whenever the specialized renderer itself or one of its objects is invalid. This\r\n     * callback should be passed during initialization to all objects that might handle invalidation internally as well.\r\n     * As a result, rendering of a new frame will be triggered and enforced.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    protected invalidate(force: boolean = false): void {\r\n        this._invalidate(force);\r\n    }\r\n\r\n\r\n    /**\r\n     * Utility for communicating this._debugTexture changes to its associated subject.\r\n     */\r\n    protected debugTextureNext(): void {\r\n        this._debugTextureSubject.next(this._debugTexture);\r\n    }\r\n\r\n    /**\r\n     * Context that can be used for processing and rendering as well as passed to rendering stages.\r\n     */\r\n    protected get context(): Context {\r\n        this.assertInitialized();\r\n        return this._context;\r\n    }\r\n\r\n    protected get canvasSize(): GLsizei2 {\r\n        this.assertInitialized();\r\n        return this._canvasSize;\r\n    }\r\n\r\n    /**\r\n     * Whether or not any of the (relevant/monitored) rendering properties has been altered. This concept should be used\r\n     * by other classes (e.g., camera, rendering stages) for detecting modifications relevant for rendering output.\r\n     */\r\n    protected get altered(): boolean {\r\n        return this._altered.any;\r\n    }\r\n\r\n\r\n    /**\r\n     * Actual initialize call specified by inheritor.\r\n     * @returns - whether initialization was successful\r\n     */\r\n    protected abstract onInitialize(context: Context, callback: Invalidate,\r\n        eventProvider: EventProvider): boolean;\r\n\r\n    /**\r\n     * Actual uninitialize call specified by inheritor.\r\n     */\r\n    protected abstract onUninitialize(): void;\r\n\r\n    /**\r\n     * Actual discard call specified by inheritor.\r\n     */\r\n    protected abstract onDiscarded(): void;\r\n\r\n\r\n    /**\r\n     * Actual update call specified by inheritor. This is invoked in order to check if rendering of a frame is required\r\n     * by means of implementation specific evaluation (e.g., lazy non continuous rendering). Regardless of the return\r\n     * value a new frame (preparation, frame, swap) might be invoked anyway, e.g., when update is forced or canvas or\r\n     * context properties have changed or the renderer was invalidated @see{@link invalidate}.\r\n     * @returns - Whether to redraw\r\n     */\r\n    protected abstract onUpdate(): boolean;\r\n\r\n    /**\r\n     * Actual prepare call specified by inheritor. This is invoked in order to prepare rendering of one or more frames.\r\n     * This should be used for rendering preparation, e.g., when using multi-frame rendering this might specify uniforms\r\n     * that do not change for every intermediate frame.\r\n     */\r\n    protected abstract onPrepare(): void;\r\n\r\n    /**\r\n     * Actual frame call specified by inheritor. After (1) update and (2) preparation are invoked, a frame is invoked.\r\n     * This should be used for actual rendering implementation.\r\n     */\r\n    protected abstract onFrame(frameNumber: number): void;\r\n\r\n    /**\r\n     * Actual swap call specified by inheritor. After (1) update, (2) preparation, and (3) frame are invoked, a swap\r\n     * might be invoked. In case of experimental batch rendering when using multi-frame a swap might be withhold for\r\n     * multiple frames. Any implementation is expected to ensure that contents of a frame to be on the OpenGL\r\n     * back buffer. The swap of front buffer and back buffer is scheduled after the invocation of this function by\r\n     * the browser.\r\n     */\r\n    protected onSwap(): void { /* default empty impl. */ }\r\n\r\n    /**\r\n     * This method needs to be called by a renderer, when a loading process is started in order to notify listeners via\r\n     * the observable loadingState$.\r\n     */\r\n    protected startLoading(): void {\r\n        this._isLoading = true;\r\n        this._loadingStatusSubscription.next(LoadingStatus.Started);\r\n    }\r\n\r\n    /**\r\n     * This method needs to be called when a loading process is finished in order to notify listeners via\r\n     * the observable loadingState$.\r\n     */\r\n    protected finishLoading(): void {\r\n        this._isLoading = false;\r\n        this._loadingStatusSubscription.next(LoadingStatus.Finished);\r\n    }\r\n\r\n    /**\r\n     * When extending (specializing) this class, initialize should initialize all required stages and allocate assets\r\n     * that are shared between multiple stages. Note that `super.initialize()` should always be called first when\r\n     * 'overriding' this function.\r\n     *\r\n     * Note: the context handle is stored in a property, but should be passed to the stages by specializing\r\n     * renderer instead. The renderer itself should not allocate rendering resources directly, thus, it should not\r\n     * require a webgl context.\r\n     *\r\n     * @param context - Wrapped gl context for function resolution (passed to all stages).\r\n     * @param callback - Functions that is invoked when the renderer (or any stage) is invalidated.\r\n     * @param eventProvider - Provider for mouse events referring to the canvas element.\r\n     */\r\n    @Initializable.initialize()\r\n    initialize(context: Context, callback: Invalidate,\r\n        eventProvider: EventProvider): boolean {\r\n\r\n        assert(context !== undefined, `valid webgl context required`);\r\n        this._context = context;\r\n        assert(callback !== undefined, `valid multi-frame update callback required`);\r\n        this._invalidate = callback;\r\n\r\n        this._isLoading = true;\r\n        this._loadingStatusSubscription = new ReplaySubject();\r\n\r\n        return this.onInitialize(context, callback, eventProvider);\r\n    }\r\n\r\n    /**\r\n     * Should release all assets and uninitialize all stages. `super.uninitialize()` should always be called first when\r\n     * overriding this function.\r\n     */\r\n    @Initializable.uninitialize()\r\n    uninitialize(): void {\r\n        this.onUninitialize();\r\n    }\r\n\r\n\r\n    /**\r\n     * Should discard all assets and uninitialize all stages. `super.discarded()` should always be called first when\r\n     * overriding this function.\r\n     */\r\n    @Initializable.discard()\r\n    public discard(): void {\r\n        this.onDiscarded();\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    @Initializable.assert_initialized()\r\n    update(multiFrameNumber: number): boolean {\r\n        if (this._canvasSize[0] !== this._context.gl.canvas.width ||\r\n            this._canvasSize[1] !== this._context.gl.canvas.height) {\r\n            this._canvasSize[0] = this._context.gl.canvas.width;\r\n            this._canvasSize[1] = this._context.gl.canvas.height;\r\n            this._altered.alter('canvasSize');\r\n        }\r\n        if (this._multiFrameNumber !== multiFrameNumber) {\r\n            this._multiFrameNumber = multiFrameNumber;\r\n            this._altered.alter('multiFrameNumber');\r\n        }\r\n        return this.onUpdate() || this._altered.any;\r\n    }\r\n\r\n    /**\r\n     * Prepares the rendering of the next frame (or subsequent frames when multi-frame rendering).\r\n     * This is part of the controllable interface. The renderer should reconfigure as lazy as possible.\r\n     * @param multiFrameNumber - The multi-frame number as requested by controller.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    prepare(): void {\r\n        this.onPrepare();\r\n    }\r\n\r\n    /**\r\n     * Controllable interface intended to trigger rendering of a full pass of the renderer that results in either an\r\n     * intermediate frame for accumulation to a full multi-frame or full frame for itself. The inheritor should invoke\r\n     * frames of relevant rendering and processing stages.\r\n     * @param frameNumber - The current frame number forwarded to onFrame.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    frame(frameNumber: number): void {\r\n        this.onFrame(frameNumber);\r\n    }\r\n\r\n    /**\r\n     * Interface intended to trigger swap (by controller).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    swap(): void {\r\n        this.onSwap();\r\n    }\r\n\r\n\r\n    /**\r\n     * Transforms local viewport coordinates into local intermediate frame coordinates.\r\n     * @param x - Horizontal coordinate for the upper left corner of the viewport origin.\r\n     * @param y - Vertical coordinate for the upper left corner of the viewport origin.\r\n     */\r\n    frameCoords(x: GLint, y: GLint): GLfloat2 {\r\n        const position = vec2.divide(v2(), this._frameSize, this.canvasSize);\r\n        vec2.floor(position, vec2.multiply(position, [x + 0.5, y + 0.5], position));\r\n        vec2.add(position, position, [0.5, 0.5]);\r\n        return tuple2<GLfloat>(position);\r\n    }\r\n\r\n    // /**\r\n    //  * @interface CoordsAccess\r\n    //  * Look up a fragments coordinates by unprojecting the depth using the renderer's camera.\r\n    //  * @param x - Horizontal coordinate for the upper left corner of the viewport origin.\r\n    //  * @param y - Vertical coordinate for the upper left corner of the viewport origin.\r\n    //  * @param zInNDC - optional depth parameter (e.g., from previous query).\r\n    //  * @returns - 3D coordinate reprojected from NDC/depth to world space.\r\n    //  */\r\n    // abstract coordsAt(x: GLint, y: GLint, zInNDC?: number, viewProjectionInverse?: mat4): vec3 | undefined;\r\n\r\n    // /**\r\n    //  * @interface IDAccess\r\n    //  * Look up an object id at a specific fragment.\r\n    //  * @param x - Horizontal coordinate for the upper left corner of the viewport origin.\r\n    //  * @param y - Vertical coordinate for the upper left corner of the viewport origin.\r\n    //  * @returns - ID encoded of an object rendered/visible at given position.\r\n    //  */\r\n    // abstract idAt(x: GLint, y: GLint): GLsizei | undefined;\r\n\r\n\r\n    /**\r\n     * Changes the frame size for rendering. This setter should only be used by the canvas this renderer is bound to.\r\n     * Changing the frame size invalidates the renderer.\r\n     *\r\n     * Note: the frame size is detached from the canvas size. When blitting the frame into the canvas, the frame is\r\n     * rescaled to fill or fit the canvas size.\r\n     *\r\n     * @param size - Resolution of the framebuffer.\r\n     */\r\n    set frameSize(size: GLsizei2) {\r\n        this.assertInitialized();\r\n        if (vec2.equals(this._frameSize, size)) {\r\n            return;\r\n        }\r\n        Object.assign(this._frameSize, size);\r\n        this._altered.alter('frameSize');\r\n        this.invalidate();\r\n    }\r\n\r\n    /**\r\n     * Set the frame precision.\r\n     * @param format - The accumulation format. Expected values are one of 'byte', 'half', 'float', or 'auto'\r\n     */\r\n    set framePrecision(precision: Wizard.Precision) {\r\n        this.assertInitialized();\r\n        if (this._framePrecision === precision) {\r\n            return;\r\n        }\r\n        this._framePrecision = precision;\r\n        this._altered.alter('framePrecision');\r\n        this.invalidate();\r\n    }\r\n\r\n    /**\r\n     * Sets the color used for clearing the background. This setter should only be used by the canvas this renderer is\r\n     * bound to. Changing the frame size invalidates the renderer.\r\n     * @param color - Red, green, blue, and alpha color components.\r\n     */\r\n    set clearColor(color: GLclampf4) {\r\n        this.assertInitialized();\r\n        if (vec4.equals(this._clearColor, color)) {\r\n            return;\r\n        }\r\n        Object.assign(this._clearColor, color);\r\n        this._altered.alter('clearColor');\r\n        this.invalidate();\r\n    }\r\n\r\n    /**\r\n     * Read only access to the renderers registered render textures that can be blit to the back buffer for debugging.\r\n     * @returns - Array of render texture identifiers.\r\n     */\r\n    get debugTextures(): Array<string> {\r\n        this.assertInitialized();\r\n        return this._debugTextures;\r\n    }\r\n\r\n    /**\r\n     * The render texture index for debug output. This is -1 when debug output is disabled. This should be used in\r\n     * the renderers swap implementation.\r\n     */\r\n    get debugTexture(): GLint {\r\n        this.assertInitialized();\r\n        return this._debugTexture;\r\n    }\r\n\r\n    /**\r\n     * Enables to specify the index of a render texture to be blit to the back buffer for debugging. This invalidates\r\n     * but should result in a blit only if nothing else changed. When the requested debug texture was blit (and\r\n     * debugTexture was actually altered) `this.debugTextureNext()` should be called to inform observers.\r\n     * @param index - Render texture index based on debuggableTextures array. This should be in [-1, length of array].\r\n     */\r\n    set debugTexture(index: GLint) {\r\n        this.assertInitialized();\r\n        if (this._debugTexture === index) {\r\n            return;\r\n        }\r\n        logIf(index >= this._debugTextures.length, LogLevel.Error, `invalid texture index, ` +\r\n            `debug texture disabled (index set to -1) | ${index} not in [-1,+${this._debugTextures.length - 1}]`);\r\n        this._debugTexture = index < this._debugTextures.length ?\r\n            clamp(index, -1, this._debugTextures.length - 1) : -1;\r\n        this._altered.alter('debugTexture');\r\n        this.invalidate();\r\n    }\r\n\r\n    /**\r\n     * Observable that can be used to subscribe to debug texture changes.\r\n     */\r\n    get debugTexture$(): Observable<GLint> {\r\n        return this._debugTextureSubject.asObservable();\r\n    }\r\n\r\n    /**\r\n     * This property indicated whether a loading process is currently in progress.\r\n     * It can be changed by calling `startLoading` or `finishLoading` on this renderer.\r\n     */\r\n    get isLoading(): boolean {\r\n        return this._isLoading;\r\n    }\r\n\r\n    /**\r\n     * Observable to subscribe to the current loading state of this renderer.\r\n     * Use `aRenderer.loadingStatus$.subscribe()` to register a new subscriber.\r\n     */\r\n    get loadingStatus$(): Observable<LoadingStatus> {\r\n        return this._loadingStatusSubscription.asObservable();\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { assert, log, logIf, LogLevel } from './auxiliaries';\r\nimport { GLfloat2, GLsizei2 } from './tuples';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * Mixin that incorporates resize event handling. The mixin depends on the global window resize event and forwards any\r\n * resize event to every existing instance of this class (global tracking).\r\n */\r\nexport abstract class Resizable {\r\n\r\n    /**\r\n     * Event identifier for resize event (single point of definition).\r\n     */\r\n    private static readonly EVENT_IDENTIFIER = 'resize';\r\n\r\n    /**\r\n     * Array for referencing all instances of resizable.\r\n     */\r\n    private static instances: Array<Resizable> = [];\r\n\r\n    /**\r\n     * Resize event availability (cached value).\r\n     */\r\n    private static eventSupported = false;\r\n\r\n\r\n    private static readonly MUTATION_OBSERVER_CONFIG = {\r\n        attributes: true,\r\n        attributeFilter: ['style', 'class'],\r\n        childList: true,\r\n        subtree: true,\r\n    };\r\n\r\n    /**\r\n     * Mutation observer for listening on element style changes.\r\n     */\r\n    private _mutationObserver: MutationObserver;\r\n\r\n    /**\r\n     * This function is called when the window is resized (and the event listener was successfully registered). The\r\n     * event is forwarded to each registered resizable object.\r\n     */\r\n    protected static resize(): void {\r\n        assert(Resizable.instances.length > 0, `resize event received without a single resizable registered`);\r\n        Resizable.instances.forEach((item) => item.onResize());\r\n    }\r\n\r\n    /* istanbul ignore next */\r\n    /**\r\n     * Retrieves the native width and height of a given element in device pixel (size on screen in physical pixels). If\r\n     * the element is not found, or either window or its device pixel ratio are not defined, a default vec2 is returned.\r\n     * If the canvas size is not yet computed, i.e., not provided in px unit, undefined will be return.\r\n     * @param element - DOM element to get the width and height in (native) pixel from.\r\n     * @returns - Size of the element in native screen pixels. Undefined when size is not available in 'px'.\r\n     */\r\n    static elementSize(element: HTMLElement): GLsizei2 | undefined {\r\n        if (element === undefined || window === undefined || typeof window.devicePixelRatio !== 'number') {\r\n            return [0, 0];\r\n        }\r\n\r\n        const scale = window.devicePixelRatio;\r\n        const style = getComputedStyle(element);\r\n\r\n        const pxUnits = style.width !== null && (style.width as string).endsWith('px') &&\r\n            style.height !== null && (style.height as string).endsWith('px');\r\n        if (!pxUnits) {\r\n            log(LogLevel.Debug, `computed element size expected in 'px', given ${style.width} ${style.height}`);\r\n            return undefined;\r\n        }\r\n        const sizef: GLfloat2 = [parseFloat(style.width as string), parseFloat(style.height as string)];\r\n        const size: GLsizei2 = [Math.round(sizef[0] * scale), Math.round(sizef[1] * scale)];\r\n\r\n        return size;\r\n    }\r\n\r\n\r\n    /**\r\n     * Every instance of resizable is registered in the global list of resizable instances. The first instance, however,\r\n     * triggers the registration of the global window resize event listener.\r\n     */\r\n    constructor() {\r\n        if (Resizable.instances.length === 0) { // initialize once\r\n            const event = `on${Resizable.EVENT_IDENTIFIER}`;\r\n\r\n            /* istanbul ignore next */\r\n            Resizable.eventSupported = document && (event in document.documentElement! || event in document.body);\r\n\r\n            logIf(!Resizable.eventSupported, LogLevel.Warning, `resize event not supported`);\r\n        }\r\n        /* istanbul ignore next */\r\n        if (Resizable.instances.length === 0 && Resizable.eventSupported) {\r\n            window.addEventListener(Resizable.EVENT_IDENTIFIER, this._resizeEventListener);\r\n        }\r\n        Resizable.instances.push(this);\r\n    }\r\n\r\n    /* istanbul ignore next */\r\n    protected _resizeEventListener = () => Resizable.resize();\r\n\r\n    /* istanbul ignore next */\r\n    protected _mutationEventListener = () => {\r\n        this._mutationObserver.takeRecords();\r\n        /* At this point, a test for actual change could be made, either by comparing to the previous size of the\r\n        computed style, or by comparing the style for differences in various style attributes... In both cases,\r\n        the implementation overhead seems huge. For now, the worst thing that might happen is a resize call, that does\r\n        not actually require to resize anything. In this case, all resize event invocations are expected to lazy-check\r\n        for changes, e.g., with previous frame or canvas size anyway. Skipping for now. */\r\n        Resizable.resize();\r\n    }\r\n\r\n\r\n    /**\r\n     * Observe a certain element for style or class mutations. Any mutation invokes the resize event.\r\n     * @param element - element that can be observed for style mutations (style mutation will trigger resize).\r\n     */\r\n    protected observe(element: HTMLElement): void {\r\n        /* Create mutation observer if none was created yet. */\r\n        if (element !== undefined) {\r\n            this._mutationObserver = new MutationObserver(this._mutationEventListener);\r\n        }\r\n        this._mutationObserver.observe(element, Resizable.MUTATION_OBSERVER_CONFIG);\r\n    }\r\n\r\n\r\n    /**\r\n     * Unregister this instance from the global list of resizable instances. On destruction of the last instance, the\r\n     * resize event handle is removed. Please note that destruction needs to be invoked explicitly.\r\n     */\r\n    protected dispose(): void {\r\n        const i = Resizable.instances.indexOf(this);\r\n        assert(i !== -1, `invalid reference counting of resizable instances`);\r\n\r\n        Resizable.instances.splice(i, 1);\r\n\r\n        /* istanbul ignore next */\r\n        if (Resizable.instances.length === 0 && Resizable.eventSupported) {\r\n            window.removeEventListener(Resizable.EVENT_IDENTIFIER, this._resizeEventListener);\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        if (this._mutationObserver) {\r\n            this._mutationObserver.disconnect();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * This function is invoked when a resize event happened.\r\n     */\r\n    protected abstract onResize(): void;\r\n\r\n}\r\n","\r\nimport { mat4 } from 'gl-matrix';\r\nimport { assert } from '../auxiliaries';\r\nimport { GLclampf4, GLfloat2 } from '../tuples';\r\n\r\nimport { Camera } from '../camera';\r\nimport { ChangeLookup } from '../changelookup';\r\nimport { Context } from '../context';\r\nimport { Framebuffer } from '../framebuffer';\r\nimport { Geometry } from '../geometry';\r\nimport { Initializable } from '../initializable';\r\nimport { Program } from '../program';\r\nimport { GeometryComponent } from './geometrycomponent';\r\nimport { Material } from './material';\r\nimport { SceneNode } from './scenenode';\r\nimport { SceneRenderPass } from './scenerenderpass';\r\nimport { TransformComponent } from './transformcomponent';\r\n\r\n\r\n/**\r\n * This class renders a SceneNode hierarchy. It uses one single program for rendering the whole scene.\r\n * If different programs are necessary to render a scene, multiple SceneNodes should be used for each\r\n * program that is used.\r\n * This renderpass calls callbacks such as `updateModelTransform`, which have to be set by the renderer\r\n * using this renderpass.\r\n */\r\nexport class ForwardSceneRenderPass extends SceneRenderPass {\r\n\r\n    /**\r\n     * Alterable auxiliary object for tracking changes on render pass inputs and lazy updates.\r\n     */\r\n    protected readonly _altered = Object.assign(new ChangeLookup(), {\r\n        any: false,\r\n        camera: false,\r\n    });\r\n\r\n    /** @see {@link target} */\r\n    protected _target: Framebuffer;\r\n\r\n    /** @see {@link camera} */\r\n    protected _camera: Camera;\r\n\r\n    /** @see {@link ndcOffset} */\r\n    protected _ndcOffset: GLfloat2;\r\n\r\n    /** @see {@link clearColor} */\r\n    protected _clearColor: GLclampf4;\r\n\r\n    /** @see {@link program} */\r\n    protected _program: Program;\r\n\r\n    /**\r\n     * These maps are used to map from a material to all geometries using this material.\r\n     * Alongside the geometry a transform is saved, that is generated during a preprocessing traverse.\r\n     */\r\n    protected _opaqueGeometryMap: Map<Material, Array<[Geometry, mat4]>>;\r\n    protected _transparentGeometryMap: Map<Material, Array<[Geometry, mat4]>>;\r\n\r\n    updateModelTransform: (matrix: mat4) => void;\r\n    updateViewProjectionTransform: (matrix: mat4) => void;\r\n    bindMaterial: (material: Material) => void;\r\n    bindGeometry: (geometry: Geometry) => void;\r\n    bindUniforms: () => void;\r\n\r\n    /**\r\n     * Creates a pass that renders a SceneNode and all of its children.\r\n     * @param context - @todo The WebGL context for rendering the scene.\r\n     */\r\n    constructor(context: Context) {\r\n        super();\r\n        this._context = context;\r\n\r\n        this._opaqueGeometryMap = new Map();\r\n        this._transparentGeometryMap = new Map();\r\n    }\r\n\r\n    /**\r\n     * Sort all geometries by their material and save their transform given by a scene traversal.\r\n     * With this information, rendering can be sped up later on by avoiding material changes\r\n     * during rendering of the scene.\r\n     */\r\n    protected preprocessScene(): void {\r\n        assert(this._scene !== undefined, 'Scene was undefined during preprocessing.');\r\n\r\n        if (this._scene === undefined) {\r\n            return;\r\n        }\r\n\r\n        this._opaqueGeometryMap.clear();\r\n        this._transparentGeometryMap.clear();\r\n\r\n        this.preprocessNode(this._scene!, mat4.create());\r\n    }\r\n\r\n    /**\r\n     * Handle a single node during preprocessing. Each GeometryComponent of the node will be added\r\n     * to the preprocessing maps.\r\n     * Afterwards all children of the node will also be processed recursively.\r\n     */\r\n    protected preprocessNode(node: SceneNode, transform: mat4): void {\r\n        const nodeTransform = mat4.clone(transform);\r\n\r\n        const transformComponents = node.componentsOfType('TransformComponent');\r\n        assert(transformComponents.length <= 1, `SceneNode can not have more than one transform component`);\r\n\r\n        if (transformComponents.length === 1) {\r\n            const transformComponent = transformComponents[0] as TransformComponent;\r\n            mat4.mul(nodeTransform, nodeTransform, transformComponent.transform);\r\n        }\r\n\r\n        const geometryComponents = node.componentsOfType('GeometryComponent');\r\n\r\n        for (const geometryComponent of geometryComponents) {\r\n            const currentComponent = geometryComponent as GeometryComponent;\r\n            const material = currentComponent.material;\r\n            const geometry = currentComponent.geometry;\r\n\r\n            if (material.isTransparent) {\r\n                let map = this._transparentGeometryMap.get(material);\r\n                if (map === undefined) {\r\n                    map = [];\r\n                }\r\n\r\n                map.push([geometry, nodeTransform]);\r\n                this._transparentGeometryMap.set(material, map);\r\n            } else {\r\n                let map = this._opaqueGeometryMap.get(material);\r\n                if (map === undefined) {\r\n                    map = [];\r\n                }\r\n\r\n                map.push([geometry, nodeTransform]);\r\n                this._opaqueGeometryMap.set(material, map);\r\n            }\r\n        }\r\n\r\n        if (node.nodes === undefined) {\r\n            return;\r\n        }\r\n\r\n        for (const child of node.nodes) {\r\n            this.preprocessNode(child, nodeTransform);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Render a preprocessed map, where geometries are already sorted by material.\r\n     * Thus, each material only needs to be bound once.\r\n     */\r\n    protected renderGeometryMap(map: Map<Material, Array<[Geometry, mat4]>>): void {\r\n        for (const material of Array.from(map.keys())) {\r\n            this.bindMaterial(material);\r\n\r\n            const geometryTuples = map.get(material)!;\r\n            for (const [geometry, transform] of geometryTuples) {\r\n                geometry.bind();\r\n                if (this.bindGeometry !== undefined) {\r\n                    this.bindGeometry(geometry);\r\n                }\r\n                this.updateModelTransform(transform);\r\n\r\n                geometry.draw();\r\n                geometry.unbind();\r\n            }\r\n        }\r\n    }\r\n\r\n    @Initializable.initialize()\r\n    initialize(): boolean {\r\n        return true;\r\n    }\r\n\r\n    @Initializable.uninitialize()\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    uninitialize(): void { }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    prepare(): void { }\r\n\r\n    /**\r\n     * @param override - If enabled, everything will be updated, regardless of tracked alterations.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\r\n    update(override: boolean = false): void { }\r\n\r\n    /**\r\n     * Triggers rendering a frame of the given hierarchy. All nodes in the hierarchy will be visited recursively\r\n     * and rendered. If nodes contain transformations, they are applied and used for the whole subtree.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    frame(): void {\r\n        assert(this._target && this._target.valid, `valid target expected`);\r\n        assert(this._program && this._program.valid, `valid program expected`);\r\n\r\n        assert(this.updateModelTransform !== undefined,\r\n            `Model transform function needs to be initialized.`);\r\n        assert(this.updateViewProjectionTransform !== undefined,\r\n            `View Projection transform function needs to be initialized.`);\r\n        assert(this.bindMaterial !== undefined,\r\n            `Material binding function needs to be initialized.`);\r\n\r\n        if (this._scene === undefined) {\r\n            return;\r\n        }\r\n\r\n        const gl = this._context.gl;\r\n\r\n        // gl.disable(gl.CULL_FACE);\r\n        // gl.cullFace(gl.BACK);\r\n        gl.enable(gl.DEPTH_TEST);\r\n\r\n        const size = this._target.size;\r\n        gl.viewport(0, 0, size[0], size[1]);\r\n\r\n        const c = this._clearColor;\r\n        gl.clearColor(c[0], c[1], c[2], c[3]);\r\n\r\n        this._target.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT, true, false);\r\n\r\n        this._program.bind();\r\n\r\n        if (this.bindUniforms !== undefined) {\r\n            this.bindUniforms();\r\n        }\r\n\r\n        this.updateViewProjectionTransform(this._camera.viewProjection);\r\n\r\n        this.drawCalls();\r\n\r\n        this._program.unbind();\r\n\r\n        // gl.cullFace(gl.BACK);\r\n        // gl.disable(gl.CULL_FACE);\r\n        gl.disable(gl.BLEND);\r\n    }\r\n\r\n    /**\r\n     * Encapsulates the draw calls made to webgl. This is useful if state should not be changed before rendering,\r\n     * e.g. for shadow mapping.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    drawCalls(renderTransparentMaterials: boolean = true): void {\r\n        if (this._scene === undefined) {\r\n            return;\r\n        }\r\n\r\n        /**\r\n         * Render geometries by material.\r\n         * First render opaque materials, then transparent ones.\r\n         */\r\n        this.renderGeometryMap(this._opaqueGeometryMap);\r\n\r\n        if (renderTransparentMaterials) {\r\n            this.renderGeometryMap(this._transparentGeometryMap);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the framebuffer the quads are rendered to.\r\n     * @param target - Framebuffer to render into.\r\n     */\r\n    set target(target: Framebuffer) {\r\n        this.assertInitialized();\r\n        this._target = target;\r\n    }\r\n\r\n    /**\r\n     * The NDC offset is used for vertex displacement within subpixel space for anti-aliasing over\r\n     * multiple intermediate frames (multi-frame sampling).\r\n     * @param offset - Subpixel offset used for vertex displacement (multi-frame anti-aliasing).\r\n     */\r\n    set ndcOffset(offset: GLfloat2) {\r\n        this.assertInitialized();\r\n        this._ndcOffset = offset;\r\n    }\r\n\r\n    /**\r\n     * The camera's viewProjection is used for 3D label placement calculation.\r\n     */\r\n    set camera(camera: Camera) {\r\n        this.assertInitialized();\r\n        if (this._camera === camera) {\r\n            return;\r\n        }\r\n        this._camera = camera;\r\n        this._altered.alter('camera');\r\n    }\r\n\r\n    /**\r\n     * Sets the clear color for rendering.\r\n     */\r\n    set clearColor(color: GLclampf4) {\r\n        this._clearColor = color;\r\n    }\r\n\r\n    set program(program: Program) {\r\n        this._program = program;\r\n    }\r\n}\r\n","\r\nimport { SceneNodeComponent } from './scenenodecomponent';\r\n\r\nimport { Geometry } from '../geometry';\r\nimport { Material } from './material';\r\n\r\n/**\r\n * This component specifies the geometry contained in a `SceneNode`.\r\n * Multiple of these components can be present in a single `SceneNode`.\r\n */\r\nexport class GeometryComponent extends SceneNodeComponent {\r\n\r\n    protected _geometry: Geometry;\r\n    protected _material: Material;\r\n\r\n    constructor() {\r\n        super('GeometryComponent');\r\n    }\r\n\r\n    set geometry(geometry: Geometry) {\r\n        this._geometry = geometry;\r\n    }\r\n\r\n    get geometry(): Geometry {\r\n        return this._geometry;\r\n    }\r\n\r\n    set material(material: Material) {\r\n        this._material = material;\r\n    }\r\n\r\n    get material(): Material {\r\n        return this._material;\r\n    }\r\n}\r\n","\r\nexport { ForwardSceneRenderPass } from './forwardscenerenderpass';\r\nexport { SceneNode } from './scenenode';\r\nexport { SceneNodeComponent } from './scenenodecomponent';\r\nexport { TransformComponent } from './transformcomponent';\r\nexport { GeometryComponent } from './geometrycomponent';\r\nexport { Material } from './material';\r\nexport { SceneRenderPass } from './scenerenderpass';\r\n","import { Context } from '../context';\r\n\r\nexport abstract class Material {\r\n\r\n    protected _context: Context;\r\n    protected _name: string;\r\n    protected _isTransparent: boolean;\r\n\r\n    constructor(context: Context, name: string) {\r\n        this._context = context;\r\n        this._name = name;\r\n        this._isTransparent = false;\r\n    }\r\n\r\n    get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    get isTransparent(): boolean {\r\n        return this._isTransparent;\r\n    }\r\n\r\n    set isTransparent(val: boolean) {\r\n        this._isTransparent = val;\r\n    }\r\n}\r\n","\r\n\r\nimport { SceneNodeComponent } from './scenenodecomponent';\r\n\r\n\r\n/**\r\n * This class describes a node in a scene hierarchy. To render a scene, a renderer can traverse the hierarchy\r\n * of SceneNodes, while recursively applying the transformations specfied by each node.\r\n * Every node contains components that describe the contents of the node, e.g. the contained geometry or the\r\n * applied transformation.\r\n */\r\nexport class SceneNode {\r\n\r\n    /** @see {@link name} */\r\n    protected _name: string;\r\n\r\n    /** @see {@link parent} */\r\n    protected _parent: SceneNode | undefined;\r\n\r\n    /** @see {@link nodes} */\r\n    protected _nodes = new Array<SceneNode>();\r\n\r\n    /** @see {@link components} */\r\n    protected _components = new Array<SceneNodeComponent>();\r\n\r\n\r\n    /**\r\n     * Constucts a new scene node\r\n     * @param name - The name of the new node\r\n     */\r\n    constructor(name: string) {\r\n        this._name = name;\r\n        this._parent = undefined;\r\n    }\r\n\r\n\r\n    /**\r\n     * Traverses the node hierarchy starting at this node and applies the given callback to each node.\r\n     * @param callback - Function that will be called for each node in the tree.\r\n     */\r\n    traverse(callback: SceneNode.NodeCallback): void {\r\n        callback(this);\r\n\r\n        /* Forwarding traversal. */\r\n        for (const child of this._nodes) {\r\n            child.traverse(callback);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Add a child node to this node.\r\n     * @param node - The child that will be added\r\n     */\r\n    addNode(node: SceneNode): SceneNode {\r\n        node._parent = this;\r\n        this._nodes.push(node);\r\n\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * Add a component to this node.\r\n     * @param component - Component to add\r\n     */\r\n    addComponent(component: SceneNodeComponent): SceneNodeComponent {\r\n        this._components.push(component);\r\n\r\n        return component;\r\n    }\r\n\r\n    /**\r\n     * Find all components of a specfic type that are registered on this node.\r\n     * @param type - @todo Name of component type to search for\r\n     */\r\n    componentsOfType(type: string): Array<SceneNodeComponent> {\r\n        return this._components.filter((component: SceneNodeComponent) => type === component.type);\r\n    }\r\n\r\n\r\n    /**\r\n     * Read-only access to the name of this node.\r\n     */\r\n    get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    /**\r\n     * Read-only access to the parent node of this node if one exists.\r\n     */\r\n    get parent(): SceneNode | undefined {\r\n        return this._parent;\r\n    }\r\n\r\n    /**\r\n     * Read-only access to the child nodes of this node.\r\n     */\r\n    get nodes(): Array<SceneNode> | undefined {\r\n        return this._nodes;\r\n    }\r\n\r\n    /**\r\n     * Read-only access to the components attached to this node.\r\n     */\r\n    get components(): Array<SceneNodeComponent> {\r\n        return this._components;\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns whether this node is a leaf, i.e. there are no child nodes attached to it.\r\n     */\r\n    get isLeaf(): boolean {\r\n        return this._nodes.length === 0;\r\n    }\r\n\r\n    /**\r\n     * Returns whether this is the root node, i.e. it has no parent.\r\n     */\r\n    get isRoot(): boolean {\r\n        return this._parent === undefined;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport namespace SceneNode {\r\n\r\n    export interface NodeCallback { (node: SceneNode): void; }\r\n\r\n}\r\n","\r\n\r\n/**\r\n * This is the base class for components that can be added to a `SceneNode`.\r\n */\r\nexport abstract class SceneNodeComponent {\r\n\r\n    /** @see {@link type} */\r\n    protected _type: string;\r\n\r\n\r\n    constructor(type: string) {\r\n        this._type = type;\r\n    }\r\n\r\n    /**\r\n     * The name of this type of component. This can be used by `SceneNode` to filter specific component types.\r\n     */\r\n    get type(): string {\r\n        return this._type;\r\n    }\r\n}\r\n","\r\nimport { Context } from '../context';\r\nimport { Initializable } from '../initializable';\r\nimport { SceneNode } from './scenenode';\r\n\r\n\r\n/**\r\n * This is the base class for all render passes that render scenes.\r\n * A `SceneNode` must be given, which is the root node that will be rendered.\r\n * All children of this node will be rendered recursively.\r\n */\r\nexport abstract class SceneRenderPass extends Initializable {\r\n\r\n    /**\r\n     * Context, used to get context information and WebGL API access.\r\n     */\r\n    protected _context: Context;\r\n\r\n\r\n    /** @see {@link scene} */\r\n    protected _scene: SceneNode | undefined;\r\n\r\n    /**\r\n     * This method is called after a new scene is registered in a SceneRenderPass.\r\n     * It can be used to preprocess the scene hierarchy to allow preprocessing tasks\r\n     * that will speedup the rendering later on.\r\n     */\r\n    protected abstract preprocessScene(): void;\r\n\r\n    /**\r\n     * @todo comment\r\n     */\r\n    abstract update(): void;\r\n\r\n    /**\r\n     * @todo comment\r\n     */\r\n    abstract prepare(): void;\r\n\r\n    /**\r\n     * @todo comment\r\n     */\r\n    abstract frame(): void;\r\n\r\n    /**\r\n     * Setter for the scene of this render pass.\r\n     * @param scene - Scene to be rendered\r\n     */\r\n    set scene(scene: SceneNode | undefined) {\r\n        this._scene = scene;\r\n\r\n        if (this._scene !== undefined) {\r\n            this.preprocessScene();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The scene which will be rendered by this pass.\r\n     */\r\n    get scene(): SceneNode | undefined {\r\n        return this._scene;\r\n    }\r\n\r\n}\r\n","\r\nimport { SceneNodeComponent } from './scenenodecomponent';\r\n\r\nimport { mat4 } from 'gl-matrix';\r\n\r\n/**\r\n * This component specified the transformation that a `SceneNode` applies in the scene hierarchy.\r\n * Renderers should check if this component exists on a given node and apply the transformation in this case.\r\n * Otherwise no transformation should be applied by a node.\r\n */\r\nexport class TransformComponent extends SceneNodeComponent {\r\n\r\n    protected _transform: mat4;\r\n\r\n    constructor(transform: mat4) {\r\n        super('TransformComponent');\r\n\r\n        this._transform = transform;\r\n    }\r\n\r\n    get transform(): mat4 {\r\n        return this._transform;\r\n    }\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { assert, log, LogLevel } from './auxiliaries';\r\n\r\nimport { Context } from './context';\r\nimport { AbstractObject } from './object';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * WebGL shader wrapper encapsulating shader creation, compilation, and deletion. A shader can be attached to multiple\r\n * Programs for linking, and can be deleted if detached from all (linked) programs. The expected default behavior is to\r\n * create a shader, attach it to programs, and  discard is immediately after all programs are created (linked). If,\r\n * however, the source of a shader needs to be changed, e.g., for replacements or other modifications, the shader\r\n * object should be kept and, on change, all programs that have the shader attached have to be invalidated/relinked\r\n * manually.\r\n *\r\n * ```\r\n * var frag = new gloperate.Shader(context, context.gl.FRAGMENT_SHADER, 'EmptyFragmentShader');\r\n * var vert = new gloperate.Shader(context, context.gl.VERTEX_SHADER, 'EmptyVertexShader');\r\n * vert.initialize('void main() { }');\r\n * frag.initialize('void main() { }');\r\n *\r\n * var prog = new gloperate.Program(context, 'EmptyProgram');\r\n * prog.initialize([frag, vert]);\r\n * ```\r\n */\r\nexport class Shader extends AbstractObject<WebGLShader> {\r\n\r\n    /** @see {@link type} */\r\n    protected _type: GLenum;\r\n\r\n    /** @see {@link source} */\r\n    protected _source: string;\r\n\r\n    /** @see {@link compiled} */\r\n    protected _compiled = false;\r\n\r\n    /**\r\n     * Map of replacement strings and the value to replace them with.\r\n     */\r\n    protected _replacements: undefined | Map<string, string>;\r\n\r\n\r\n    /**\r\n     * Object constructor, requires a context and a valid identifier.\r\n     * @param context - Valid context to create the object for.\r\n     * @param type - Either GL_VERTEX_SHADER or GL_FRAGMENT_SHADER.\r\n     * @param identifier - Meaningful name for identification of this instance.\r\n     */\r\n    constructor(context: Context, type: GLenum, identifier?: string) {\r\n        super(context, identifier);\r\n\r\n        const gl = context.gl;\r\n        if (identifier === undefined) {\r\n            switch (type) {\r\n                case context.gl.FRAGMENT_SHADER:\r\n                    identifier = 'FragmentShader';\r\n                    break;\r\n                case context.gl.VERTEX_SHADER:\r\n                    identifier = 'VertexShader';\r\n                    break;\r\n                default:\r\n                    assert(false, `expected either a FRAGMENT_SHADER (${gl.FRAGMENT_SHADER}) ` +\r\n                        `or a VERTEX_SHADER (${gl.VERTEX_SHADER}), given ${type}`);\r\n            }\r\n        }\r\n\r\n        this._type = type;\r\n    }\r\n\r\n    /**\r\n     * Creates a shader, sets the shader source, and compiles the shader. If the shader source cannot be compiled, the\r\n     * identifier and an info log are logged to console and the shader object is deleted. Note that a '#version 300 es'\r\n     * is added in case the shader source is compiled in a WebGL2 context.\r\n     * @param source - Shader source.\r\n     * @param compile - Whether or not to compile the shader immediately if a source is provided.\r\n     * @returns - Either a new shader or undefined if compilation failed.\r\n     */\r\n    protected create(source?: string, compile: boolean = true): WebGLShader | undefined {\r\n        const gl = this._context.gl;\r\n        this._object = gl.createShader(this._type);\r\n\r\n        this._valid = gl.isShader(this._object);\r\n        this._compiled = false;\r\n\r\n        assert(this._object instanceof WebGLShader, `expected WebGLShader object to be created`);\r\n\r\n        if (source) {\r\n            this.source = source;\r\n        }\r\n        if (source && compile) {\r\n            this.compile();\r\n        }\r\n        return this._object;\r\n    }\r\n\r\n    /**\r\n     * Delete the shader object. This should have the reverse effect of `create`.\r\n     */\r\n    protected delete(): void {\r\n        assert(this._object !== undefined, `expected WebGLShader object`);\r\n        this._context.gl.deleteShader(this._object);\r\n        this._object = undefined;\r\n        this._valid = false;\r\n        this._compiled = false;\r\n    }\r\n\r\n\r\n    /**\r\n     * Triggers recompilation of a shader. This is usually used internally automatically, but exposed here for leaky\r\n     * abstraction. It should not be required to invoke this manually in most cases. The shader object is marked as\r\n     * compiled iff the source compiled successfully. Note that invalidation of all programs this shader is attached\r\n     * to needs to be done manually.\r\n     */\r\n    compile(): void {\r\n        const gl = this._context.gl;\r\n\r\n        let source = this.sourceWithReplacements;\r\n        if (this._context.isWebGL2) {\r\n            source = `#version 300 es\\n${source}`;\r\n        }\r\n\r\n        gl.shaderSource(this._object, source);\r\n        gl.compileShader(this._object);\r\n\r\n        this._compiled = gl.getShaderParameter(this._object, gl.COMPILE_STATUS);\r\n        if (!this._compiled) {\r\n            const infoLog: string = gl.getShaderInfoLog(this._object);\r\n            log(LogLevel.Error, `compilation of shader '${this._identifier}' failed: ${infoLog}`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds a search-replacement-pair that is processed every time the shaders is recompiled. Note that recompilation\r\n     * has to be triggered manually. Internally, all replacements are stored as a Map of search and replacement values.\r\n     * Thus, specifying a replacement value overrides an existing search value.\r\n     * @param searchValue - String that is to be searched (all occurrences) and replaced by replace value.\r\n     * @param replaceValue - The value to be used as replacement for all search value occurrences.\r\n     */\r\n    replace(searchValue: string, replaceValue: string): void {\r\n        if (this._replacements === undefined) {\r\n            this._replacements = new Map<string, string>();\r\n        }\r\n        this._replacements.set(searchValue, replaceValue);\r\n    }\r\n\r\n    /**\r\n     * Either VERTEX_SHADER or FRAGMENT_SHADER.\r\n     */\r\n    get type(): GLenum {\r\n        this.assertInitialized();\r\n        return this._type;\r\n    }\r\n\r\n    /**\r\n     * Allows to change the shader's source. Note that this will not recompile the shader.\r\n     */\r\n    set source(source: string) {\r\n        if (this._source === source) {\r\n            return;\r\n        }\r\n        this._source = source;\r\n    }\r\n\r\n    /**\r\n     * Read access to the shader's source (without replacements applied).\r\n     */\r\n    get source(): string {\r\n        this.assertInitialized();\r\n        return this._source;\r\n    }\r\n\r\n    /**\r\n     * Processes all search values and replaces them with the replace value on the source.\r\n     * @returns The source with all replacements applied.\r\n     */\r\n    get sourceWithReplacements(): string {\r\n        if (this._replacements === undefined) {\r\n            return this._source;\r\n        }\r\n\r\n        let source = this._source;\r\n        this._replacements.forEach((replaceValue: string, searchValue: string) => {\r\n            const searchRegex = searchValue.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\r\n            source = source.replace(new RegExp(searchRegex, 'g'), replaceValue);\r\n        });\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * Read access the the shader's compile status. True if last compilation was successful.\r\n     */\r\n    get compiled(): boolean {\r\n        this.assertInitialized();\r\n        return this._compiled;\r\n    }\r\n\r\n}\r\n","\r\nimport { assert, log, LogLevel } from './auxiliaries';\r\nimport { Context } from './context';\r\nimport { Framebuffer } from './framebuffer';\r\nimport { GaussFilter } from './gaussfilter';\r\nimport { Initializable } from './initializable';\r\nimport { Renderbuffer } from './renderbuffer';\r\nimport { Texture2D } from './texture2d';\r\nimport { Wizard } from './wizard';\r\n\r\nimport { GLsizei2 } from './tuples';\r\n\r\n\r\nexport class ShadowPass extends Initializable {\r\n\r\n    protected _context: Context;\r\n\r\n    protected _shadowType: ShadowPass.ShadowMappingType;\r\n    protected _shadowMapSize: GLsizei2;\r\n    protected _blurredShadowMapSize: GLsizei2;\r\n\r\n    protected _shadowMapFBO: Framebuffer;\r\n    protected _shadowMapTexture: Texture2D;\r\n    protected _shadowMapRenderbuffer: Renderbuffer;\r\n\r\n    protected _gaussFilter: GaussFilter;\r\n    protected _gaussFilterKernelSize: GLsizei = 21;\r\n\r\n    protected _intermediateBlurFBO: Framebuffer;\r\n    protected _intermediateBlurTexture: Texture2D;\r\n    protected _blurFBO: Framebuffer;\r\n    protected _blurTexture: Texture2D;\r\n\r\n    constructor(context: Context) {\r\n        super();\r\n        this._context = context;\r\n    }\r\n\r\n    get shadowMapFBO(): Framebuffer {\r\n        return this._shadowMapFBO;\r\n    }\r\n\r\n    get shadowMapTexture(): Texture2D {\r\n        if (this.hasBlur) {\r\n            return this._blurTexture;\r\n        }\r\n        return this._shadowMapTexture;\r\n    }\r\n\r\n    get hasBlur(): boolean {\r\n        return this._shadowType !== ShadowPass.ShadowMappingType.HardLinear;\r\n    }\r\n\r\n    get blurSize(): GLsizei {\r\n        return this._gaussFilterKernelSize;\r\n    }\r\n\r\n    set blurSize(blurSize: GLsizei) {\r\n        if (blurSize === this._gaussFilterKernelSize) {\r\n            return;\r\n        }\r\n\r\n        if (this._gaussFilter !== undefined) {\r\n            this._gaussFilter.kernelSize = blurSize;\r\n            this._gaussFilter.standardDeviation = blurSize / 6.0;\r\n        }\r\n        this._gaussFilterKernelSize = blurSize;\r\n    }\r\n\r\n    @Initializable.assert_initialized()\r\n    resize(size: GLsizei2, bind: boolean = true, unbind: boolean = true): void {\r\n        assert(size[0] > 0 && size[1] > 0, 'Size has to be > 0.');\r\n        this._shadowMapSize = size;\r\n        this._shadowMapFBO.resize(this._shadowMapSize[0], this._shadowMapSize[1], bind, unbind);\r\n    }\r\n\r\n    @Initializable.assert_initialized()\r\n    resizeBlurTexture(size: GLsizei2, bind: boolean = true, unbind: boolean = true): void {\r\n        assert(size[0] > 0 && size[1] > 0, 'Size has to be > 0.');\r\n        this._blurredShadowMapSize = size;\r\n        this._intermediateBlurFBO.resize(this._blurredShadowMapSize[0], this._blurredShadowMapSize[1], bind, unbind);\r\n        this._blurFBO.resize(this._blurredShadowMapSize[0], this._blurredShadowMapSize[1], bind, unbind);\r\n    }\r\n\r\n    @Initializable.initialize()\r\n    initialize(shadowType: ShadowPass.ShadowMappingType,\r\n        shadowMapSize: GLsizei2,\r\n        blurredShadowMapSize?: GLsizei2): boolean {\r\n\r\n        assert(shadowMapSize[0] > 0 && shadowMapSize[1] > 0, 'Size has to be > 0.');\r\n\r\n        this._shadowType = shadowType;\r\n        this._shadowMapSize = shadowMapSize;\r\n\r\n        if (blurredShadowMapSize !== undefined) {\r\n            this._blurredShadowMapSize = blurredShadowMapSize;\r\n        } else {\r\n            this._blurredShadowMapSize = this._shadowMapSize;\r\n        }\r\n\r\n        const gl = this._context.gl as WebGLRenderingContext;\r\n        const gl2facade = this._context.gl2facade;\r\n\r\n        let format: GLenum = gl.RGBA;\r\n        if (this._context.isWebGL2) {\r\n            const gl2 = this._context.gl as WebGL2RenderingContext;\r\n            switch (this._shadowType) {\r\n                case ShadowPass.ShadowMappingType.HardLinear:\r\n                case ShadowPass.ShadowMappingType.HardExponential:\r\n                    format = gl2.RED;\r\n                    break;\r\n                case ShadowPass.ShadowMappingType.SoftLinear:\r\n                    format = gl2.RG;\r\n                    break;\r\n                case ShadowPass.ShadowMappingType.SoftExponential:\r\n                    format = gl2.RGBA;\r\n                    break;\r\n                default:\r\n                    assert(false, 'Unexpected value for shadowType');\r\n            }\r\n        }\r\n\r\n        const [internalFormat, type] = Wizard.queryInternalTextureFormat(this._context, format, Wizard.Precision.float);\r\n        if (this._shadowType !== ShadowPass.ShadowMappingType.HardLinear && type !== gl.FLOAT) {\r\n            log(LogLevel.Warning, 'floating point textures are not supported, falling back to HardLinear');\r\n            this._shadowType = ShadowPass.ShadowMappingType.HardLinear;\r\n        }\r\n\r\n        let filter = gl.LINEAR;\r\n        if (type === gl.FLOAT && !this._context.supportsTextureFloatLinear) {\r\n            filter = gl.NEAREST;\r\n        }\r\n        if (type === gl2facade.HALF_FLOAT && !this._context.supportsTextureHalfFloatLinear) {\r\n            filter = gl.NEAREST;\r\n        }\r\n\r\n        // Setup shadow map\r\n        this._shadowMapTexture = new Texture2D(this._context);\r\n        this._shadowMapTexture.initialize(this._shadowMapSize[0], this._shadowMapSize[1],\r\n            internalFormat, format, gl.FLOAT);\r\n        this._shadowMapTexture.wrap(gl.CLAMP_TO_EDGE, gl.CLAMP_TO_EDGE);\r\n        this._shadowMapTexture.filter(filter, filter);\r\n\r\n        this._shadowMapRenderbuffer = new Renderbuffer(this._context);\r\n        this._shadowMapRenderbuffer.initialize(this._shadowMapSize[0], this._shadowMapSize[1], gl.DEPTH_COMPONENT16);\r\n\r\n        this._shadowMapFBO = new Framebuffer(this._context);\r\n        this._shadowMapFBO.initialize([[gl2facade.COLOR_ATTACHMENT0, this._shadowMapTexture]\r\n            , [gl.DEPTH_ATTACHMENT, this._shadowMapRenderbuffer]]);\r\n        this._shadowMapFBO.clearColor([1.0, 1.0, 1.0, 1.0]);\r\n        this._shadowMapFBO.clearDepth(1.0);\r\n\r\n        if (this.hasBlur) {\r\n            // Setup GaussFilter\r\n            this._gaussFilter = new GaussFilter(this._context);\r\n            this._gaussFilter.kernelSize = this._gaussFilterKernelSize;\r\n            this._gaussFilter.standardDeviation = this._gaussFilterKernelSize / 6.0;\r\n            this._gaussFilter.initialize();\r\n\r\n            // Setup intermediate blur\r\n            this._intermediateBlurTexture = new Texture2D(this._context, 'IntermediateBlurTexture');\r\n            this._intermediateBlurTexture.initialize(\r\n                this._blurredShadowMapSize[0],\r\n                this._blurredShadowMapSize[1],\r\n                internalFormat, format, gl.FLOAT);\r\n            this._intermediateBlurTexture.wrap(gl.CLAMP_TO_EDGE, gl.CLAMP_TO_EDGE);\r\n            this._intermediateBlurTexture.filter(filter, filter);\r\n\r\n            this._intermediateBlurFBO = new Framebuffer(this._context, 'IntermediateBlurFramebuffer');\r\n            this._intermediateBlurFBO.initialize([[gl2facade.COLOR_ATTACHMENT0, this._intermediateBlurTexture]]);\r\n            this._intermediateBlurFBO.clearColor([1.0, 1.0, 1.0, 1.0]);\r\n            this._intermediateBlurFBO.clearDepth(1.0);\r\n\r\n            // Setup final blur\r\n            this._blurTexture = new Texture2D(this._context, 'BlurTexture');\r\n            this._blurTexture.initialize(\r\n                this._blurredShadowMapSize[0],\r\n                this._blurredShadowMapSize[1],\r\n                internalFormat, format, gl.FLOAT);\r\n            this._blurTexture.wrap(gl.CLAMP_TO_EDGE, gl.CLAMP_TO_EDGE);\r\n            this._blurTexture.filter(filter, filter);\r\n\r\n            this._blurFBO = new Framebuffer(this._context, 'BlurFramebuffer');\r\n            this._blurFBO.initialize([[gl2facade.COLOR_ATTACHMENT0, this._blurTexture]]);\r\n            this._blurFBO.clearColor([1.0, 1.0, 1.0, 1.0]);\r\n            this._blurFBO.clearDepth(1.0);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    @Initializable.uninitialize()\r\n    uninitialize(): void {\r\n        this._shadowMapFBO.uninitialize();\r\n        this._shadowMapRenderbuffer.uninitialize();\r\n        this._shadowMapTexture.uninitialize();\r\n\r\n        if (this.hasBlur) {\r\n            this._intermediateBlurFBO.uninitialize();\r\n            this._intermediateBlurTexture.uninitialize();\r\n\r\n            this._blurFBO.uninitialize();\r\n            this._blurTexture.uninitialize();\r\n\r\n            this._gaussFilter.uninitialize();\r\n        }\r\n    }\r\n\r\n    @Initializable.assert_initialized()\r\n    frame(callback: () => void): void {\r\n        const gl = this._context.gl;\r\n\r\n        gl.viewport(0, 0, this._shadowMapSize[0], this._shadowMapSize[1]);\r\n        gl.enable(gl.DEPTH_TEST);\r\n        gl.depthFunc(gl.LEQUAL);\r\n\r\n        this._shadowMapFBO.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT, true, false);\r\n\r\n        callback();\r\n\r\n        gl.disable(gl.DEPTH_TEST);\r\n        gl.depthFunc(gl.LESS);\r\n\r\n        if (this.hasBlur) {\r\n            // Blur the variance shadow map in two passes\r\n            gl.viewport(0, 0, this._intermediateBlurFBO.width, this._intermediateBlurFBO.height);\r\n            this._intermediateBlurFBO.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT, true, false);\r\n            this._gaussFilter.filter(this._shadowMapTexture, GaussFilter.Direction.Horizontal);\r\n\r\n            gl.viewport(0, 0, this._blurFBO.width, this._blurFBO.height);\r\n            this._blurFBO.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT, true, false);\r\n            this._gaussFilter.filter(this._intermediateBlurTexture, GaussFilter.Direction.Vertical);\r\n        }\r\n    }\r\n}\r\n\r\nexport namespace ShadowPass {\r\n\r\n    export enum ShadowMappingType {\r\n        HardLinear = 0,\r\n        SoftLinear = 1,\r\n        HardExponential = 2,\r\n        SoftExponential = 3,\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { assert } from '../auxiliaries';\r\nimport { GLfloat2, GLfloat4, GLsizei2 } from '../tuples';\r\n\r\nimport { Context } from '../context';\r\nimport { Texture2D } from '../texture2d';\r\nimport { Wizard } from '../wizard';\r\n\r\nimport { fetchAsync } from '../fetch';\r\nimport { FontFaceLoader } from './fontfaceloader';\r\nimport { Glyph } from './glyph';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * Font related data for glyph based text rendering. The glyph-based font face is described by, e.g., font-size,\r\n * line spacing, a glyph catalogue, as well as kerning information. The glyph catalogue is based on a set of glyphs\r\n * referring to a texture atlas (@see {@link Glyph}). All measures are provided in float even though most\r\n * glyph-textures and associated font data is encoded via integer values. A font face explicitly relies on floating\r\n * values to reduce the need of casting as well as to simplify the use for dpi aware text rendering.\r\n * The font face interface is designed to access most basic font settings ascent, descent, and line gap (leading).\r\n * Additional font settings are provided via interface but are derived from or mapped to the above mentioned three\r\n * settings, e.g., font size is the sum of descent and ascent. This is to provide as much convenience measures for\r\n * type setting/font rendering as possible.\r\n * Note: This class does not provide dpi awareness, which has to be handled outside of this class, e.g., during\r\n * layouting and rendering.\r\n *\r\n * A font can be loaded as follows:\r\n * ```\r\n * let fontFace: FontFace | undefined;\r\n * FontFace.fromFile(context, './data/opensansr144.fnt').then((value) => fontFace = value);\r\n * ```\r\n */\r\nexport class FontFace {\r\n\r\n    /** @see {@link size} */\r\n    protected _size: number;\r\n\r\n    /** @see {@link base} */\r\n    protected _base: number;\r\n\r\n    /** @see {@link ascent} */\r\n    protected _ascent = 0.0;\r\n\r\n    /** @see {@link descent} */\r\n    protected _descent = 0.0;\r\n\r\n    /** @see {@link lineGap} */\r\n    protected _lineGap = 0.0;\r\n\r\n    /** @see {@link glyphTextureExtent} */\r\n    protected _glyphTextureExtent: GLfloat2 = [0.0, 0.0];\r\n\r\n    /** @see {@link glyphTexturePadding} */\r\n    protected _glyphTexturePadding: GLfloat4 = [0.0, 0.0, 0.0, 0.0];\r\n\r\n    /** @see {@link glyphTexturePadding} */\r\n    protected _glyphTexture: Texture2D;\r\n\r\n    /**\r\n     * Map associating a glyph index to a glyph (sub image of a texture).\r\n     * @see {@link glyph}, @see {@link hasGlyph}, @see {@link addGlyph}\r\n     */\r\n    protected _glyphs = new Map<GLsizei, Glyph>();\r\n\r\n    protected _context: Context;\r\n\r\n\r\n    /**\r\n     * Fetches a font face file, and, if successful, processes it and fetches referenced pages.\r\n     *\r\n     * Resolving the promise:\r\n     * ```\r\n     * let fontFace: FontFace | undefined;\r\n     * FontFace.fromFile(context, './data/opensansr144.fnt').then((value) => fontFace = value);\r\n     * ```\r\n     * @param url - Uniform resource locator string referencing the fnt-file that should be loaded.\r\n     * @param context - Valid context to create the object for.\r\n     * @param headless - Whether or not to enable headless mode. If enabled, pages are not loaded.\r\n     * @param identifier - Meaningful name/prefix for identification of fetched pages (glyph atlases).\r\n     */\r\n    static fromFile(url: string, context: Context, headless: boolean = false, identifier?: string):\r\n        Promise<FontFace> {\r\n\r\n        const transform = (data: any): PromiseLike<FontFace> => {\r\n            const font = new FontFace(context, identifier);\r\n            return FontFaceLoader.process(font, data, url, undefined, headless)\r\n                .then((fontFace: FontFace) => fontFace)\r\n                .catch((reason: any) => Promise.reject(`processing font face data failed: ${reason}`));\r\n        };\r\n\r\n        return fetchAsync<FontFace>(url, 'text').then(transform);\r\n    }\r\n\r\n\r\n    static fromFiles(fontFileUrl: string, pageFileUrlsByPageID: Map<number, string>,\r\n        context: Context, headless: boolean = false, identifier?: string): Promise<FontFace> {\r\n\r\n        const transform = (data: any): PromiseLike<FontFace> => {\r\n            const font = new FontFace(context, identifier);\r\n            return FontFaceLoader.process(font, data, fontFileUrl, pageFileUrlsByPageID, headless)\r\n                .then((fontFace: FontFace) => fontFace)\r\n                .catch((reason: any) => Promise.reject(`processing font face data failed: ${reason}`));\r\n        };\r\n\r\n        return fetchAsync<FontFace>(fontFileUrl, 'text').then(transform);\r\n    }\r\n\r\n    /**\r\n     * Constructs an unconfigured, empty font face specification. The appropriate setters should be used for\r\n     * configuring the font face. Alternatively, the font importer (@see {@link FontImporter}) provides the import\r\n     * of bitmap-font base configuration file ({@link http://www.angelcode.com/products/bmfont/}).\r\n     * @param context - Valid context to create the object for.\r\n     * @param identifier - Meaningful name for identification of this instances VAO and VBOs.\r\n     */\r\n    constructor(context: Context, identifier?: string) {\r\n        this._context = context;\r\n        const gl = context.gl;\r\n\r\n        identifier = identifier !== undefined && identifier !== `` ? identifier : this.constructor.name;\r\n        this._glyphTexture = new Texture2D(context, `${identifier}GlyphAtlas`);\r\n        const internalFormat = Wizard.queryInternalTextureFormat(context, gl.RGBA, Wizard.Precision.byte);\r\n        this._glyphTexture.initialize(1, 1, internalFormat[0], gl.RGBA, internalFormat[1]);\r\n        this._glyphTexture.filter(gl.LINEAR, gl.LINEAR);\r\n    }\r\n\r\n\r\n    /**\r\n     * Check if a glyph of a specific index is available.\r\n     * @param index - Index of the glyph to access.\r\n     * @returns - True if a glyph for the provided index was added.\r\n     */\r\n    hasGlyph(index: GLsizei): boolean {\r\n        return !!this._glyphs.get(index);\r\n    }\r\n\r\n    /**\r\n     * Direct access to an indexed glyph. If the glyph does not exist, an empty glyph is returned without adding it\r\n     * to glyphs. The glyph atlas might be loaded asynchronously, thus, new glyphs are expected to be added via\r\n     * addGlyph.\r\n     * @param index - Index of the glyph to access.\r\n     * @returns - Glyph with the matching index or an empty glyph, if index has not match\r\n     */\r\n    glyph(index: GLsizei): Glyph {\r\n        const existingGlyph = this._glyphs.get(index);\r\n        if (existingGlyph) {\r\n            return existingGlyph;\r\n        }\r\n        const glyph = new Glyph();\r\n        glyph.index = index;\r\n        return glyph;\r\n    }\r\n\r\n    /**\r\n     * Add a glyph to the font face's set of glyphs. If the glyph already exists, the existing glyph remains.\r\n     * @param glyph - The glyph to add to the set of glyphs.\r\n     */\r\n    addGlyph(glyph: Glyph): void {\r\n        assert(!(this._glyphs.get(glyph.index)), 'expected glyph to not already exist');\r\n        this._glyphs.set(glyph.index, glyph);\r\n    }\r\n\r\n    /**\r\n     * Generates aan array of all comprised glyph indices.\r\n     * @returns - An array of all glyph indices available to this font face.\r\n     */\r\n    arrayOfGlyphIndices(): Array<GLsizei> {\r\n        return Array.from(this._glyphs.keys());\r\n    }\r\n\r\n    /**\r\n     * Check if a glyph is depictable/renderable. If the glyph's sub-texture vertical or horizontal extent is zero\r\n     * the glyph does not need to be depicted/rendered. E.g., spaces, line feeds, other control sequences as well\r\n     * as unknown glyphs do not need to be processed for rendering.\r\n     * @param index - Index of the glyph to access.\r\n     * @returns - Returns true if the glyph needs to be depicted/rendered.\r\n     */\r\n    depictable(index: GLsizei): boolean {\r\n        return this.glyph(index).depictable();\r\n    }\r\n\r\n    /**\r\n     * Kerning for a glyph and a subsequent glyph in texture space (px). If the glyph or the subsequent glyph are\r\n     * unknown to this font face (assertion), 0.f will be returned. For more details on kerning, refer to the Glyph\r\n     * class.\r\n     * @param index - The current glyph index (e.g., of the current pen-position).\r\n     * @param subsequentIndex - The glyph index of the subsequent/next glyph.\r\n     * @returns - The kerning (usually negative) between the two glyphs in px. If either on of the glyphs is unknown\r\n     * to this font face or no specific kerning for the glyph pair is available a zero kerning is returned.\r\n     */\r\n    kerning(index: GLsizei, subsequentIndex: GLsizei): number {\r\n        const glyph = this._glyphs.get(index);\r\n        if (!glyph) {\r\n            return 0.0;\r\n        }\r\n        return glyph.kerning(subsequentIndex);\r\n    }\r\n\r\n    /**\r\n     * Set the kerning for a glyph w.r.t. to a subsequent glyph in texture space (px). If the glyph is known to this\r\n     * font face, the values are forwarded to the glyphs kerning setter (see Glyph for more information).\r\n     * @param index - The target glyph index.\r\n     * @param subsequentIndex - The glyph index of the respective subsequent/next glyph.\r\n     * @param kerning - Kerning of the two glyphs in pixel.\r\n     */\r\n    setKerning(index: GLsizei, subsequentIndex: GLsizei, kerning: number): void {\r\n        const glyph = this._glyphs.get(index);\r\n        if (!glyph || !this.hasGlyph(subsequentIndex)) {\r\n            assert(false, `expected glyph or glyph of subsequent index to exist, \\\r\n                given ${index} and ${subsequentIndex} respectively`);\r\n            return;\r\n        }\r\n        glyph.setKerning(subsequentIndex, kerning);\r\n    }\r\n\r\n\r\n    /**\r\n     * The size of the font in texture space (px).\r\n     * @returns - The font size in texture space (px).\r\n     */\r\n    set size(size: number) {\r\n        assert(size > 0.0, `expected size to be greater than 0.0, given ${size}`);\r\n        this._size = size;\r\n    }\r\n    get size(): number {\r\n        return this._size;\r\n    }\r\n\r\n    /**\r\n     * Set the font's base in texture space (px). The base is the distance from the baseline to the top in pixel.\r\n     * @param base - The distance from the baseline to the top of the line in pixel.\r\n     */\r\n    set base(base: number) {\r\n        assert(base > 0.0, `expected base to be greater than 0.0, given ${base}`);\r\n        this._base = base;\r\n    }\r\n    get base(): number {\r\n        return this._base;\r\n    }\r\n\r\n    /**\r\n     * Set the font's ascent in texture space (px). The ascent is the distance from the baseline to the tops of the\r\n     * tallest glyphs (ascender) in pixel.\r\n     * @param ascent - The distance from the baseline to the topmost ascender in pixel.\r\n     */\r\n    set ascent(ascent: number) {\r\n        assert(ascent > 0.0, `expected ascent to be greater than 0.0, given ${ascent}`);\r\n        this._ascent = ascent;\r\n    }\r\n    get ascent(): number {\r\n        return this._ascent;\r\n    }\r\n\r\n    /**\r\n     * Set the font's descent in texture space (px). The descent is the distance from the baseline to the lowest\r\n     * descender in pixel. Please note that this value is usually negative (if the fonts lowest descender is below\r\n     * the baseline).\r\n     * @param descent - The distance from the baseline to the lowest descender in pixel.\r\n     */\r\n    set descent(descent: number) {\r\n        /* No assert here: there might be fonts with their lowest descender above baseline. */\r\n        // assert(descent < 0.f, ...);\r\n        this._descent = descent;\r\n    }\r\n    get descent(): number {\r\n        return this._descent;\r\n    }\r\n\r\n    /**\r\n     * Set the font's leading/linegap in texture space (px). The leading is the distance from the lowest descender to\r\n     * the topmost ascender of a subsequent text line in pixel.\r\n     * @param lineGap - The gap between two subsequent lines of text in pixel.\r\n     */\r\n    set lineGap(lineGap: number) {\r\n        this._lineGap = lineGap;\r\n    }\r\n    get lineGap(): number {\r\n        return this._lineGap;\r\n    }\r\n\r\n    /**\r\n     * Set the baseline-to-baseline distance in texture space (px). Negative values will result in negative linegap.\r\n     * The line height is derived as follows: line_height = size + line_gap, or alternatively:\r\n     * line_height = size * line_space\r\n     * @param lineHeight - The line height (baseline-to-baseline distance) in pixel.\r\n     */\r\n    set lineHeight(lineHeight: number) {\r\n        assert(this.size > 0, `expected size to be greater than zero to derive line gap from line height`);\r\n        this._lineGap = lineHeight - this.size;\r\n    }\r\n    get lineHeight(): number {\r\n        return this.size + this.lineGap;\r\n    }\r\n\r\n    /**\r\n     * Set the relative baseline-to-baseline distance w.r.t. the font's size. The line space is mapped to line gap\r\n     * as follows: line_gap = size * (line_space - 1). A space < 1.0 will result in a negative line gap.\r\n     * @param lineSpace - The relative baseline-to-baseline distance w.r.t. the font's size.\r\n     */\r\n    set lineSpace(lineSpace: number) {\r\n        this._lineGap = this.size * (lineSpace - 1);\r\n    }\r\n    /**\r\n     * The relative baseline-to-baseline distance w.r.t. the font's size. The relative line space is derived as\r\n     * follows: line_space = size / line_height; Note that the descent is usually a negative value.\r\n     * @returns - The relative baseline-to-baseline distance w.r.t. the font's size.\r\n     */\r\n    get lineSpace(): number {\r\n        if (this.lineHeight === 0.0) {\r\n            return this.lineHeight;\r\n        }\r\n        return this.size / this.lineHeight;\r\n    }\r\n\r\n    /**\r\n     * Sets the glyph texture atlas extent.\r\n     * @param extent - The texture extent in px\r\n     */\r\n    set glyphTextureExtent(extent: GLsizei2) {\r\n        assert(extent[0] > 0, `expected extent.x to be greater than 0.0, given ${extent[0]}`);\r\n        assert(extent[1] > 0, `expected extent.y to be greater than 0.0, given ${extent[1]}`);\r\n        this._glyphTextureExtent = extent;\r\n    }\r\n    /**\r\n     * The size/extent of the glyph texture in px.\r\n     * @returns - The size/extent of the glyph texture in px.\r\n     */\r\n    get glyphTextureExtent(): GLsizei2 {\r\n        return this._glyphTextureExtent;\r\n    }\r\n\r\n    /**\r\n     * The padding applied to every glyph in px. This can only be set via setGlyphTexture.\r\n     * @param padding - CSS style (top, right, bottom, left) padding applied to every glyph within the texture in\r\n     * px.\r\n     */\r\n    set glyphTexturePadding(padding: GLfloat4) {\r\n        assert(padding[0] >= 0.0, `expected padding[0] to be greater than 0.0, given ${padding[0]}`);\r\n        assert(padding[1] >= 0.0, `expected padding[1] to be greater than 0.0, given ${padding[1]}`);\r\n        assert(padding[2] >= 0.0, `expected padding[2] to be greater than 0.0, given ${padding[2]}`);\r\n        assert(padding[3] >= 0.0, `expected padding[3] to be greater than 0.0, given ${padding[3]}`);\r\n        this._glyphTexturePadding = padding;\r\n    }\r\n    get glyphTexturePadding(): GLfloat4 {\r\n        return this._glyphTexturePadding;\r\n    }\r\n\r\n    /**\r\n     * The font face's associated glyph atlas. All glyph data is associated to this texture atlas.\r\n     * @param texture - The new texture atlas for all glyphs\r\n     */\r\n    set glyphTexture(texture: Texture2D) {\r\n        this._glyphTexture = texture;\r\n    }\r\n    get glyphTexture(): Texture2D {\r\n        return this._glyphTexture;\r\n    }\r\n\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { assert, dirname, log, logIf, LogLevel } from '../auxiliaries';\r\nimport { GLfloat2, GLfloat4 } from '../tuples';\r\n\r\nimport { FontFace } from './fontface';\r\nimport { Glyph } from './glyph';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\ntype StringPairs = Map<string, string>;\r\n\r\n/**\r\n * Transforms input raw data of a text-based font file to a font face (@see {@link FontFace}) specification. All\r\n * referenced pages/glyph atlases will be loaded and setup as well. This is intended to be used directly by the\r\n * FontFace and is not required to be exposed to webgl-operates public API.\r\n */\r\nexport class FontFaceLoader {\r\n\r\n    /**\r\n     * Parses the info fields for padding values and stores them in the font face\r\n     * @param stream - The stream of the 'info' identifier.\r\n     * @param fontFace - The font face in which the padding is stored.\r\n     */\r\n    protected static processInfo(stream: Array<string>, fontFace: FontFace): boolean {\r\n        const pairs: StringPairs = new Map<string, string>();\r\n        const success = this.readKeyValuePairs(stream,\r\n            ['size', 'padding'], pairs);\r\n        if (!success) {\r\n            return false;\r\n        }\r\n\r\n        fontFace.size = parseFloat(pairs.get('size')!);\r\n\r\n        const values = pairs.get('padding')!.split(',');\r\n        if (values.length !== 4) {\r\n            log(LogLevel.Warning, `expected 4 values for padding, given ${values} (${values.length})`);\r\n            return false;\r\n        }\r\n\r\n        const padding: GLfloat4 = [\r\n            parseFloat(values[0]), /* top */\r\n            parseFloat(values[1]), /* right */\r\n            parseFloat(values[2]), /* bottom */\r\n            parseFloat(values[3]), /* left */\r\n        ];\r\n        fontFace.glyphTexturePadding = padding;\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Parses the common fields for lineHeight, base, ascent, descent, scaleW and scaleH to store them\r\n     * in the font face. If ascent and/or descent are not available, they can be computed using the largest y-offset\r\n     * (ascent = baseline - max_yoffset) and descent can be derived as well (descent = - fontsize + ascent).\r\n     * @param stream - The stream of the 'common' identifier.\r\n     * @param fontFace - The font face in which the parsed values are stored.\r\n     */\r\n    protected static processCommon(stream: Array<string>, fontFace: FontFace): boolean {\r\n        const pairs: StringPairs = new Map<string, string>();\r\n        const success = this.readKeyValuePairs(stream,\r\n            ['lineHeight', 'base', 'scaleW', 'scaleH'], pairs);\r\n        if (!success) {\r\n            return false;\r\n        }\r\n\r\n        fontFace.base = parseFloat(pairs.get('base')!);\r\n        if (pairs.has('ascent')) {\r\n            fontFace.ascent = parseFloat(pairs.get('ascent')!);\r\n        }\r\n        if (pairs.has('descent')) {\r\n            fontFace.descent = parseFloat(pairs.get('descent')!);\r\n        }\r\n\r\n        fontFace.lineHeight = parseFloat(pairs.get('lineHeight')!);\r\n\r\n        fontFace.glyphTextureExtent = [\r\n            parseFloat(pairs.get('scaleW')!),\r\n            parseFloat(pairs.get('scaleH')!),\r\n        ];\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Parses a page to load the associated png-file, i.e., the glyph atlas.\r\n     * @param stream - The stream of the 'page' identifier.\r\n     * @param fontFace - The font face in which the loaded glyph texture is stored.\r\n     * @param url - Uniform resource locator string referencing the fnt-file (used for base path retrieval).\r\n     * @returns - Promise for handling image load status.\r\n     */\r\n    protected static processPage(stream: Array<string>, fontFace: FontFace, url: string): Promise<void> | undefined {\r\n        const pairs: StringPairs = new Map<string, string>();\r\n        const success = this.readKeyValuePairs(stream, ['file'], pairs);\r\n        if (!success) {\r\n            return undefined;\r\n        }\r\n\r\n        const path = dirname(url);\r\n        let page = pairs.get('file')!;\r\n        page = page.replace(/['\"]+/g, ''); /* remove quotes */\r\n\r\n        // Texture is flipped due to shader math\r\n        return fontFace.glyphTexture.fetch(`${path}/${page}`, true, true)\r\n            .catch(() => Promise.reject(`page '${page}' referenced in font file '${url}' was not found`));\r\n    }\r\n\r\n    /**\r\n     * Fetches a single page (e.g., a png-file) for the glyph atlas of a font face.\r\n     * @param fontFace - The font face in which the loaded glyph texture should be stored.\r\n     * @param pageFileUrlsByPageID - Page urls mapped to page IDs.\r\n     * @returns - Promise for handling image load status.\r\n     */\r\n    protected static processPages(fontFace: FontFace,\r\n        pageFileUrlsByPageID: Map<number, string>): Promise<void> | undefined {\r\n\r\n        logIf(pageFileUrlsByPageID.size !== 1, LogLevel.Warning,\r\n            'glyph atlas supports a single page only (impl. for multiple pages pending)');\r\n\r\n        assert(pageFileUrlsByPageID.has(0),\r\n            'page with page ID 0 expected for glyph atlas (impl. for multiple pages pending)');\r\n\r\n        const page = 0;\r\n        const url = pageFileUrlsByPageID.get(page);\r\n        if (!url) {\r\n            return undefined;\r\n        }\r\n\r\n        // Texture is flipped due to shader math\r\n        return fontFace.glyphTexture.fetch(`${url}`, true, true)\r\n            .catch(() => Promise.reject(`fetching page '${page}' from '${url}' failed`));\r\n    }\r\n\r\n    /**\r\n     * Parses the char fields for character id (code point), x, y, width, height, xoffset, yoffset, xadvance to\r\n     * store them in the font face as instances of Glyph.\r\n     * This relies on fontFace.base and fontFace.glyphTextureExtent, so execute processCommon() first.\r\n     * @param stream - The stream of the 'char' identifier.\r\n     * @param fontFace - The font face in which the loaded glyph texture is stored.\r\n     */\r\n    protected static processChar(stream: Array<string>, fontFace: FontFace): boolean {\r\n        const pairs: StringPairs = new Map<string, string>();\r\n        const success = this.readKeyValuePairs(stream,\r\n            ['id', 'x', 'y', 'width', 'height', 'xoffset', 'yoffset', 'xadvance'], pairs);\r\n        if (!success) {\r\n            return false;\r\n        }\r\n\r\n        const index: number = parseInt(pairs.get('id')!, 10);\r\n        logIf(index <= 0.0, LogLevel.Warning,\r\n            `expected glyph index to be greater than 0, given ${index}`);\r\n\r\n        const glyph = new Glyph();\r\n        glyph.index = index;\r\n\r\n        const extentScale: GLfloat2 = [\r\n            1.0 / fontFace.glyphTextureExtent[0],\r\n            1.0 / fontFace.glyphTextureExtent[1],\r\n        ];\r\n        const extent: GLfloat2 = [\r\n            parseFloat(pairs.get('width')!),\r\n            parseFloat(pairs.get('height')!),\r\n        ];\r\n\r\n        glyph.subTextureOrigin = [\r\n            parseFloat(pairs.get('x')!) * extentScale[0],\r\n            1.0 - (parseFloat(pairs.get('y')!) + extent[1]) * extentScale[1],\r\n        ];\r\n\r\n        glyph.extent = extent;\r\n\r\n        glyph.subTextureExtent[0] = extent[0] * extentScale[0];\r\n        glyph.subTextureExtent[1] = extent[1] * extentScale[1];\r\n\r\n        glyph.bearingFromFontBaseAndOffset(fontFace.base,\r\n            parseFloat(pairs.get('xoffset')!),\r\n            parseFloat(pairs.get('yoffset')!),\r\n        );\r\n\r\n        glyph.advance = parseFloat(pairs.get('xadvance')!);\r\n\r\n        fontFace.addGlyph(glyph);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Parses the kerning fields for first and second character and the amount, to store them in the font face.\r\n     * @param stream The stream of the 'kerning' identifier.\r\n     * @param fontFace The font face in which the kerning tuples are stored.\r\n     */\r\n    protected static processKerning(stream: Array<string>, fontFace: FontFace): boolean {\r\n        const pairs: StringPairs = new Map<string, string>();\r\n        const success = this.readKeyValuePairs(stream, ['first', 'second', 'amount'], pairs);\r\n        if (!success) {\r\n            return false;\r\n        }\r\n\r\n        const first: number = parseInt(pairs.get('first')!, 10);\r\n        if (first <= 0.0) {\r\n            log(LogLevel.Warning, `expected kerning's first to be greater than 0, given ${first}`);\r\n            return false;\r\n        }\r\n\r\n        const second: number = parseInt(pairs.get('second')!, 10);\r\n        if (second <= 0.0) {\r\n            log(LogLevel.Warning, `expected kerning's second to be greater than 0, given ${second}`);\r\n            return false;\r\n        }\r\n\r\n        const kerning: number = parseFloat(pairs.get('amount')!);\r\n        fontFace.setKerning(first, second, kerning);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Parses to find key-value pairs for given mandatory keys.\r\n     * @param stream - The stream from which the pairs should be read.\r\n     * @param mandatoryKeys - The found pairs are only valid if the mandatory keys are found.\r\n     * @param result - key-value pairs, or undefined if not all mandatory keys are found.\r\n     * @returns - success\r\n     */\r\n    protected static readKeyValuePairs(stream: Array<string>, mandatoryKeys: Array<string>,\r\n        resultPairs: StringPairs): boolean {\r\n\r\n        let key: string;\r\n        let value: string;\r\n\r\n        for (const s of stream) {\r\n            const pair = s.split('=');\r\n            key = pair[0];\r\n            value = pair[1];\r\n            resultPairs.set(key, value);\r\n        }\r\n\r\n        /* check if all required keys are provided */\r\n        let valid = true;\r\n        mandatoryKeys.forEach((key) => valid = valid && resultPairs.has(key));\r\n        if (!valid) {\r\n            log(LogLevel.Warning, `Not all required keys are provided! Mandatory keys: ${mandatoryKeys}`);\r\n        }\r\n        return valid;\r\n    }\r\n\r\n    /**\r\n     * Derives ascent and descent data for the font face. Since the computation is based on the available glyphs and\r\n     * not all of the font's glyphs might be included in the font face, the ascent/descent might be off (based on\r\n     * minimum y-offset).\r\n     * @param fontFace - Font face to find ascent and/or descent for (if missing).\r\n     * @param size - Suggested size of the font face as read from the font file. Note that the actual size of the font\r\n     * face is determined by the sum of ascent and descent (which should equal the font files info size).\r\n     */\r\n    protected static findAscentAndDescentIfNoneProvided(fontFace: FontFace, size: number): void {\r\n        if (fontFace.ascent > 0.0 && fontFace.descent < 0.0) {\r\n            return;\r\n        }\r\n\r\n        if (fontFace.ascent > 0.0) {\r\n            fontFace.descent = fontFace.ascent - size;\r\n        }\r\n\r\n        if (fontFace.descent < 0.0) {\r\n            fontFace.ascent = fontFace.descent - size;\r\n        }\r\n\r\n        let maximumYBearing = Number.MIN_VALUE;\r\n        for (const i of fontFace.arrayOfGlyphIndices()) {\r\n            if (fontFace.glyph(i).extent[1] === 0.0) {\r\n                continue;\r\n            }\r\n            maximumYBearing = Math.max(fontFace.glyph(i).bearing[1], maximumYBearing);\r\n        }\r\n        fontFace.ascent = maximumYBearing;\r\n        fontFace.descent = fontFace.ascent - size;\r\n        log(LogLevel.Debug, `ascent not specified, derived ${fontFace.ascent} from maximum y-offset`);\r\n    }\r\n\r\n    /**\r\n     * Asynchronously loads a fnt-file and provided/referenced pages to create a font face from them.\r\n     * @param fontFace - Font face object to transform data into.\r\n     * @param data - Font face data, probably fetched from an URL.\r\n     * @param url - Uniform resource locator string referencing the fnt-file that was loaded.\r\n     * @param headless - Whether or not to enable headless mode. If enabled, pages are not loaded.\r\n     */\r\n    static process(fontFace: FontFace, data: string, fontFileUrl: string,\r\n        pageFileUrlsByPageID: undefined | Map<number, string>, headless: boolean = false):\r\n        Promise<FontFace | undefined> {\r\n\r\n        const lines = data.split('\\n');\r\n\r\n        const promises = new Array<Promise<void>>();\r\n        let status = true;\r\n\r\n        if (!headless && pageFileUrlsByPageID) {\r\n            const promise: Promise<void> | undefined = this.processPages(fontFace, pageFileUrlsByPageID);\r\n            if (promise !== undefined) {\r\n                promises.push(promise);\r\n            }\r\n        }\r\n\r\n        for (const line of lines) {\r\n            let attributes = line.split(' ');\r\n            const identifier = attributes[0];\r\n            attributes = attributes.slice(1);\r\n\r\n            switch (identifier) {\r\n                case 'info':\r\n                    status = this.processInfo(attributes, fontFace);\r\n                    break;\r\n\r\n                case 'common':\r\n                    status = this.processCommon(attributes, fontFace);\r\n                    break;\r\n\r\n                case 'page':\r\n                    if (headless || pageFileUrlsByPageID) {\r\n                        break;\r\n                    }\r\n                    const promise: Promise<void> | undefined = this.processPage(attributes, fontFace, fontFileUrl);\r\n                    if (promise !== undefined) {\r\n                        promises.push(promise);\r\n                    }\r\n                    break;\r\n\r\n                case 'char':\r\n                    status = this.processChar(attributes, fontFace);\r\n                    break;\r\n\r\n                case 'kerning':\r\n                    this.processKerning(attributes, fontFace);\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n\r\n            if (status === false) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        FontFaceLoader.findAscentAndDescentIfNoneProvided(fontFace, fontFace.size);\r\n        if (fontFace.size <= 0.0) {\r\n            log(LogLevel.Warning, `expected fontFace.size to be greater than 0, given ${fontFace.size}`);\r\n        }\r\n\r\n        /* Multiple promises might be invoked (one per page due to async texture2D load). Since this is a non async\r\n        transform intended to be used in a async fetch, waiting on all promises here. */\r\n        return Promise.all(promises).then(() => fontFace);\r\n    }\r\n\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { clampf2, GLclampf2, GLfloat2 } from '../tuples';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * Glyph related data for glyph based text rendering. Most of the glyph data (except the advance) refers to the font\r\n * face's glyph-texture. This class does not provide dpi awareness. This has to be handled outside of this class, e.g.,\r\n * during layouting and rendering.\r\n * The following definitions are applied: http://chanae.walon.org/pub/ttf/ttf_glyphs.htm\r\n */\r\nexport class Glyph {\r\n\r\n    /** @see {@link advance} */\r\n    protected _advance: GLfloat;\r\n\r\n    /** @see {@link bearing} */\r\n    protected _bearing: GLfloat2 = [0.0, 0.0];\r\n\r\n    /** @see {@link extent} */\r\n    protected _extent: GLfloat2 = [0.0, 0.0];\r\n\r\n    /** @see {@link index} */\r\n    protected _index: GLsizei;\r\n\r\n    /** @see {@link kernings} */\r\n    protected _kernings = new Map<GLsizei, GLfloat>();\r\n\r\n    /** @see {@link subTextureOrigin} */\r\n    protected _subTextureOrigin: GLclampf2 = [0.0, 0.0];\r\n\r\n    /** @see {@link subTextureExtent} */\r\n    protected _subTextureExtent: GLclampf2 = [0.0, 0.0];\r\n\r\n    constructor(index: GLsizei = 0, advance: GLfloat = 0) {\r\n        this._index = index;\r\n        this._advance = advance;\r\n    }\r\n\r\n    /**\r\n     * Check if a glyph is depictable/renderable. If the glyph's sub texture vertical or horizontal extent is zero the\r\n     * glyph does not need to be depicted/rendered. E.g., spaces, line feeds, other control sequences as well as\r\n     * unknown glyphs do not need to be processed for rendering.\r\n     * @returns - True if the glyph needs to be depicted/rendered.\r\n     */\r\n    depictable(): boolean {\r\n        return this._subTextureExtent[0] > 0 && this._subTextureExtent[1] > 0;\r\n    }\r\n\r\n    /**\r\n     * The glyph's kernel w.r.t. a subsequent glyph in pt. The kerning provides a(usually negative) offset along the\r\n     * baseline that can be used to move the pen-position respectively, i.e., the subsequent pen-position is computed\r\n     * as follows: pen-position + advance + kerning\r\n     * @param subsequentIndex - The subsequent glyph's index.\r\n     * @returns - The kerning w.r.t. to the subsequent glyph in pt. If no kerning data is available for the subsequent\r\n     * glyph, the return value is zero indicating no kerning.\r\n     */\r\n    kerning(subsequentIndex: GLsizei): GLfloat {\r\n        const kerning = this._kernings.get(subsequentIndex);\r\n        if (kerning !== undefined) {\r\n            return kerning;\r\n        }\r\n        return 0.0;\r\n    }\r\n\r\n    /**\r\n     * Set the glyph's kernel w.r.t. a subsequent glyph in pt. @see {@link kerning}\r\n     * @param subsequentIndex - The subsequent glyph's index.\r\n     * @param kerning - The kerning value w.r.t. to the subsequent glyph in pt. Note that the kerning should be a\r\n     * negative value but is not enforced to be in terms of assertion or clamping. If kerning data for the subsequent\r\n     * glyph is already available it will be updated to the provided value.\r\n     */\r\n    setKerning(subsequentIndex: GLsizei, kerning: GLfloat): void {\r\n        this._kernings.set(subsequentIndex, kerning);\r\n    }\r\n\r\n\r\n    /**\r\n     * Set the index of one single distinguishable character.\r\n     */\r\n    set index(index: GLsizei) {\r\n        this._index = index;\r\n    }\r\n    get index(): GLsizei {\r\n        return this._index;\r\n    }\r\n\r\n    /**\r\n     * Upper left position of the glyph's sub-texture. The upper left position refers to the glyph-texture that is\r\n     * specified by a font face (@see {@link FontFace}). It is the u and v coordinates pointing to the glyphs\r\n     * sub-texture within the texture atlas. The coordinates are normalized in [0;1].\r\n     * @param origin - Normalized coordinates pointing to the upper left texel of the glyph's sub-texture.\r\n     */\r\n    set subTextureOrigin(origin: GLclampf2) {\r\n        this._subTextureOrigin = clampf2(origin, 'texture origin');\r\n    }\r\n    get subTextureOrigin(): GLclampf2 {\r\n        return this._subTextureOrigin;\r\n    }\r\n\r\n    /**\r\n     * Width and height of the glyph's sub-texture. In combination with the sub-texture offset (subTextureOffset) the\r\n     * sub-texture rectangle is implicitly fully specified in normalized texture coordinates. Note: the extent\r\n     * comprises the font face's padding.\r\n     * @param extent - Normalized width and height of the glyph's sub-texture.\r\n     */\r\n    set subTextureExtent(extent: GLclampf2) {\r\n        this._subTextureExtent = clampf2(extent, 'texture extent');\r\n    }\r\n    get subTextureExtent(): GLclampf2 {\r\n        return this._subTextureExtent;\r\n    }\r\n\r\n    /**\r\n     * The x and y offsets w.r.t. to the pen-position on the baseline. The horizontal bearing does not comprise the\r\n     * glyph-texture's padding provided by the owning font face (@see {@link FontFace}). The vertical bearing also does\r\n     * not comprises the glyph texture's padding and is the measured w.r.t. baseline.\r\n     * @param bearing - Horizontal and vertical bearing based on the glyph's origin/pen-position placed on the\r\n     * baseline in pt.\r\n     */\r\n    set bearing(bearing: GLfloat2) {\r\n        this._bearing = bearing;\r\n    }\r\n    get bearing(): GLfloat2 {\r\n        return this._bearing;\r\n    }\r\n\r\n    /**\r\n     * Convenience setter for the x and y bearings. The horizontal bearing does not comprise the glyph-texture's\r\n     * padding provided by the owning font face (see FontFace). The vertical bearing also does not comprise the glyph-\r\n     * texture's padding and is the measured w.r.t. baseline. Padding is expected to be handled by the typesetter.\r\n     * The vertical bearing is computed as follows: bearingY = fontBase - yOffset\r\n     * The horizontal bearing equals the xOffset: bearingX = xOffset:\r\n     * @param fontBase - The font face's (FontFace) base-to-top distance in pt.\r\n     * @param xOffset - The glyphs horizontal offset without left padding.\r\n     * @param yOffset - The glyphs vertical offset w.r.t. the font's topmost ascenders, without the font's top\r\n     * padding in pt.\r\n     */\r\n    bearingFromFontBaseAndOffset(fontBase: GLfloat, xOffset: GLfloat, yOffset: GLfloat): void {\r\n        this._bearing[0] = xOffset;\r\n        this._bearing[1] = fontBase - yOffset;\r\n    }\r\n\r\n    /**\r\n     * Width and height of the glyph in pt.\r\n     * @param extent - The glyph's extent by means of width and height in pt.\r\n     */\r\n    set extent(extent: GLfloat2) {\r\n        this._extent = extent;\r\n    }\r\n    get extent(): GLfloat2 {\r\n        return this._extent;\r\n    }\r\n\r\n    /**\r\n     * Set the glyph's horizontal overall advance in pt. The horizontal advance comprises the font face's left and\r\n     * right padding, the glyphs (inner) width as well as the horizontal bearing (and often a glyph specific gap).\r\n     * E.g., advance = subTextureExtent_width + xOffset (+ gap), or alternatively:\r\n     * advance = xOffset + padding_left + glyph_width + padding_right (+ gap)\r\n     * @param advance - The glyphs horizontal advance (along the baseline) in pt.\r\n     */\r\n    set advance(advance: GLfloat) {\r\n        this._advance = advance;\r\n    }\r\n    get advance(): GLfloat {\r\n        return this._advance;\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { vec2, vec3 } from 'gl-matrix';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * Vertex cloud that describes each glyph that is to be rendered on the screen.\r\n */\r\nexport class GlyphVertices {\r\n\r\n    static readonly FLOATS_PER_TEXCOORD = 4;\r\n    static readonly FLOATS_PER_ORIGIN = 3;\r\n    static readonly FLOATS_PER_TANGENT = 3;\r\n    static readonly FLOATS_PER_UP = 3;\r\n\r\n\r\n    /** @see {@link origins} */\r\n    protected _origins: Float32Array;\r\n    /** @see {@link tangents} */\r\n    protected _tangents: Float32Array;\r\n    /** @see {@link ups} */\r\n    protected _ups: Float32Array;\r\n    /** @see {@link texCoords} */\r\n    protected _texCoords: Float32Array;\r\n\r\n\r\n    /**\r\n     * Concatenates multiple glyph vertices into a single new glyph vertices object.\r\n     * @param array - Array of glyph vertices. Undefined glyph vertices will be ignored.\r\n     */\r\n    static concat(array: Array<GlyphVertices | undefined>): GlyphVertices {\r\n\r\n        let length = 0;\r\n        array.forEach((vertices) => length += vertices ? vertices.length : 0);\r\n\r\n        const concatenated = new GlyphVertices(length);\r\n        let offset = 0;\r\n\r\n        for (let index = 0; index < array.length; ++index) {\r\n            const vertices = array[index];\r\n            if (vertices === undefined || vertices!.length === 0) {\r\n                continue;\r\n            }\r\n            concatenated._texCoords.set(vertices._texCoords, offset * GlyphVertices.FLOATS_PER_TEXCOORD);\r\n            concatenated._origins.set(vertices._origins, offset * GlyphVertices.FLOATS_PER_ORIGIN);\r\n            concatenated._tangents.set(vertices._tangents, offset * GlyphVertices.FLOATS_PER_TANGENT);\r\n            concatenated._ups.set(vertices._ups, offset * GlyphVertices.FLOATS_PER_UP);\r\n\r\n            offset += vertices.length;\r\n        }\r\n        return concatenated;\r\n    }\r\n\r\n\r\n    /**\r\n     * Constructs a specialized arrays representing glyph vertex data.\r\n     * @param numberOfGlyphs - The number of glyph vertices required (number of glyphs).\r\n     */\r\n    constructor(numberOfGlyphs: number) {\r\n        const length = Math.max(0, numberOfGlyphs);\r\n\r\n        this._texCoords = new Float32Array(length * GlyphVertices.FLOATS_PER_TEXCOORD);\r\n        this._origins = new Float32Array(length * GlyphVertices.FLOATS_PER_ORIGIN);\r\n        this._tangents = new Float32Array(length * GlyphVertices.FLOATS_PER_TANGENT);\r\n        this._ups = new Float32Array(length * GlyphVertices.FLOATS_PER_UP);\r\n    }\r\n\r\n    /**\r\n     * Efficiently reduces the size of all underlying float arrays (copies data if reduced).\r\n     * @param numberOfGlyphs - Target number of glyphs to reduce the vertices to.\r\n     */\r\n    shrink(numberOfGlyphs: number): void {\r\n        const length = Math.max(0, numberOfGlyphs);\r\n        if (this.length === length) {\r\n            return;\r\n        }\r\n\r\n        /* Utility that slices the underlying buffer to the required length in bytes, and then creates a new\r\n        float 32 array view to that buffer. */\r\n        const shrink = (array: Float32Array, length: number, components: number) =>\r\n            array = new Float32Array(\r\n                array.buffer.slice(0, length * array.BYTES_PER_ELEMENT * components),\r\n                0, length * components);\r\n\r\n        shrink(this._texCoords, length, GlyphVertices.FLOATS_PER_TEXCOORD);\r\n        shrink(this._origins, length, GlyphVertices.FLOATS_PER_ORIGIN);\r\n        shrink(this._ups, length, GlyphVertices.FLOATS_PER_TANGENT);\r\n        shrink(this._tangents, length, GlyphVertices.FLOATS_PER_UP);\r\n    }\r\n\r\n    /**\r\n     * Typed vec2 view to the lower left texture coordinate of the glyph at given index.\r\n     * @param index - Index of the glyph to return the lower left texture coordinate of.\r\n     */\r\n    uvLowerLeft(index: number): vec2 {\r\n        const begin = index * GlyphVertices.FLOATS_PER_TEXCOORD + 0;\r\n        return this._texCoords.subarray(begin, begin + 2) as vec2;\r\n    }\r\n\r\n    /**\r\n     * Typed vec2 view to the upper right texture coordinate of the glyph at given index.\r\n     * @param index - Index of the glyph to return the upper right texture coordinate of.\r\n     */\r\n    uvUpperRight(index: number): vec2 {\r\n        const begin = index * GlyphVertices.FLOATS_PER_TEXCOORD + 2;\r\n        return this._texCoords.subarray(begin, begin + 2) as vec2;\r\n    }\r\n\r\n    /**\r\n     * Typed vec3 view to the origin of the glyph at given index.\r\n     * @param index - Index of the glyph to return the origin of.\r\n     */\r\n    origin(index: number): vec3 {\r\n        const begin = index * GlyphVertices.FLOATS_PER_ORIGIN;\r\n        return this._origins.subarray(begin, begin + GlyphVertices.FLOATS_PER_ORIGIN) as vec3;\r\n    }\r\n\r\n    /**\r\n     * Typed vec3 view to the tangent of the glyph at given index.\r\n     * @param index - Index of the glyph to return the tangent of.\r\n     */\r\n    tangent(index: number): vec3 {\r\n        const begin = index * GlyphVertices.FLOATS_PER_TANGENT;\r\n        return this._tangents.subarray(begin, begin + GlyphVertices.FLOATS_PER_TANGENT) as vec3;\r\n    }\r\n\r\n    /**\r\n     * Typed vec3 view to the up vector of the glyph at given index.\r\n     * @param index - Index of the glyph to return the up vector of.\r\n     */\r\n    up(index: number): vec3 {\r\n        const begin = index * GlyphVertices.FLOATS_PER_UP;\r\n        return this._ups.subarray(begin, begin + GlyphVertices.FLOATS_PER_UP) as vec3;\r\n    }\r\n\r\n\r\n    /**\r\n     * Number of glyph vertices.\r\n     */\r\n    get length(): number {\r\n        return this._origins.length / GlyphVertices.FLOATS_PER_ORIGIN;\r\n    }\r\n\r\n    /**\r\n     * Read-access to all glyph vertices' origins in a single typed buffer.\r\n     */\r\n    get origins(): Float32Array {\r\n        return this._origins;\r\n    }\r\n\r\n    /**\r\n     * Read-access to all glyph vertices' tangent vectors in a single typed buffer.\r\n     */\r\n    get tangents(): Float32Array {\r\n        return this._tangents;\r\n    }\r\n\r\n    /**\r\n     * Read-access to all glyph vertices' up vectors in a single typed buffer.\r\n     */\r\n    get ups(): Float32Array {\r\n        return this._ups;\r\n    }\r\n\r\n    /**\r\n     * Read-access to all glyph vertices' texture coordinates (lower left and upper right) in a single typed buffer.\r\n     */\r\n    get texCoords(): Float32Array {\r\n        return this._texCoords;\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nexport { FontFace } from './fontface';\r\nexport { GlyphVertices } from './glyphvertices';\r\nexport { Label } from './label';\r\nexport { LabelGeometry } from './labelgeometry';\r\nexport { LabelRenderPass } from './labelrenderpass';\r\nexport { Position2DLabel } from './position2dlabel';\r\nexport { Position3DLabel } from './position3dlabel';\r\nexport { Projected3DLabel } from './projected3dlabel';\r\nexport { Text } from './text';\r\nexport { Typesetter } from './typesetter';\r\n\r\n/* The following Classes are intended for internal/private use within webgl-operate. */\r\n// export { FontFaceLoader } from './fontfaceloader';\r\n\r\n/* spellchecker: enable */\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { mat4, vec3 } from 'gl-matrix';\r\n\r\nimport { ChangeLookup } from '../changelookup';\r\nimport { Color } from '../color';\r\nimport { GLclampf4 } from '../tuples';\r\n\r\nimport { FontFace } from './fontface';\r\nimport { GlyphVertices } from './glyphvertices';\r\nimport { Text } from './text';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * Object comprising a text reference, a font face, and additional typographic information for type setting, rendering,\r\n * and interaction. Multiple labels might reference the same text, but could be placed at different locations or\r\n * rendered applying different font faces, styles etc.\r\n */\r\nexport abstract class Label {\r\n\r\n    private static readonly DEFAULT_COLOR: GLclampf4 = [0.1098, 0.4588, 0.7373, 1.0];\r\n\r\n    private static readonly DEFAULT_ELLIPSIS = '...';\r\n\r\n\r\n    /** @see {@link text} */\r\n    protected _text: Text;\r\n\r\n    /** @see {@link alignment} */\r\n    protected _alignment: Label.Alignment = Label.Alignment.Left;\r\n\r\n    /** @see {@link lineAnchor} */\r\n    protected _lineAnchor: Label.LineAnchor = Label.LineAnchor.Baseline;\r\n\r\n    /** @see {@link lineWidth} */\r\n    protected _lineWidth = NaN;\r\n\r\n    /** @see {@link fontSize} */\r\n    protected _fontSize: number;\r\n\r\n    /** @see {@link fontSizeUnit} */\r\n    protected _fontSizeUnit: Label.Unit = Label.Unit.World;\r\n\r\n    /** @see {@link fontFace} */\r\n    protected _fontFace: FontFace | undefined;\r\n\r\n    /** @see {@link color} */\r\n    protected _color: Color = new Color(Label.DEFAULT_COLOR);\r\n\r\n    /** @see {@link background} */\r\n    protected _backgroundColor: Color;\r\n\r\n    /** @see {@link type} */\r\n    protected _type: Label.Type;\r\n\r\n    /** @see {@link staticTransform} */\r\n    protected _staticTransform: mat4;\r\n\r\n    /** @see {@link dynamicTransform} */\r\n    protected _dynamicTransform: mat4;\r\n\r\n    /** @see {@link extent} */\r\n    protected _extent: [number, number];\r\n\r\n\r\n    /** @see {@link altered} */\r\n    protected readonly _altered = Object.assign(new ChangeLookup(), {\r\n        any: false, color: false, resources: false, text: false, typesetting: false,\r\n        static: false, dynamic: false,\r\n    });\r\n\r\n\r\n    /** @see {@link wrap} */\r\n    protected _wrap = false;\r\n\r\n    /** @see {@link elide} */\r\n    protected _elide: Label.Elide = Label.Elide.None;\r\n\r\n    /** @see {@link ellipsis} */\r\n    protected _ellipsis: string = Label.DEFAULT_ELLIPSIS;\r\n\r\n\r\n    /**\r\n     * Returns the window device pixel ratio. If this is not available/undefined 1.0 is returned.\r\n     */\r\n    static devicePixelRatio(): number {\r\n        if (window === undefined || typeof window.devicePixelRatio !== 'number') {\r\n            return 1.0;\r\n        }\r\n        return window.devicePixelRatio as number;\r\n    }\r\n\r\n\r\n    /**\r\n     * Constructs an unconfigured, empty label. Depending on the label type, transformations are applied\r\n     * once when typesetting (static) or every frame during rendering (dynamic).\r\n     * @param text - The text that is displayed by this label.\r\n     * @param type - Either static or dynamic. If static is used, all transformations are baked and modifications to\r\n     * any of the label's transformations are expected to occur less often.\r\n     * @param fontFace - The font face that should be used for that label, or undefined if set later.\r\n     */\r\n    constructor(text: Text, type: Label.Type, fontFace?: FontFace) {\r\n        this._text = text;\r\n        this._type = type;\r\n\r\n        this._staticTransform = mat4.create();\r\n        this._dynamicTransform = mat4.create();\r\n        this._extent = [0, 0];\r\n\r\n        if (fontFace) {\r\n            this._fontFace = fontFace;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates an Array of glyph vertices, ready to be used in the Typesetter.\r\n     */\r\n    protected vertices(): GlyphVertices {\r\n        const vertices = new GlyphVertices(this.length + this.ellipsis.length);\r\n        return vertices;\r\n    }\r\n\r\n\r\n    /**\r\n     * Interface intended to compute/update the label's static and dynamic transformations as well as invoking the\r\n     * typesetter in order to create the glyph vertices. Returns undefined, if previous vertices can be reused since no\r\n     * typesetting was required. Returns an empty GlyphVertices storage if label is invalid or cannot be rendered ...\r\n     */\r\n    abstract typeset(): GlyphVertices | undefined;\r\n\r\n\r\n    /**\r\n     * Returns the character at the specified index.\r\n     * @param index - The zero-based index of the desired character.\r\n     * @returns character at the specified index\r\n     */\r\n    charAt(index: number): string {\r\n        return this._text.charAt(index);\r\n    }\r\n\r\n    /**\r\n     * Returns the Unicode value (codepoint) of the character at the specified location.\r\n     * @param index - The zero-based index of the desired character. If there is no character at the specified index,\r\n     * NaN is returned.\r\n     * @returns - codepoint of the char at given index or NaN\r\n     */\r\n    charCodeAt(index: number): number {\r\n        return this._text.charCodeAt(index);\r\n    }\r\n\r\n    /**\r\n     * Returns, whether or not the character at a given index is equal to the default or the text's line feed character.\r\n     * @param index - The zero-based index of the desired character. If there is no character at the specified index,\r\n     * NaN is returned.\r\n     * @returns - true if char at given index equals the text's line feed character\r\n     */\r\n    lineFeedAt(index: number): boolean {\r\n        return this.charAt(index) === this.lineFeed;\r\n    }\r\n\r\n\r\n    /**\r\n     * Gets the kerning value before (i.e., left in left-to-right writing systems) the given glyph index.\r\n     * @param index - index of the glyph in this label\r\n     * @returns - kerning value before glyph at given index\r\n     */\r\n    kerningBefore(index: number): number {\r\n        if (index < 1 || index > this.length) {\r\n            return NaN;\r\n        }\r\n        return this._fontFace!.kerning(this.charCodeAt(index - 1), this.charCodeAt(index));\r\n    }\r\n\r\n    /**\r\n     * Gets the kerning value after (i.e., right in left-to-right writing systems) the given glyph index.\r\n     * @param index - index of the glyph in this label\r\n     * @returns - kerning value after glyph at given index\r\n     */\r\n    kerningAfter(index: number): number {\r\n        if (index < 0 || index > this.length - 1) {\r\n            return NaN;\r\n        }\r\n        return this._fontFace!.kerning(this.charCodeAt(index), this.charCodeAt(index + 1));\r\n    }\r\n\r\n    /**\r\n     * Returns the advancement of the glyph at given index.\r\n     * @param index - The zero-based index of the desired character. If there is no character at the specified index,\r\n     * NaN is returned.\r\n     * @returns - advancement of the glyph at given index or NaN\r\n     */\r\n    advance(index: number): number {\r\n        if (index < 0 || index > this.length) {\r\n            return NaN;\r\n        }\r\n        return this._fontFace!.glyph(this.charCodeAt(index)).advance;\r\n    }\r\n\r\n    /**\r\n     * Convenience getter to the label's text as string.\r\n     * @returns the label's text as string\r\n     */\r\n    toString(): string {\r\n        if (this._text instanceof Text) {\r\n            return this._text.text;\r\n        }\r\n        return this._text;\r\n    }\r\n\r\n    /**\r\n     * Intended for resetting alteration status.\r\n     */\r\n    reset(): void {\r\n        this._altered.reset();\r\n    }\r\n\r\n\r\n    /**\r\n     * Text that is to be rendered.\r\n     */\r\n    set text(text: Text) {\r\n        this._altered.alter('text');\r\n        this._text = text;\r\n    }\r\n    get text(): Text {\r\n        return this._text;\r\n    }\r\n\r\n    /**\r\n     * Read-only access to this labels type specified at construction time. Static labels are baking as much\r\n     * transformations as possible into the glyph vertices (used for GPU). This means, when the position or size\r\n     * changes, the label must be typeset again and vertices are fully re-computed. For dynamic labels, only most\r\n     * relevant transformations are applied and dynamic transformations such as rotation, translation, scale etc,\r\n     * are applied during rendering without requiring re-typesetting or re-computation of vertices. The type,\r\n     * however, does not relate to the text. Whenever the text changes, re-typesetting etc. have to be invoked.\r\n     */\r\n    get type(): Label.Type {\r\n        return this._type;\r\n    }\r\n\r\n    /**\r\n     * Length of the text, i.e., number of characters within the text.\r\n     */\r\n    get length(): number {\r\n        return this._text.length;\r\n    }\r\n\r\n    /**\r\n     * Character that is to be used for Line feed.\r\n     */\r\n    get lineFeed(): string {\r\n        if (this._text instanceof Text) {\r\n            return this._text.lineFeed;\r\n        }\r\n        return Text.DEFAULT_LINE_FEED;\r\n    }\r\n\r\n    /**\r\n     * If enabled, breaks lines automatically at line width (while typesetting). Note that elide mode takes precedence.\r\n     */\r\n    set wrap(flag: boolean) {\r\n        this._wrap = flag;\r\n    }\r\n    get wrap(): boolean {\r\n        return this._wrap;\r\n    }\r\n\r\n    /**\r\n     * If enabled, shrinks the label to line width. Depending on the elide mode, the ellipses is put left, middle, or\r\n     * right. The ellipsis string can be adjusted (@see {@link ellipsis}). If the labels text does not exceed the line\r\n     * width no elide will be applied.\r\n     */\r\n    set elide(elide: Label.Elide) {\r\n        this._elide = elide;\r\n    }\r\n    get elide(): Label.Elide {\r\n        return this._elide;\r\n    }\r\n\r\n    /**\r\n     * Allows to override/customize the ellipsis string used for text elide (@see {@link elide}).\r\n     */\r\n    set ellipsis(ellipsis: string) {\r\n        if (this._ellipsis === ellipsis) {\r\n            return;\r\n        }\r\n        this._ellipsis = ellipsis;\r\n        if (this._elide !== Label.Elide.None) {\r\n            this._altered.alter('typesetting');\r\n        }\r\n    }\r\n    get ellipsis(): string {\r\n        return this._ellipsis;\r\n    }\r\n\r\n    /**\r\n     * Line width used to either maximum length for elide or maximum length for line breaks due to word wrap. The line\r\n     * width is expected in font size.\r\n     */\r\n    set lineWidth(lineWidth: number) {\r\n        if (this._lineWidth === lineWidth) {\r\n            return;\r\n        }\r\n        this._lineWidth = lineWidth;\r\n        this._altered.alter('typesetting');\r\n    }\r\n\r\n    /**\r\n     * Width of a single line in typesetting space (the unit used while Typesetting, i.e., the unit as the font face's\r\n     * glyph texture atlas). Since the font face needs to be defined in order to typeset, we assume here that the label\r\n     * has a defined fontFace.\r\n     */\r\n    get lineWidth(): number {\r\n        /* this.fontSize and lineWidth use the same unit (i.e., this.fontSizeUnit),\r\n         * this._lineWidth is expected to be in the same unit as the fontFace's glyph texture atlas */\r\n        return this._lineWidth * this._fontFace!.size / this.fontSize;\r\n    }\r\n\r\n    /**\r\n     * Horizontal text alignment for typesetting.\r\n     */\r\n    set alignment(alignment: Label.Alignment) {\r\n        if (this._alignment === alignment) {\r\n            return;\r\n        }\r\n        this._alignment = alignment;\r\n        this._altered.alter('typesetting');\r\n    }\r\n    get alignment(): Label.Alignment {\r\n        return this._alignment;\r\n    }\r\n\r\n    /**\r\n     * Vertical text anchor point used for positional reference.\r\n     */\r\n    set lineAnchor(anchor: Label.LineAnchor) {\r\n        if (this._lineAnchor === anchor) {\r\n            return;\r\n        }\r\n        this._lineAnchor = anchor;\r\n        this._altered.alter('typesetting');\r\n    }\r\n    get lineAnchor(): Label.LineAnchor {\r\n        return this._lineAnchor;\r\n    }\r\n\r\n\r\n    /**\r\n     * The currently used font size.\r\n     * (@see {@link fontSizeUnit})\r\n     */\r\n    set fontSize(size: number) {\r\n        if (this._fontSize === size) {\r\n            return;\r\n        }\r\n        this._fontSize = size;\r\n        this._altered.alter('typesetting');\r\n    }\r\n    get fontSize(): number {\r\n        return this._fontSize;\r\n    }\r\n\r\n    /**\r\n     * This unit is used for the font size.\r\n     * (@see {@link fontSize})\r\n     */\r\n    set fontSizeUnit(unit: Label.Unit) {\r\n        if (this._fontSizeUnit === unit) {\r\n            return;\r\n        }\r\n        this._fontSizeUnit = unit;\r\n        this._altered.alter('typesetting');\r\n    }\r\n    get fontSizeUnit(): Label.Unit {\r\n        return this._fontSizeUnit;\r\n    }\r\n\r\n    /**\r\n     * Font face used for typesetting, transformation, and rendering. To avoid unnecessary state changes when rendering,\r\n     * prefer to add labels of the same font face consecutively (since this specifies draw sequence and state change\r\n     * occurs whenever font face changes between two subsequent labels).\r\n     */\r\n    set fontFace(fontFace: FontFace | undefined) {\r\n        if (this._fontFace === fontFace) {\r\n            return;\r\n        }\r\n        this._fontFace = fontFace;\r\n        this._altered.alter('typesetting');\r\n        this._altered.alter('resources');\r\n    }\r\n    get fontFace(): FontFace | undefined {\r\n        return this._fontFace;\r\n    }\r\n\r\n    /**\r\n     * Color used for text rendering.\r\n     */\r\n    set color(color: Color) {\r\n        if (this._color.equals(color)) {\r\n            return;\r\n        }\r\n        this._color = color;\r\n        this._altered.alter('color');\r\n    }\r\n    get color(): Color {\r\n        return this._color;\r\n    }\r\n\r\n    /**\r\n     * Color used for background of text rendering.\r\n     */\r\n    set backgroundColor(color: Color) {\r\n        if (this._backgroundColor.equals(color)) {\r\n            return;\r\n        }\r\n        this._backgroundColor = color;\r\n        this._altered.alter('color');\r\n    }\r\n    get backgroundColor(): Color {\r\n        return this._backgroundColor;\r\n    }\r\n\r\n\r\n    /**\r\n     * Transformation used to move, scale, rotate, skew, etc. the label into an arbitrary coordinate space (e.g.,\r\n     * screen space, world space, ...). This can be set either explicitly or implicitly using various transformation\r\n     * utility functions. @todo review/refine this.\r\n     */\r\n    set staticTransform(transform: mat4) {\r\n        if (mat4.equals(this._staticTransform, transform)) {\r\n            return;\r\n        }\r\n        this._staticTransform = transform;\r\n        this._altered.alter('static');\r\n    }\r\n    get staticTransform(): mat4 {\r\n\r\n        const s = this.fontSize / this._fontFace!.size;\r\n\r\n        const t: mat4 = mat4.create();\r\n        mat4.scale(t, this._staticTransform, vec3.fromValues(s, s, s));\r\n\r\n        return t;\r\n    }\r\n\r\n    /**\r\n     * Stores the resulting dynamic transform. This is intended to be used when in dynamic mode.\r\n     * (e.g., for calculations to the final transform).\r\n     */\r\n    set dynamicTransform(t: mat4) {\r\n        this._altered.alter('dynamic');\r\n        this._dynamicTransform = t;\r\n    }\r\n    get dynamicTransform(): mat4 {\r\n        return this._dynamicTransform;\r\n    }\r\n\r\n    /**\r\n     * The typesetter sets this extent after typesetting and applying the static transform. Don't set this manually\r\n     * without typesetting.\r\n     */\r\n    set extent(e: [number, number]) {\r\n        this._extent = e;\r\n    }\r\n    /**\r\n     * Returns the width and height of the typset label in fontSizeUnit. Both are zero if not typeset yet. The static\r\n     * transform is already applied.\r\n     */\r\n    get extent(): [number, number] {\r\n        return this._extent;\r\n    }\r\n\r\n    /*\r\n    * Whether or not any property or the referenced text has changed requiring, e.g., the new typesetting.\r\n    * The alteration status can be reset using `reset` (@see {@link reset}).\r\n    */\r\n    get altered(): boolean {\r\n        return this._altered.any || this._text.altered || this._color.altered;\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not this label is ready to be rendered (aka has a font face with valid texture\r\n     * as well as a text with a length > 0).\r\n     */\r\n    get valid(): boolean {\r\n        return this._fontFace !== undefined && this._fontFace.glyphTexture.valid && this._text.length > 0;\r\n    }\r\n\r\n}\r\n\r\nexport namespace Label {\r\n\r\n    export enum Type {\r\n        Static = 'static',\r\n        Dynamic = 'dynamic',\r\n    }\r\n\r\n    export enum Elide {\r\n        None = 'none',\r\n        Left = 'left',\r\n        Middle = 'middle',\r\n        Right = 'right',\r\n    }\r\n\r\n    export enum Alignment {\r\n        Left = 'left',\r\n        Center = 'center',\r\n        Right = 'right',\r\n    }\r\n\r\n    export enum LineAnchor {\r\n        Top = 'top',\r\n        Ascent = 'ascent',\r\n        Center = 'center',\r\n        Baseline = 'baseline',\r\n        Descent = 'descent',\r\n        Bottom = 'bottom',\r\n    }\r\n\r\n    /**\r\n     * This unit is used for the font size and related calculations.\r\n     */\r\n    export enum Unit {\r\n        /* abstract world unit */\r\n        World = 'world',\r\n        /* screen pixel */\r\n        Pixel = 'pixel',\r\n        /* mixed: world unit for positioning, px unit for font size*/\r\n        Mixed = 'mixed',\r\n        /** @todo Pt for point unit */\r\n        /* Point = 'point', */\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { assert } from '../auxiliaries';\r\n\r\nimport { Buffer } from '../buffer';\r\nimport { Context } from '../context';\r\nimport { Geometry } from '../geometry';\r\nimport { Initializable } from '../initializable';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * Gathers vertices and other data needed for drawing all labels using the glyphquad-shaders.\r\n *\r\n * Example usage:\r\n * ```\r\n * const labelGeometry = new LabelGeometry(this._context);\r\n * labelGeometry = new LabelGeometry(this._context);\r\n * ...\r\n * labelGeometry.initialize();\r\n *\r\n * program.initialize([vert, frag], false);\r\n * program.attribute('a_vertex', labelGeometry.vertexLocation);\r\n * program.attribute('a_texCoord', labelGeometry.texCoordLocation);\r\n * program.attribute('a_origin', labelGeometry.originLocation);\r\n * program.attribute('a_tangent', labelGeometry.tangentLocation);\r\n * program.attribute('a_up', labelGeometry.upLocation);\r\n *\r\n * program.link();\r\n * ...\r\n * labelGeometry.update(origins, tangents, ups, texCoords);\r\n * ...\r\n * labelGeometry.bind();\r\n * labelGeometry.draw();\r\n * labelGeometry.unbind();\r\n * ```\r\n */\r\nexport class LabelGeometry extends Geometry {\r\n\r\n    /**\r\n     * These 2D vertices are equal for all quads, used for instanced rendering. Their actual position will be changed\r\n     * in the vertex shader, based on origins, tangents and up-vector attributes.\r\n     * 2-------4\r\n     * |  \\    |\r\n     * |    \\  |\r\n     * 1-------3\r\n     */\r\n    protected static readonly VERTICES = new Float32Array(\r\n        [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]);\r\n\r\n    /**\r\n     * Handle to the glyph template this geometry is based on.\r\n     */\r\n    protected _vertices: Buffer;\r\n\r\n    protected _texCoords: Buffer;\r\n    protected _origins: Buffer;\r\n    protected _tangents: Buffer;\r\n    protected _ups: Buffer;\r\n\r\n\r\n    /**\r\n     * Number of glyphs encoded within the geometry.\r\n     */\r\n    protected _numberOfGlyphs = 0;\r\n\r\n\r\n    protected _vertexLocation: GLuint;\r\n    protected _texCoordLocation: GLuint;\r\n\r\n    protected _originLocation: GLuint;\r\n    protected _tangentLocation: GLuint;\r\n    protected _upLocation: GLuint;\r\n\r\n\r\n    /**\r\n     * Object constructor, requires a context and an identifier.\r\n     * @param context - Valid context to create the object for.\r\n     * @param identifier - Meaningful name for identification of this instance.\r\n     */\r\n    constructor(context: Context, identifier?: string) {\r\n        super(context, identifier);\r\n\r\n        assert(context.isWebGL2 || context.supportsInstancedArrays,\r\n            `expected extension 'ANGLE_instanced_arrays' to be supported`);\r\n\r\n        /* Generate identifier from constructor name if none given. */\r\n        identifier = identifier !== undefined && identifier !== `` ? identifier : this.constructor.name;\r\n\r\n        this._vertices = new Buffer(context, `${identifier}VBO`);\r\n        this._buffers.push(this._vertices);\r\n\r\n        this._texCoords = new Buffer(context, `${identifier}TexCoordVBO`);\r\n        this._buffers.push(this._texCoords);\r\n\r\n        this._origins = new Buffer(context, `${identifier}OriginVBO`);\r\n        this._buffers.push(this._origins);\r\n\r\n        this._tangents = new Buffer(context, `${identifier}TangentVBO`);\r\n        this._buffers.push(this._tangents);\r\n\r\n        this._ups = new Buffer(context, `${identifier}UpVBO`);\r\n        this._buffers.push(this._ups);\r\n    }\r\n\r\n    /**\r\n     * Binds all vertex buffer objects (VBOs) to pre-set attribute binding points.\r\n     * @param indices - Unused, since pre-set locations are used.\r\n     */\r\n    protected bindBuffers(/*indices: Array<GLuint>*/): void {\r\n        const gl = this.context.gl;\r\n        const gl2facade = this.context.gl2facade;\r\n\r\n        /* Please note the implicit bind in attribEnable */\r\n\r\n        this._vertices.attribEnable(this._vertexLocation,\r\n            2, gl.FLOAT, false, 8, 0, true, false);\r\n        gl2facade.vertexAttribDivisor(this._vertexLocation, 0);\r\n\r\n        this._texCoords.attribEnable(this._texCoordLocation,\r\n            4, gl.FLOAT, false, 16, 0, true, false);\r\n        gl2facade.vertexAttribDivisor(this._texCoordLocation, 1);\r\n\r\n        this._origins.attribEnable(this._originLocation,\r\n            3, gl.FLOAT, false, 12, 0, true, false);\r\n        gl2facade.vertexAttribDivisor(this._originLocation, 1);\r\n\r\n        this._tangents.attribEnable(this._tangentLocation,\r\n            3, gl.FLOAT, false, 12, 0, true, false);\r\n        gl2facade.vertexAttribDivisor(this._tangentLocation, 1);\r\n\r\n        this._ups.attribEnable(this._upLocation,\r\n            3, gl.FLOAT, false, 12, 0, true, false);\r\n        gl2facade.vertexAttribDivisor(this._upLocation, 1);\r\n    }\r\n\r\n    /**\r\n     * Unbinds all vertex buffer objects (VBOs) and disables their attribute binding points.\r\n     * @param indices - Unused, since pre-set locations are used.\r\n     */\r\n    protected unbindBuffers(/*indices: Array<GLuint>*/): void {\r\n        /* Please note the implicit unbind in attribEnable is skipped */\r\n        this._vertices.attribDisable(this._vertexLocation, false, false);\r\n        this._texCoords.attribDisable(this._texCoordLocation, false, false);\r\n        this._origins.attribDisable(this._originLocation, false, false);\r\n        this._tangents.attribDisable(this._tangentLocation, false, false);\r\n        this._ups.attribDisable(this._upLocation, false, false);\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates the vertex buffer object (VBO) and creates and initializes the buffer's data store.\r\n     * @param vertexLocation - Attribute binding point for vertices.\r\n     * @param texCoordLocation - Attribute binding point for texture coordinates.\r\n     * @param originLocation - Attribute binding point for glyph origin coordinates\r\n     * @param tangentLocation - Attribute binding point for glyph tangent coordinates.\r\n     * @param upLocation - Attribute binding point for glyph up-vector coordinates.\r\n     */\r\n    initialize(\r\n        vertexLocation: GLuint = 0,\r\n        texCoordLocation: GLuint = 1,\r\n        originLocation: GLuint = 2,\r\n        tangentLocation: GLuint = 3,\r\n        upLocation: GLuint = 4): boolean {\r\n\r\n        this._vertexLocation = vertexLocation;\r\n        this._texCoordLocation = texCoordLocation;\r\n        this._originLocation = originLocation;\r\n        this._tangentLocation = tangentLocation;\r\n        this._upLocation = upLocation;\r\n\r\n        const gl = this.context.gl;\r\n        const valid = super.initialize(\r\n            [gl.ARRAY_BUFFER, gl.ARRAY_BUFFER, gl.ARRAY_BUFFER, gl.ARRAY_BUFFER, gl.ARRAY_BUFFER]);\r\n\r\n        /**\r\n         * These vertices are equal for all quads. There actual position will be changed using\r\n         * origin, tangent and up(-vector).\r\n         */\r\n        this._vertices.data(LabelGeometry.VERTICES, gl.STATIC_DRAW);\r\n\r\n        return valid;\r\n    }\r\n\r\n    /**\r\n     * Use this method to set (or update) the glyph coordinates, e.g. after typesetting or after the calculations\r\n     * of a placement algorithm. The actual interpretation of those buffers depends on the shader, usually they are\r\n     * 3-component vectors in world space (provided as flat array.)\r\n     * @param origins - Coordinates of the lower left corner of every glyph.\r\n     * @param tangents - Tangent vector for every glyph (direction along base line).\r\n     * @param up - Up vector for every glyph (orthogonal to its tangent vector).\r\n     * @param texCoords - The texture coordinates for every glyph, format: ll.x, ll.y, ur.x, ur.y.\r\n     */\r\n    update(origins: Float32Array, tangents: Float32Array, up: Float32Array, texCoords: Float32Array): void {\r\n\r\n        /** @todo The following buffers could be simplified to an interleaved buffer. */\r\n\r\n        this._numberOfGlyphs = origins.length / 3;\r\n        const gl = this.context.gl;\r\n\r\n        this._texCoords.data(texCoords, gl.STATIC_DRAW);\r\n        this._origins.data(origins, gl.STATIC_DRAW);\r\n        this._tangents.data(tangents, gl.STATIC_DRAW);\r\n        this._ups.data(up, gl.STATIC_DRAW);\r\n    }\r\n\r\n    /**\r\n     * Specifies/invokes the draw of specific labels (ranges are supposed to be tracked/managed from outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    draw(offset: GLint = 0, count: GLint = 0): void {\r\n        const gl = this.context.gl;\r\n        const gl2facade = this.context.gl2facade;\r\n\r\n        this._vertices.attribEnable(this._vertexLocation,\r\n            2, gl.FLOAT, false, 8, 0, true, false);\r\n        this._texCoords.attribEnable(this._texCoordLocation,\r\n            4, gl.FLOAT, false, 16, offset * 16, true, false);\r\n        this._origins.attribEnable(this._originLocation,\r\n            3, gl.FLOAT, false, 12, offset * 12, true, false);\r\n        this._tangents.attribEnable(this._tangentLocation,\r\n            3, gl.FLOAT, false, 12, offset * 12, true, false);\r\n        this._ups.attribEnable(this._upLocation,\r\n            3, gl.FLOAT, false, 12, offset * 12, true, false);\r\n\r\n        gl2facade.drawArraysInstanced(gl.TRIANGLE_STRIP, 0, 4, count);\r\n    }\r\n\r\n    get numGlyphs(): number {\r\n        return this._numberOfGlyphs;\r\n    }\r\n\r\n    get valid(): boolean {\r\n        const validVertex = this._vertices && this._vertices.valid;\r\n        const validTexCoord = this._texCoords && this._texCoords.valid;\r\n        const validOrigin = this._origins && this._origins.valid;\r\n        const validTangent = this._tangents && this._tangents.valid;\r\n        const validUp = this._ups && this._ups.valid;\r\n        return this.initialized && validVertex && validTexCoord && validOrigin && validTangent && validUp;\r\n    }\r\n\r\n\r\n    /**\r\n     * Attribute location to which this geometry's vertices are bound to.\r\n     */\r\n    get vertexLocation(): GLint {\r\n        return this._vertexLocation;\r\n    }\r\n\r\n    /**\r\n     * Attribute location to which this geometry's texture coordinates are bound to.\r\n     */\r\n    get texCoordLocation(): GLint {\r\n        return this._texCoordLocation;\r\n    }\r\n\r\n    /**\r\n     * Attribute location to which this geometry's origins are bound to.\r\n     */\r\n    get originLocation(): GLint {\r\n        return this._originLocation;\r\n    }\r\n\r\n    /**\r\n     * Attribute location to which this geometry's tangents are bound to.\r\n     */\r\n    get tangentLocation(): GLint {\r\n        return this._tangentLocation;\r\n    }\r\n\r\n    /**\r\n     * Attribute location to which this geometry's up vectors are bound to.\r\n     */\r\n    get upLocation(): GLint {\r\n        return this._upLocation;\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { mat4 } from 'gl-matrix';\r\n\r\nimport { assert } from '../auxiliaries';\r\nimport { GLfloat2, GLsizei2 } from '../tuples';\r\n\r\nimport { Camera } from '../camera';\r\nimport { ChangeLookup } from '../changelookup';\r\nimport { Context } from '../context';\r\nimport { Framebuffer } from '../framebuffer';\r\nimport { Initializable } from '../initializable';\r\nimport { Program } from '../program';\r\nimport { Shader } from '../shader';\r\nimport { Texture2D } from '../texture2d';\r\nimport { GlyphVertices } from './glyphvertices';\r\n\r\nimport { Color } from '../color';\r\nimport { FontFace } from './fontface';\r\nimport { Label } from './label';\r\nimport { LabelGeometry } from './labelgeometry';\r\nimport { Position2DLabel } from './position2dlabel';\r\nimport { Position3DLabel } from './position3dlabel';\r\nimport { Projected3DLabel } from './projected3dlabel';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * This class allows rendering of multiple dynamic as well as static labels. While preparing for frame, all label\r\n * geometry is packed into single buffers for the GPU and drawing is done with as few draw calls as possible. The\r\n * preparation tries to reduce state changes when labels of same color and same font are provided consecutively.\r\n * It might be beneficial to not render labels of large static texts and some often changing dynamic texts using the\r\n * same label render pass object. Often changing texts should be out into separate passed for better performance.\r\n */\r\nexport class LabelRenderPass extends Initializable {\r\n\r\n    /**\r\n     * Default AA step scale: more crisp text rendering (the value is optimized for multi-frame sampling).\r\n     */\r\n    protected static readonly DEFAULT_AA_STEP_SCALE: GLfloat = 0.6666;\r\n\r\n\r\n    /**\r\n     * Alterable auxiliary object for tracking changes on render pass inputs and lazy updates.\r\n     */\r\n    protected readonly _altered = Object.assign(new ChangeLookup(), {\r\n        any: false,\r\n        camera: false,\r\n        geometry: false,\r\n        labels: false,\r\n        aaStepScale: false,\r\n        aaSampling: false,\r\n    });\r\n\r\n    /**\r\n     * Context, used to get context information and WebGL API access.\r\n     */\r\n    protected _context: Context;\r\n\r\n    /** @see {@link target} */\r\n    protected _target: Framebuffer;\r\n\r\n    /** @see {@link camera} */\r\n    protected _camera: Camera;\r\n\r\n    /** @see {@link ndcOffset} */\r\n    protected _ndcOffset: GLfloat2 = [0.0, 0.0];\r\n\r\n    /** @see {@link depthMask} */\r\n    protected _depthMask = false;\r\n\r\n    /** @see {@link depthFunc} */\r\n    protected _depthFunc: GLenum;\r\n\r\n    /** @see {@link aaStepScale} */\r\n    protected _aaStepScale: GLfloat;\r\n\r\n    /** @see {@link aaSampling} */\r\n    protected _aaSampling: LabelRenderPass.Sampling = LabelRenderPass.Sampling.Smooth1;\r\n\r\n\r\n    protected _program: Program;\r\n    protected _uViewProjection: WebGLUniformLocation | undefined;\r\n    protected _uNdcOffset: WebGLUniformLocation | undefined;\r\n    protected _uColor: WebGLUniformLocation | undefined;\r\n    protected _uAAStepScale: WebGLUniformLocation | undefined;\r\n    protected _uTransform: WebGLUniformLocation | undefined;\r\n    protected _uDynamic: WebGLUniformLocation | undefined;\r\n    protected _uAASampling: WebGLUniformLocation | undefined;\r\n\r\n    protected _labels = new Array<Label>();\r\n\r\n    /**\r\n     * Stores for each label (same index in _labels) the range within the geometry.\r\n     */\r\n    protected _ranges = new Array<GLsizei2>();\r\n\r\n    /**\r\n     * Stores typeset glyph vertices data per label and is used as cache to avoid unnecessary typesetting.\r\n     */\r\n    protected _verticesPerLabel = new Array<GlyphVertices | undefined>();\r\n\r\n    protected _geometry: LabelGeometry;\r\n\r\n\r\n    /**\r\n     * Creates a render pass for labels.\r\n     * @param context - Valid context to create the object for.\r\n     */\r\n    constructor(context: Context) {\r\n        super();\r\n        this._context = context;\r\n        this._depthFunc = context.gl.LESS;\r\n\r\n        this._program = new Program(context, 'LabelRenderProgram');\r\n        this._geometry = new LabelGeometry(this._context, 'LabelGeometry');\r\n\r\n        this._aaStepScale = LabelRenderPass.DEFAULT_AA_STEP_SCALE;\r\n    }\r\n\r\n    /**\r\n     * Typesets and renders 2D and 3D labels.\r\n     */\r\n    protected prepare(): void {\r\n        const frameSize = this._camera.viewport;\r\n\r\n        for (let i = 0; i < this._labels.length; ++i) {\r\n            const label = this._labels[i];\r\n            let vertices: GlyphVertices | undefined;\r\n\r\n            const forceTypeset = this._altered.labels && this._verticesPerLabel[i] === undefined;\r\n\r\n            if (label instanceof Position2DLabel) {\r\n                label.frameSize = frameSize;\r\n                vertices = label.typeset(forceTypeset);\r\n            } else if (label instanceof Projected3DLabel) {\r\n                label.camera = this._camera;\r\n                vertices = label.typeset(forceTypeset);\r\n            } else if (label instanceof Position3DLabel) {\r\n                vertices = label.typeset(forceTypeset);\r\n            }\r\n\r\n            if (vertices === undefined) {\r\n                vertices = this._verticesPerLabel[i];\r\n            } else {\r\n                this._verticesPerLabel[i] = vertices;\r\n            }\r\n\r\n            const rangeStart = i > 0 ? this._ranges[i - 1][1] : 0;\r\n            const rangeEnd = rangeStart + (vertices === undefined ? 0 : vertices.length);\r\n            this._ranges[i] = [rangeStart, rangeEnd];\r\n        }\r\n\r\n        const data: GlyphVertices = GlyphVertices.concat(this._verticesPerLabel);\r\n        this._geometry.update(data.origins, data.tangents, data.ups, data.texCoords);\r\n    }\r\n\r\n    protected draw(): void {\r\n\r\n        const gl = this._context.gl;\r\n\r\n        /* Try to avoid unnecessary binds when texture or color does not change and accumulate draw calls as long as\r\n        both remain unchanged. */\r\n\r\n        const range: GLsizei2 = [0, 0];\r\n        let currentColor: Color | undefined;\r\n        let currentFontFace: FontFace | undefined;\r\n\r\n        const identity = mat4.create();\r\n\r\n        for (let i = 0; i < this._labels.length; ++i) {\r\n            const label0 = this._labels[i];\r\n            range[1] = this._ranges[i][1];\r\n\r\n            /* Skip labels that have no depictable glyphs. */\r\n            if (range[0] === range[1] || (i < this._labels.length - 1 && !label0.valid)) {\r\n                continue;\r\n            }\r\n\r\n            /* If the next/subsequent label has no depictable glyphs or has the same font and color, then increase\r\n            draw range. */\r\n            const label1 = i < this._labels.length - 1 ? this._labels[i + 1] : undefined;\r\n            const bothStatic = label1 && label0.type === Label.Type.Static && label1.type === Label.Type.Static;\r\n            const sameColor = label1 && label0.color.equals(label1.color);\r\n            const sameFontFace = label1 && label0.fontFace === label1.fontFace;\r\n            const sameUnit = label1 && label0.fontSizeUnit === label1.fontSizeUnit;\r\n\r\n            if (label1 && (this._ranges[i + 1][0] === this._ranges[i + 1][1]\r\n                || (bothStatic && sameColor && sameFontFace && sameUnit))) {\r\n                continue;\r\n            }\r\n\r\n            const dynamic = label0.type === Label.Type.Dynamic;\r\n            gl.uniform1i(this._uDynamic, dynamic);\r\n            if (dynamic) {\r\n                gl.uniformMatrix4fv(this._uTransform, false, label0.dynamicTransform);\r\n            }\r\n\r\n            if (currentColor === undefined || !currentColor.equals(label0.color)) {\r\n                gl.uniform4fv(this._uColor, label0.color.rgbaF32);\r\n                currentColor = label0.color;\r\n            }\r\n            if (currentFontFace !== label0.fontFace) {\r\n                label0.fontFace!.glyphTexture.bind(gl.TEXTURE0);\r\n                currentFontFace = label0.fontFace;\r\n            }\r\n\r\n            switch (label0.fontSizeUnit) {\r\n                case Label.Unit.Pixel:\r\n                    gl.uniformMatrix4fv(this._uViewProjection, false, identity);\r\n                    break;\r\n\r\n                case Label.Unit.World:\r\n                case Label.Unit.Mixed:\r\n                default:\r\n                    gl.uniformMatrix4fv(this._uViewProjection, false, this._camera.viewProjection);\r\n            }\r\n\r\n            this._geometry.draw(range[0], range[1] - range[0]);\r\n\r\n            range[0] = range[1];\r\n        }\r\n    }\r\n\r\n\r\n    @Initializable.initialize()\r\n    initialize(): boolean {\r\n        const gl = this._context.gl;\r\n\r\n        this._geometry.initialize();\r\n\r\n        this._context.enable(['OES_standard_derivatives']);\r\n\r\n        const vert = new Shader(this._context, gl.VERTEX_SHADER, 'glyph.vert');\r\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n        vert.initialize(require(`./glyph.vert`));\r\n        const frag = new Shader(this._context, gl.FRAGMENT_SHADER, 'glyph.frag');\r\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n        frag.initialize(require(`./glyph.frag`));\r\n\r\n        this._program.initialize([vert, frag], false);\r\n\r\n        this._program.attribute('a_vertex', this._geometry.vertexLocation);\r\n        this._program.attribute('a_texCoord', this._geometry.texCoordLocation);\r\n        this._program.attribute('a_origin', this._geometry.originLocation);\r\n        this._program.attribute('a_tangent', this._geometry.tangentLocation);\r\n        this._program.attribute('a_up', this._geometry.upLocation);\r\n\r\n        this._program.link();\r\n\r\n        this._uViewProjection = this._program.uniform('u_viewProjection');\r\n        this._uNdcOffset = this._program.uniform('u_ndcOffset');\r\n        this._uColor = this._program.uniform('u_color');\r\n        this._uAAStepScale = this._program.uniform('u_aaStepScale');\r\n        this._uAASampling = this._program.uniform('u_aaSampling');\r\n        this._uTransform = this._program.uniform('u_transform');\r\n        this._uDynamic = this._program.uniform('u_dynamic');\r\n\r\n        this._program.bind();\r\n        gl.uniform1i(this._program.uniform('u_glyphs'), 0);\r\n        gl.uniform1f(this._uAAStepScale, this._aaStepScale);\r\n        gl.uniform1i(this._uAASampling, this._aaSampling);\r\n        this._program.unbind();\r\n\r\n        return true;\r\n    }\r\n\r\n    @Initializable.uninitialize()\r\n    uninitialize(): void {\r\n        this._geometry.uninitialize();\r\n        this._program.uninitialize();\r\n\r\n        this._uViewProjection = undefined;\r\n        this._uNdcOffset = undefined;\r\n        this._uColor = undefined;\r\n        this._uAAStepScale = undefined;\r\n        this._uAASampling = undefined;\r\n        this._uTransform = undefined;\r\n        this._uDynamic = undefined;\r\n    }\r\n\r\n\r\n    /**\r\n     * @param override - If enabled, everything will be updated, regardless of tracked alterations.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    update(override: boolean = false): void {\r\n        const gl = this._context.gl;\r\n        this._program.bind();\r\n\r\n        if (override || this._altered.camera || this._camera.altered) {\r\n            gl.uniformMatrix4fv(this._uViewProjection, false, this._camera.viewProjection);\r\n        }\r\n\r\n        if (override || this._altered.aaStepScale) {\r\n            gl.uniform1f(this._uAAStepScale, this._aaStepScale);\r\n        }\r\n\r\n        if (override || this._altered.aaSampling) {\r\n            gl.uniform1i(this._uAASampling, this._aaSampling);\r\n        }\r\n\r\n        /* Some labels need the camera to update their font size and position. */\r\n        let labelsAltered = override || this._altered.labels || this._altered.camera || this._camera.altered;\r\n        let i = 0;\r\n        while (labelsAltered === false && i < this._labels.length) {\r\n            labelsAltered = this._labels[i].altered;\r\n            ++i;\r\n        }\r\n        if (labelsAltered) {\r\n            this.prepare();\r\n        }\r\n\r\n        this._altered.reset();\r\n    }\r\n\r\n    /**\r\n     * This invokes draw calls on all labels. Thereby it aims to avoid unnecessary binds when texture or color does\r\n     * not change and accumulate draw calls as long as both remain unchanged. Further more, draw calls will be\r\n     * accumulated as much as possible (static labels only).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    frame(): void {\r\n        if (this._geometry.numGlyphs === 0 || this._labels.length === 0) {\r\n            return;\r\n        }\r\n\r\n        assert(this._target && this._target.valid, `valid target expected`);\r\n        const gl = this._context.gl;\r\n\r\n        const size = this._target.size;\r\n        gl.viewport(0, 0, size[0], size[1]);\r\n\r\n        /* CULL FACE is expected to be disabled. */\r\n        // gl.disable(gl.CULL_FACE);\r\n\r\n        gl.enable(gl.DEPTH_TEST);\r\n        gl.depthFunc(this._depthFunc);\r\n\r\n        if (this._depthMask === false) {\r\n            gl.depthMask(this._depthMask);\r\n        }\r\n\r\n        gl.enable(gl.BLEND);\r\n        /* Note that WebGL supports separate blend by default. */\r\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n        /* Use the following plain blend mode when relying on premultiplied colors. */\r\n        // gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n        this._program.bind();\r\n\r\n        gl.uniform2fv(this._uNdcOffset, this._ndcOffset);\r\n        gl.uniformMatrix4fv(this._uViewProjection, false, this._camera.viewProjection);\r\n\r\n        /* Controlling renderer is expected to bind the appropriate target, thus, unbinding is not\r\n        necessary. */\r\n        this._target.bind();\r\n\r\n        this._geometry.bind();\r\n        this.draw();\r\n\r\n        /** Every stage is expected to bind its own vao when drawing, unbinding is not necessary. */\r\n        // this._geometry.unbind();\r\n        /** Every stage is expected to bind its own program when drawing, unbinding is not necessary. */\r\n        // this._program.unbind();\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, Texture2D.DEFAULT_TEXTURE);\r\n\r\n\r\n        if (this._depthMask === false) {\r\n            gl.depthMask(true);\r\n        }\r\n\r\n        gl.depthFunc(gl.LESS);\r\n\r\n        gl.disable(gl.DEPTH_TEST);\r\n        gl.disable(gl.BLEND);\r\n    }\r\n\r\n    /**\r\n     * Unbind the label geometry.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    unbind(): void {\r\n        if (this._geometry.valid) {\r\n            this._geometry.unbind();\r\n        }\r\n        if (this._program.valid) {\r\n            this._program.unbind();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets the framebuffer the quads are rendered to.\r\n     * @param target - Framebuffer to render into.\r\n     */\r\n    set target(target: Framebuffer) {\r\n        this.assertInitialized();\r\n        this._target = target;\r\n    }\r\n\r\n    /**\r\n     * The NDC offset is used for vertex displacement within subpixel space for anti-aliasing over\r\n     * multiple intermediate frames (multi-frame sampling).\r\n     * @param offset - Subpixel offset used for vertex displacement (multi-frame anti-aliasing).\r\n     */\r\n    set ndcOffset(offset: GLfloat2) {\r\n        this.assertInitialized();\r\n        this._ndcOffset = offset;\r\n    }\r\n\r\n    /**\r\n     * The camera's viewProjection is used for 3D label placement calculation.\r\n     */\r\n    set camera(camera: Camera) {\r\n        this.assertInitialized();\r\n        if (this._camera === camera) {\r\n            return;\r\n        }\r\n        this._camera = camera;\r\n        this._altered.alter('camera');\r\n    }\r\n\r\n\r\n    /**\r\n     * Allows to restrict writing into the depth buffer. If the mask is set to `true`, labels might affect the depth\r\n     * buffer and apply fragment-based discard in order to reduce blank glyph areas to override depth values. If this\r\n     * mode is used, labels should be the last or one of the later rendering passes. If the mask is set to `false`, the\r\n     * common transparency/blending etc issues might occur when several labels overlap or other, e.g., transparent\r\n     * areas are rendered afterwards... However, if only labels of the same color can overlap and no other objects can\r\n     * interfere, this might be the better choice.\r\n     * By default, writing to the depth buffer is disabled (depth mask is false).\r\n     */\r\n    set depthMask(flag: boolean) {\r\n        this._depthMask = flag;\r\n    }\r\n    get depthMask(): boolean {\r\n        return this._depthMask;\r\n    }\r\n\r\n\r\n    /**\r\n     * Allows to specify the value used for depth buffer comparisons.\r\n     */\r\n    set depthFunc(func: GLenum) {\r\n        this._depthFunc = func;\r\n    }\r\n    get depthFunc(): GLenum {\r\n        return this._depthFunc;\r\n    }\r\n\r\n\r\n    /**\r\n     * Access to the labels that should be rendered. Note that label preparation is currently done per\r\n     * label-render pass instance, so drawing the same label with multiple renderers should be avoided. Label\r\n     * preparation will be invoked on update, iff the labels or the font face have changed.\r\n     */\r\n    set labels(labels: Array<Label>) {\r\n        this._labels = labels;\r\n\r\n        this._ranges.length = this._labels.length;\r\n        this._verticesPerLabel.length = this._labels.length;\r\n        this._verticesPerLabel.fill(undefined);\r\n\r\n        this._altered.alter('labels');\r\n    }\r\n    get labels(): Array<Label> {\r\n        return this._labels;\r\n    }\r\n\r\n\r\n    /**\r\n     * Allows to specify the basic AA step scale which is more of a hack to provide seemingly smoother (e.g., >= 1.0)\r\n     * or crisper (e.g., between 0.0 and 1.0) contours without specific multi sampling. Its just scaling the outcome\r\n     * of the derivatives.\r\n     */\r\n    set aaStepScale(scale: GLfloat) {\r\n        if (this._aaStepScale === scale) {\r\n            return;\r\n        }\r\n        this._aaStepScale = scale;\r\n        this._altered.alter('aaStepScale');\r\n    }\r\n    get aaStepScale(): GLfloat {\r\n        return this._aaStepScale;\r\n    }\r\n\r\n\r\n    /**\r\n     * Specify the sampling pattern/mode (anti-aliasing / no anti-aliasing) for glyph rendering. The sampling should be\r\n     * increased when rendering small text, e.g., starting at font size of 16px or less. With larger text, there is no\r\n     * perceptual benefit with more than one derivative sample, i.e., LabelRenderPass.Sampling.Smooth1.\r\n     */\r\n    set aaSampling(sampling: LabelRenderPass.Sampling) {\r\n        if (this._aaSampling === sampling) {\r\n            return;\r\n        }\r\n        this._aaSampling = sampling;\r\n        this._altered.alter('aaSampling');\r\n    }\r\n    get aaSampling(): LabelRenderPass.Sampling {\r\n        return this._aaSampling;\r\n    }\r\n\r\n\r\n    /**\r\n     * Read-only access (leaky) to the actual label geometry (VAO) used to draw this pass's labels.\r\n     */\r\n    get geometry(): LabelGeometry {\r\n        return this._geometry;\r\n    }\r\n\r\n    /**\r\n     * Read-only access (leaky) to the actual label geometry (VAO) used to draw this pass's labels.\r\n     */\r\n    get program(): Program {\r\n        return this._program;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport namespace LabelRenderPass {\r\n\r\n    export enum Sampling {\r\n        None = 0,        //  1 sample,  no derivatives\r\n        Smooth1 = 1,     //  1 sample,  requires derivatives\r\n        Horizontal3 = 2, //  3 samples, requires derivatives\r\n        Vertical3 = 3,   //  3 samples, requires derivatives\r\n        Grid3x3 = 4,     //  9 samples, requires derivatives\r\n        Grid4x4 = 5,     // 16 samples, requires derivatives\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { mat4, vec2, vec3, vec4 } from 'gl-matrix';\r\n\r\nimport { logIf, LogLevel } from '../auxiliaries';\r\nimport { m4, v2 } from '../gl-matrix-extensions';\r\nimport { GLfloat2 } from '../tuples';\r\n\r\nimport { FontFace } from './fontface';\r\nimport { GlyphVertices } from './glyphvertices';\r\nimport { Label } from './label';\r\nimport { Text } from './text';\r\n\r\nimport { Typesetter } from './typesetter';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * A Label that can be positioned in 2D space. The unit for positions, size and transformations, is pixel (px).\r\n */\r\nexport class Position2DLabel extends Label {\r\n\r\n    private static readonly DEFAULT_FONTSIZE_PX = 20;\r\n\r\n    /** @see {@link position} */\r\n    protected _position: vec2;\r\n    /** @see {@link direction} */\r\n    protected _direction: vec2;\r\n    /** @see {@link frameSize} */\r\n    protected _frameSize: vec2;\r\n\r\n\r\n    /**\r\n     * Constructs a pre-configured 2D-label with given text\r\n     * @param text - The text that is displayed by this label.\r\n     * @param fontFace - The font face that should be used for that label, or undefined if set later.\r\n     */\r\n    constructor(text: Text, type: Label.Type, fontFace?: FontFace) {\r\n        super(text, type, fontFace);\r\n        this._position = vec2.fromValues(0.0, 0.0);\r\n        this._direction = vec2.fromValues(1.0, 0.0);\r\n\r\n        this._frameSize = vec2.create();\r\n\r\n        this._fontSize = Position2DLabel.DEFAULT_FONTSIZE_PX;\r\n        this._fontSizeUnit = Label.Unit.Pixel;\r\n    }\r\n\r\n    /**\r\n     * If altered, creates a position and direction-vector, then prepares the vertex storage and invokes\r\n     * typesetting. Depending on the label's type (static or dynamic) the transform is stored and applied either during\r\n     * typesetting (static) or passed as single transform to the vertex shader during rendering (dynamic).\r\n     */\r\n    typeset(force = false): GlyphVertices | undefined {\r\n        const typeset = force || this._altered.typesetting || this._altered.static || this._altered.text\r\n            || this.text.altered;\r\n        if (!typeset && !this._altered.dynamic && !force) {\r\n            return undefined;\r\n        }\r\n\r\n        if (!this.valid) {\r\n            return new GlyphVertices(0);\r\n        }\r\n\r\n        /** @todo meaningful margins from label.margins or config.margins ? */\r\n        const margins: vec4 = vec4.create();\r\n\r\n        /** @todo this will be required for point units */\r\n        // const ppiScale = Label.devicePixelRatio();\r\n\r\n        /* compute transform matrix */\r\n        const transform = mat4.create();\r\n\r\n        /* translate to lower left in NDC */\r\n        mat4.translate(transform, m4(), vec3.fromValues(-1.0, -1.0, 0.0));\r\n        /* scale glyphs to NDC size, this._frameSize should be the viewport size */\r\n        mat4.scale(transform, transform, vec3.fromValues(2.0 / this._frameSize[0], 2.0 / this._frameSize[1], 1.0));\r\n\r\n        /* scale glyphs to pixel size with respect to the displays ppi */\r\n        // mat4.scale(transform, transform, vec3.fromValues(ppiScale, ppiScale, ppiScale));\r\n\r\n        /* translate to origin in point space - scale origin within margined extend\r\n         * (i.e., viewport with margined areas removed)\r\n         */\r\n        const marginedExtent = vec2.sub(v2(), vec2.fromValues(\r\n            this._frameSize[0], this._frameSize[1]),\r\n            vec2.fromValues(margins[3] + margins[1], margins[2] + margins[0]));\r\n\r\n        const v3 = vec3.fromValues(0.5 * marginedExtent[0], 0.5 * marginedExtent[1], 0);\r\n        vec3.add(v3, v3, vec3.fromValues(margins[3], margins[2], 0.0));\r\n        mat4.translate(transform, transform, v3);\r\n\r\n\r\n        /* apply user transformations (position, direction) */\r\n        mat4.translate(transform, transform, vec3.fromValues(this._position[0], this._position[1], 0));\r\n\r\n        const n: vec2 = vec2.fromValues(1.0, 0.0);\r\n        let angle = vec2.angle(n, this._direction);\r\n\r\n        /* perp dot product for signed angle */\r\n        if (n[0] * this._direction[1] - n[1] * this._direction[0] < 0.0) {\r\n            angle = -angle;\r\n        }\r\n\r\n        mat4.rotateZ(transform, transform, angle);\r\n\r\n        switch (this._type) {\r\n            case Label.Type.Static:\r\n                this.staticTransform = mat4.clone(transform);\r\n                this.dynamicTransform = m4();\r\n                break;\r\n            case Label.Type.Dynamic:\r\n                this.staticTransform = m4();\r\n                this.dynamicTransform = mat4.clone(transform);\r\n                break;\r\n            default:\r\n        }\r\n\r\n        this._altered.reset();\r\n        this._text.altered = false;\r\n        this._color.altered = false;\r\n\r\n        if (!typeset) {\r\n            return undefined;\r\n        }\r\n        const vertices = this.vertices();\r\n        Typesetter.typeset(this, vertices);\r\n        return vertices;\r\n    }\r\n\r\n    /**\r\n     * Width and height of targeted frame used to account for font size in px or pt units. Changing the frame size\r\n     * invalidates the transform.\r\n     */\r\n    set frameSize(size: vec2 | GLfloat2) {\r\n        if (vec2.equals(this._frameSize, size)) {\r\n            return;\r\n        }\r\n        vec2.max(this._frameSize, size, [1.0, 1.0]);\r\n        this._altered.alter(this._type);\r\n    }\r\n    get frameSize(): vec2 | GLfloat2 {\r\n        return this._frameSize;\r\n    }\r\n\r\n    /**\r\n     * Sets the 2D position of the label's reference point.\r\n     */\r\n    set position(position: vec2 | GLfloat2) {\r\n        if (vec2.equals(this._position, position)) {\r\n            return;\r\n        }\r\n        this._position = vec2.clone(position);\r\n        this._altered.alter(this._type);\r\n    }\r\n    get position(): vec2 | GLfloat2 {\r\n        return this._position;\r\n    }\r\n\r\n    /**\r\n     * Sets the 2D direction of the label, i.e., the direction of the baseline.\r\n     */\r\n    set direction(direction: vec2 | GLfloat2) {\r\n        vec2.normalize(this._direction, direction);\r\n        this._altered.alter(this._type);\r\n    }\r\n    get direction(): vec2 | GLfloat2 {\r\n        return this._direction;\r\n    }\r\n\r\n    /**\r\n     * This unit is used for the font size. This method overrides the super.fontSizeUnit, since `Position2DLabel` only\r\n     * supports Pixel, for now.\r\n     * (@see {@link fontSize})\r\n     * @param newUnit - Unit to be used, though, this label type only supports pixel units (px).\r\n     */\r\n    set fontSizeUnit(unit: Label.Unit) {\r\n        logIf(unit !== Label.Unit.Pixel, LogLevel.Warning,\r\n            `font size unit other than 'px' are not supported in position-2d-label, given ${unit}`);\r\n    }\r\n    get fontSizeUnit(): Label.Unit {\r\n        return this._fontSizeUnit;\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { mat4, vec3 } from 'gl-matrix';\r\n\r\nimport { logIf, LogLevel } from '../auxiliaries';\r\nimport { m4, v3 } from '../gl-matrix-extensions';\r\nimport { GLfloat3 } from '../tuples';\r\n\r\nimport { FontFace } from './fontface';\r\nimport { GlyphVertices } from './glyphvertices';\r\nimport { Label } from './label';\r\nimport { Text } from './text';\r\nimport { Typesetter } from './typesetter';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * A Label that can be positioned in 3D space. The unit for positions, size and transformations, is the abstract World\r\n * Unit.\r\n */\r\nexport class Position3DLabel extends Label {\r\n\r\n    private static readonly DEFAULT_FONTSIZE_WORLD = 0.05;\r\n\r\n    /** @see {@link position} */\r\n    protected _position: vec3;\r\n    /** @see {@link direction} */\r\n    protected _direction: vec3;\r\n    /** @see {@link up} */\r\n    protected _up: vec3;\r\n\r\n\r\n    /**\r\n     * Constructs a pre-configured 3D-label with given text. Depending on the label type, transformations are applied\r\n     * once when typesetting (static) or every frame during rendering (dynamic).\r\n     * @param text - The text that is displayed by this label.\r\n     * @param type - Either static or dynamic. If static is used, all transformations are baked and modifications to\r\n     * on any of the label's transformations are expected to occur less often.\r\n     * @param fontFace - The font face that should be used for that label, or undefined if set later.\r\n     */\r\n    constructor(text: Text, type: Label.Type, fontFace?: FontFace) {\r\n        super(text, type, fontFace);\r\n        this._position = vec3.fromValues(0.0, 0.0, 0.0);\r\n        this._direction = vec3.fromValues(1.0, 0.0, 0.0);\r\n        this._up = vec3.fromValues(0.0, 1.0, 0.0);\r\n\r\n        this._fontSize = Position3DLabel.DEFAULT_FONTSIZE_WORLD;\r\n        this._fontSizeUnit = Label.Unit.World;\r\n    }\r\n\r\n    /**\r\n     * If altered, creates a position, direction, and up-vector, then prepares the vertex storage and invokes\r\n     * typesetting. Depending on the label's type (static or dynamic) the transform is stored and applied either during\r\n     * typesetting (static) or passed as single transform to the vertex shader during rendering (dynamic).\r\n     */\r\n    typeset(force = false): GlyphVertices | undefined {\r\n        const typeset = force || this._altered.typesetting || this._altered.static || this._altered.text\r\n            || this.text.altered;\r\n        if (!typeset && !this._altered.dynamic && !force) {\r\n            return undefined;\r\n        }\r\n\r\n        if (!this.valid) {\r\n            return new GlyphVertices(0);\r\n        }\r\n\r\n        const transform = mat4.create();\r\n\r\n        /* Compute position and direction transform. */\r\n\r\n        mat4.translate(transform, m4(), this._position);\r\n        const normal = vec3.cross(v3(), this._direction, this._up);\r\n\r\n        const rotation = mat4.fromValues(\r\n            this._direction[0], this._direction[1], this._direction[2], 0.0,\r\n            this._up[0], this._up[1], this._up[2], 0.0,\r\n            normal[0], normal[1], normal[2], 0.0,\r\n            0.0, 0.0, 0.0, 1.0);\r\n\r\n        mat4.mul(transform, transform, rotation);\r\n\r\n        switch (this._type) {\r\n            case Label.Type.Static:\r\n                this.staticTransform = mat4.clone(transform);\r\n                this.dynamicTransform = m4();\r\n                break;\r\n            case Label.Type.Dynamic:\r\n                this.staticTransform = m4();\r\n                this.dynamicTransform = mat4.clone(transform);\r\n                break;\r\n            default:\r\n        }\r\n\r\n        /* Check whether or not to (re)typeset and reset alterations. */\r\n\r\n\r\n        this._altered.reset();\r\n        this._text.altered = false;\r\n        this._color.altered = false;\r\n\r\n        if (!typeset) {\r\n            return undefined;\r\n        }\r\n        const vertices = this.vertices();\r\n        Typesetter.typeset(this, vertices);\r\n        return vertices;\r\n    }\r\n\r\n    /**\r\n     * Sets the 3D position of the label's reference point.\r\n     */\r\n    set position(position: vec3 | GLfloat3) {\r\n        this._position = vec3.clone(position);\r\n        this._altered.alter(this._type);\r\n    }\r\n    get position(): vec3 | GLfloat3 {\r\n        return this._position;\r\n    }\r\n\r\n    /**\r\n     * Sets the 3D direction of the label, i.e., the direction of the baseline.\r\n     */\r\n    set direction(direction: vec3 | GLfloat3) {\r\n        vec3.normalize(this._direction, direction);\r\n        this._altered.alter(this._type);\r\n    }\r\n    get direction(): vec3 | GLfloat3 {\r\n        return this._direction;\r\n    }\r\n\r\n    /**\r\n     * Sets the up-vector of the label. It should be orthogonal to the direction to ensure that the label is not skewed.\r\n     */\r\n    set up(up: vec3 | GLfloat3) {\r\n        this._up = vec3.normalize(this._up, up);\r\n        this._altered.alter(this._type);\r\n    }\r\n    get up(): vec3 | GLfloat3 {\r\n        return this._up;\r\n    }\r\n\r\n    /**\r\n     * This unit is used for the font size. This method overrides the super.fontSizeUnit, since `Position3DLabel` only\r\n     * supports world unit for now. Neither pixel (px) nor point (pt) are supported.\r\n     * (@see {@link fontSize})\r\n     * @param unit - Unit to be used, though, this label type only supports world units.\r\n     */\r\n    set fontSizeUnit(unit: Label.Unit) {\r\n        logIf(unit !== Label.Unit.World, LogLevel.Warning,\r\n            `font size unit other than 'world' are not supported in position-3d-label, given ${unit}`);\r\n    }\r\n    get fontSizeUnit(): Label.Unit {\r\n        return this._fontSizeUnit;\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { mat4, vec2, vec3, vec4 } from 'gl-matrix';\r\n\r\nimport { log, logIf, LogLevel } from '../auxiliaries';\r\nimport { Camera } from '../camera';\r\nimport { m4 } from '../gl-matrix-extensions';\r\nimport { GLfloat2, GLfloat3 } from '../tuples';\r\n\r\nimport { FontFace } from './fontface';\r\nimport { GlyphVertices } from './glyphvertices';\r\nimport { Label } from './label';\r\nimport { Text } from './text';\r\nimport { Typesetter } from './typesetter';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * A Label that can be positioned in 3D space, but projected onto a 2D plane (a.k.a. screen).\r\n * The unit for positioning is world space, the unit for size is pixel (px).\r\n */\r\nexport class Projected3DLabel extends Label {\r\n\r\n    private static readonly DEFAULT_FONTSIZE_PX = 20;\r\n\r\n    /** @see {@link position} */\r\n    protected _position: vec3;\r\n    /** @see {@link direction} */\r\n    protected _direction: vec2;\r\n    /** @see {@link camera} */\r\n    protected _camera: Camera | undefined;\r\n\r\n\r\n    /**\r\n     * Constructs a pre-configured projected 3D-label with given text. Depending on the label type, transformations are\r\n     * applied once when typesetting (static) or every frame during rendering (dynamic).\r\n     * @param text - The text that is displayed by this label.\r\n     * @param type - Either static or dynamic. If static is used, all transformations are baked and modifications to\r\n     * on any of the label's transformations are expected to occur less often.\r\n     * @param fontFace - The font face that should be used for that label, or undefined if set later.\r\n     */\r\n    constructor(text: Text, type: Label.Type, fontFace?: FontFace) {\r\n        super(text, type, fontFace);\r\n        this._position = vec3.fromValues(0.0, 0.0, 0.0);\r\n        this._direction = vec2.fromValues(1.0, 0.0);\r\n\r\n        this._fontSize = Projected3DLabel.DEFAULT_FONTSIZE_PX;\r\n        this._fontSizeUnit = Label.Unit.Mixed;\r\n    }\r\n\r\n    /**\r\n     * If altered, creates a position and direction-vector, then prepares the vertex storage and invokes\r\n     * typesetting. Depending on the label's type (static or dynamic) the transform is stored and applied either during\r\n     * typesetting (static) or passed as single transform to the vertex shader during rendering (dynamic).\r\n     */\r\n    typeset(force = false): GlyphVertices | undefined {\r\n        const typeset = force || this._altered.typesetting || this._altered.static || this._altered.text\r\n            || this.text.altered;\r\n        if (!typeset && !this._altered.dynamic && !force) {\r\n            return undefined;\r\n        }\r\n\r\n        if (!this.valid || this._camera === undefined) {\r\n            return new GlyphVertices(0);\r\n        }\r\n\r\n        /* Compute position and direction transform. */\r\n\r\n        /** @todo meaningful margins from label.margins or config.margins ? */\r\n        const margins: vec4 = vec4.create();\r\n        /** @todo meaningful ppiScale from label.ppiScale or config.ppiScale ? */\r\n        const ppiScale = 1;\r\n\r\n        /* compute transform matrix */\r\n        const transform = mat4.create();\r\n\r\n        /* translate to lower left in NDC */\r\n        mat4.translate(transform, transform, vec3.fromValues(-1.0, -1.0, 0.0));\r\n        /* scale glyphs to NDC size */\r\n        mat4.scale(transform, transform,\r\n            vec3.fromValues(2.0 / this._camera.viewport[0], 2.0 / this._camera.viewport[1], 1.0));\r\n\r\n        /* scale glyphs to pixel size with respect to the displays ppi */\r\n        mat4.scale(transform, transform, vec3.fromValues(ppiScale, ppiScale, ppiScale));\r\n\r\n        /* translate to origin in point space - scale origin within margined extend\r\n         * (i.e., viewport with margined areas removed)\r\n         */\r\n        const marginedExtent: vec2 = vec2.create();\r\n        vec2.sub(marginedExtent, vec2.fromValues(\r\n            this._camera.viewport[0] / ppiScale, this._camera.viewport[1] / ppiScale),\r\n            vec2.fromValues(margins[3] + margins[1], margins[2] + margins[0]));\r\n\r\n        const v3 = vec3.fromValues(0.5 * marginedExtent[0], 0.5 * marginedExtent[1], 0);\r\n        vec3.add(v3, v3, vec3.fromValues(margins[3], margins[2], 0.0));\r\n        mat4.translate(transform, transform, v3);\r\n\r\n        const anchor = vec4.fromValues(this._position[0], this._position[1], this._position[2], 1);\r\n\r\n        vec4.transformMat4(anchor, anchor, this._camera.viewProjection);\r\n\r\n        const translation = mat4.create();\r\n        const w = anchor[3];\r\n        mat4.translate(translation, translation, vec3.fromValues(anchor[0] / w, anchor[1] / w, anchor[2] / w));\r\n        mat4.mul(transform, translation, transform);\r\n\r\n        const n: vec2 = vec2.fromValues(1.0, 0.0);\r\n        let angle = vec2.angle(n, this._direction);\r\n\r\n        /* perp dot product for signed angle */\r\n        if (n[0] * this._direction[1] - n[1] * this._direction[0] < 0.0) {\r\n            angle = -angle;\r\n        }\r\n\r\n        mat4.rotateZ(transform, transform, angle);\r\n\r\n        if (this._camera.viewProjectionInverse) {\r\n            mat4.mul(transform, this._camera.viewProjectionInverse, transform);\r\n        } else {\r\n            log(LogLevel.Warning, `camera.viewProjectionInverse is null`);\r\n        }\r\n\r\n        switch (this._type) {\r\n            case Label.Type.Static:\r\n                this.staticTransform = mat4.clone(transform);\r\n                this.dynamicTransform = m4();\r\n                break;\r\n            case Label.Type.Dynamic:\r\n                this.staticTransform = m4();\r\n                this.dynamicTransform = mat4.clone(transform);\r\n                break;\r\n            default:\r\n        }\r\n\r\n        /* Check whether or not to (re)typeset and reset alterations. */\r\n\r\n        this._altered.reset();\r\n        this._text.altered = false;\r\n        this._color.altered = false;\r\n\r\n        if (!typeset) {\r\n            return undefined;\r\n        }\r\n        const vertices = this.vertices();\r\n        Typesetter.typeset(this, vertices);\r\n        return vertices;\r\n    }\r\n\r\n    /**\r\n     * The camera is used to retrieve (1) the view projection matrix, and (2) the width and height of targeted frame.\r\n     * (1) is used to project the 3D label as a 2D label, (2) is used to calculate the font size in px units.\r\n     * Setting the camera invalidates the transform.\r\n     */\r\n    set camera(camera: Camera | undefined) {\r\n        this._camera = camera;\r\n        this._altered.alter(this._type);\r\n    }\r\n    get camera(): Camera | undefined {\r\n        return this._camera;\r\n    }\r\n\r\n    /**\r\n     * Sets the 3D position of the label's reference point.\r\n     */\r\n    set position(position: vec3 | GLfloat3) {\r\n        this._position = vec3.clone(position);\r\n        this._altered.alter(this._type);\r\n    }\r\n    get position(): vec3 | GLfloat3 {\r\n        return this._position;\r\n    }\r\n\r\n    /**\r\n     * Sets the 2D direction of the label, i.e., the direction of the baseline.\r\n     */\r\n    set direction(direction: vec2 | GLfloat2) {\r\n        vec2.normalize(this._direction, direction);\r\n        this._altered.alter(this._type);\r\n    }\r\n    get direction(): vec2 | GLfloat2 {\r\n        return this._direction;\r\n    }\r\n\r\n    /**\r\n     * This unit is used for the font size. This method overrides the super.fontSizeUnit, since `Projected3DLabel` only\r\n     * supports Pixel, for now.\r\n     * (@see {@link fontSize})\r\n     * @param newUnit - Unit to be used, though, this label type only supports pixel units (px).\r\n     */\r\n    set fontSizeUnit(unit: Label.Unit) {\r\n        logIf(unit !== Label.Unit.Mixed, LogLevel.Warning,\r\n            `font size unit other than 'px' are not supported in projected-3d-label, given ${unit}`);\r\n    }\r\n    get fontSizeUnit(): Label.Unit {\r\n        return this._fontSizeUnit;\r\n    }\r\n}\r\n","\r\n/**\r\n * The text object is intended as character sequence manipulation interface. A text can be referenced by multiple labels\r\n * for rendering and interaction. E.g., a single text could be rendered multiple times at different locations or using\r\n * different font faces, alignments, etc. The text object will probably increase in complexity when additional features\r\n * such as text formatting (bold, italic, varying size), (multi)cursor, (multi)selection, etc. will be added.\r\n */\r\nexport class Text {\r\n\r\n    static readonly DEFAULT_LINE_FEED = '\\x0A';\r\n\r\n\r\n    /** @see {@link text} */\r\n    protected _text: string;\r\n\r\n    /** @see {@link lineFeed} */\r\n    protected _lineFeed: string = Text.DEFAULT_LINE_FEED;\r\n\r\n    /** @see {@link altered} */\r\n    protected _altered = false;\r\n\r\n    /**\r\n     * Constructs a Text to be used for a Label.\r\n     * @param text - the actual content of this Text.\r\n     * @param lineFeed - char for lineFeed, default is LF.\r\n     */\r\n    constructor(text?: string, lineFeed?: string) {\r\n        this._text = text ? text : '';\r\n\r\n        this._lineFeed = lineFeed !== undefined ? lineFeed : this._lineFeed;\r\n    }\r\n\r\n    /**\r\n     * Length of the text, i.e., number of characters within the text.\r\n     */\r\n    get length(): number {\r\n        return this._text.length;\r\n    }\r\n\r\n    /**\r\n     * Returns the character at the specified index.\r\n     * @param index - The zero-based index of the desired character.\r\n     * @returns character at the specified index\r\n     */\r\n    charAt(index: number): string {\r\n        return this._text.charAt(index);\r\n    }\r\n\r\n    /**\r\n     * Returns the Unicode value (codepoint) of the character at the specified location.\r\n     * @param index - The zero-based index of the desired character.\r\n     * @returns - Codepoint of the character at given index or NaN, if no character exists at index.\r\n     */\r\n    charCodeAt(index: number): number {\r\n        return this._text.charCodeAt(index);\r\n    }\r\n\r\n\r\n    /**\r\n     * Text that is to be rendered.\r\n     */\r\n    set text(text: string) {\r\n        if (this._text === text) {\r\n            return;\r\n        }\r\n        this._altered = true;\r\n        this._text = text;\r\n    }\r\n    get text(): string {\r\n        return this._text;\r\n    }\r\n\r\n    /**\r\n     * Character that is to be used for Line feed.\r\n     */\r\n    set lineFeed(lineFeed: string) {\r\n        if (this._lineFeed === lineFeed) {\r\n            return;\r\n        }\r\n        this._altered = true;\r\n        this._lineFeed = lineFeed;\r\n        return;\r\n    }\r\n    get lineFeed(): string {\r\n        return this._lineFeed;\r\n    }\r\n\r\n    /**\r\n     * Intended for resetting alteration status.\r\n     */\r\n    set altered(altered: boolean) {\r\n        this._altered = altered;\r\n    }\r\n\r\n    /*\r\n     * Whether or not any other public property has changed.\r\n     */\r\n    get altered(): boolean {\r\n        return this._altered;\r\n    }\r\n\r\n}\r\n\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { mat4, vec2, vec3, vec4 } from 'gl-matrix';\r\n\r\nimport { assert } from '../auxiliaries';\r\nimport { v3 } from '../gl-matrix-extensions';\r\n\r\nimport { FontFace } from './fontface';\r\nimport { Glyph } from './glyph';\r\nimport { GlyphVertices } from './glyphvertices';\r\nimport { Label } from './label';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\ntype Fragment = [number, number, Typesetter.FragmentType];\r\ntype Line = [number, number, number];\r\n\r\n\r\n/**\r\n * The typesetter is responsible for layouting text on the screen or in a virtual space. It takes a label,\r\n * which defines where it wants to appear (@see {@link Label}), and a font face that is used to display the\r\n * text, and computes the actual position for each glyph. Its output is a vertex array, which describes the glyphs\r\n * position and appearance on the screen/in the scene and which can be rendered using a LabelRenderPass.\r\n */\r\nexport class Typesetter {\r\n\r\n    private static readonly DELIMITERS: string = '\\x0A ,.-/()[]<>';\r\n\r\n    /**\r\n     * Configuring the vertex for a given glyph to be rendered. If no vertex is given or the glyph is not depictable,\r\n     * this method immediately exits at the beginning.\r\n     * @param fontFace - Font face to be applied for setting up the vertex.\r\n     * @param pen - Typesetting position which is the not-yet-transformed position the glyph will be rendered at.\r\n     * @param glyph - Glyph that is to be rendered/configured.\r\n     * @param vertices - Glyph vertex store required for rendering.\r\n     * @param index - Glyph vertex index for store manipulation.\r\n     */\r\n    private static writeVertex(fontFace: FontFace, pen: vec2, glyph: Glyph,\r\n        vertices: GlyphVertices | undefined, index: number): void {\r\n\r\n        if (vertices === undefined || glyph.depictable() === false) {\r\n            return;\r\n        }\r\n\r\n        // Please be aware that all vertices getter return typed views on a big float32array.\r\n        // As a consequence do strictly rely on in-place operations only.\r\n\r\n        const padding = fontFace.glyphTexturePadding;\r\n        const origin: vec3 = vertices.origin(index);\r\n        vec3.set(origin, pen[0], pen[1], 0.0);\r\n        origin[0] += glyph.bearing[0] - padding[3];\r\n        origin[1] += glyph.bearing[1] - glyph.extent[1];\r\n\r\n        vec3.set(vertices.tangent(index), glyph.extent[0], 0.0, 0.0);\r\n        vec3.set(vertices.up(index), 0.0, glyph.extent[1], 0.0);\r\n\r\n        const lowerLeft: vec2 = vertices.uvLowerLeft(index);\r\n        vec2.copy(lowerLeft, glyph.subTextureOrigin);\r\n\r\n        const upperRight: vec2 = vertices.uvUpperRight(index);\r\n        vec2.add(upperRight, glyph.subTextureOrigin, glyph.subTextureExtent);\r\n    }\r\n\r\n\r\n    /**\r\n     * Compute an initial line anchor w.r.t. the targeted anchoring.\r\n     * @param label - Label to adjust the y-positions for.\r\n     */\r\n    private static lineAnchorOffset(label: Label): number {\r\n        let offset = 0.0;\r\n\r\n        const padding = label.fontFace!.glyphTexturePadding;\r\n        const fontFace = label.fontFace!;\r\n        switch (label.lineAnchor) {\r\n            case Label.LineAnchor.Ascent:\r\n                offset = fontFace.ascent - padding[0];\r\n                break;\r\n            case Label.LineAnchor.Descent:\r\n                offset = fontFace.descent * (1.0 + padding[0] / fontFace.ascent);\r\n                break;\r\n            case Label.LineAnchor.Center:\r\n                offset = fontFace.ascent - padding[0] - 0.5 * fontFace.size;\r\n                break;\r\n            case Label.LineAnchor.Top:\r\n                offset = fontFace.ascent - padding[0] + 0.5 * fontFace.lineGap;\r\n                break;\r\n            case Label.LineAnchor.Bottom:\r\n                offset = fontFace.ascent - padding[0] + 0.5 * fontFace.lineGap - fontFace.lineHeight;\r\n                break;\r\n            case Label.LineAnchor.Baseline:\r\n            default:\r\n                offset = - padding[0];\r\n                break;\r\n        }\r\n        return offset;\r\n    }\r\n\r\n\r\n    /**\r\n     * Resolves a typed float array storing the advances of each of the label's characters.\r\n     * @param label - Label to resolve advances for.\r\n     * @param text - Text to compute advances for, if none is given, label.text is used.\r\n     * @returns - A typed float array of all ordered character advances.\r\n     */\r\n    private static advances(label: Label, text?: string): Float32Array {\r\n        assert(label.fontFace !== undefined, `expected a font face for label in order to resolve advances`);\r\n        if (text === undefined) {\r\n            text = label.text.text;\r\n        }\r\n\r\n        const advances = new Float32Array(text.length);\r\n        for (let i = 0; i < text.length; ++i) {\r\n            const charCode = text.charCodeAt(i);\r\n            advances[i] = label.fontFace!.glyph(charCode).advance;\r\n        }\r\n        return advances;\r\n    }\r\n\r\n    /**\r\n     * Resolves a typed float array storing the kernings of each of the label's characters.\r\n     * @param label - Label to resolve kernings for.\r\n     * @param text - Text to compute advances for, if none is given, label.text is used.\r\n     * @returns - A typed float array of all ordered character kernings.\r\n     */\r\n    private static kernings(label: Label, text?: string): Float32Array {\r\n        assert(label.fontFace !== undefined, `expected a font face for label in order to resolve kernings`);\r\n\r\n        if (text === undefined) {\r\n            const kernings = new Float32Array(label.length);\r\n            for (let i = 0; i < label.length; ++i) {\r\n                const kerning = label.kerningAfter(i);\r\n                kernings[i] = isNaN(kerning) ? 0.0 : kerning;\r\n            }\r\n            return kernings;\r\n        }\r\n\r\n        const kerningAfter = (index: number): number => {\r\n            if (index < 0 || index > text!.length - 1) {\r\n                return NaN;\r\n            }\r\n            return label.fontFace!.kerning(text!.charCodeAt(index), text!.charCodeAt(index + 1));\r\n        };\r\n\r\n        const kernings = new Float32Array(text.length);\r\n        for (let i = 0; i < text.length; ++i) {\r\n            const kerning = kerningAfter(i);\r\n            kernings[i] = isNaN(kerning) ? 0.0 : kerning;\r\n        }\r\n        return kernings;\r\n    }\r\n\r\n\r\n    /**\r\n     * Create array of word, delimiter, and line feed fragments. A fragment thereby denotes the start and exclusive end\r\n     * index as well as the type. The array is intended to favor maintainability over performance.\r\n     * @param label - Label to create fragments for.\r\n     * @returns - Fragments, i.e., indices ranges and associated fragment type (word, linefeed, delimiter).\r\n     */\r\n    private static fragments(label: Label): Array<Fragment> {\r\n\r\n        const fragments = new Array<Fragment>();\r\n\r\n        let isDelimiter: boolean;\r\n        let currentWordIndex = 0;\r\n        for (let i = 0; i < label.length; ++i) {\r\n\r\n            isDelimiter = Typesetter.DELIMITERS.indexOf(label.charAt(i)) > -1;\r\n            if (!isDelimiter /* includes LineFeed */) {\r\n                continue;\r\n            }\r\n\r\n            if (currentWordIndex < i) {\r\n                // Add previous word fragment (indicated by word index below current index).\r\n                fragments.push([currentWordIndex, i, Typesetter.FragmentType.Word]);\r\n            }\r\n            const type = label.lineFeedAt(i) ? Typesetter.FragmentType.LineFeed : Typesetter.FragmentType.Delimiter;\r\n            fragments.push([i, i + 1, type]);\r\n            currentWordIndex = i + 1;\r\n        }\r\n        // Account for last fragment that does not end with delimiter.\r\n        if (!isDelimiter!) {\r\n            fragments.push([currentWordIndex, label.length, Typesetter.FragmentType.Word]);\r\n        }\r\n\r\n        return fragments;\r\n    }\r\n\r\n    /**\r\n     * Compute fragment widths without kernings w.r.t. preceding and subsequent fragments.\r\n     * @param fragments -\r\n     * @param advances -\r\n     * @param kernings -\r\n     * @returns -\r\n     */\r\n    private static fragmentWidths(fragments: Array<Fragment>,\r\n        advances: Float32Array, kernings: Float32Array): Float32Array {\r\n\r\n        const widths = new Float32Array(fragments.length);\r\n        for (let i = 0; i < fragments.length; ++i) {\r\n            const fragment = fragments[i];\r\n            widths[i] = advances.subarray(fragment[0], fragment[1]).reduce((width, advance, index) =>\r\n                width + advance + (index < fragment[1] ? kernings[index + fragment[0]] : 0.0), 0.0);\r\n        }\r\n        return widths;\r\n    }\r\n\r\n    /**\r\n     * Computes the left and right side thresholds for elide computation.\r\n     * @param label - Label to query elide mode and line width from.\r\n     * @param ellipsisWidth - Pre-computed width of the full ellipsis (t avoid re-computation).\r\n     * @returns - The left and right thresholds intended for elide fragment retrieval.\r\n     */\r\n    private static elideThresholds(label: Label, ellipsisWidth: number): [number, number] {\r\n        switch (label.elide) {\r\n            case Label.Elide.Right:\r\n                return [label.lineWidth - ellipsisWidth, 0.0];\r\n            case Label.Elide.Middle:\r\n                const threshold = label.lineWidth / 2 - ellipsisWidth / 2;\r\n                return [threshold, threshold];\r\n            case Label.Elide.Left:\r\n                return [0.0, label.lineWidth - ellipsisWidth];\r\n            default:\r\n                return [0.0, 0.0];\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates a sub list of fragments that fit into threshold. The last fragment might be adjusted in order to cram\r\n     * as many  characters as possible for the elide. Reverse flag can be used do start left or right.\r\n     * @param threshold - Threshold in typesetting space.\r\n     * @param labelFragments - Pre-computed label fragments.\r\n     * @param labelFragmentWidths - Pre-accumulated widths of the label fragments.\r\n     * @param labelAdvances - Advances in order to reduce lookups.\r\n     * @param labelKernings - Kernings in order to reduce lookups.\r\n     * @param reverse -If enabled, the right side elide fragments will be collected and adjusted. Left side otherwise.\r\n     * @returns - A new fragment, fragment-widths array for elide advancing, and overall width.\r\n     */\r\n    private static elideFragments(threshold: number,\r\n        labelFragments: Array<Fragment>, labelFragmentWidths: Float32Array,\r\n        labelAdvances: Float32Array, labelKernings: Float32Array,\r\n        reverse: boolean): [Array<Fragment>, Array<number>, number] {\r\n\r\n        const fragments = new Array<Fragment>();\r\n        const fragmentWidths = new Array<number>();\r\n\r\n        let width = 0.0;\r\n        let lastLabelFragmentWidth = 0.0;\r\n\r\n        // tslint:disable-next-line:prefer-for-of\r\n        for (let i0 = reverse ? labelFragments.length - 1 : 0;\r\n            reverse ? i0 > -1 : i0 < labelFragments.length; reverse ? --i0 : ++i0) {\r\n\r\n            const fragment = labelFragments[i0];\r\n\r\n            if (fragment[2] === Typesetter.FragmentType.LineFeed) {\r\n                continue;\r\n            }\r\n\r\n            // If next fragment fits as a whole, put it in.\r\n            if (width + labelFragmentWidths[i0] < threshold) {\r\n                width += labelFragmentWidths[i0];\r\n\r\n                fragments.push(fragment);\r\n                fragmentWidths.push(labelFragmentWidths[i0]);\r\n                continue;\r\n            }\r\n            // If the single delimiter didn't fit or first/last character of word, then break.\r\n            if (fragment[2] === Typesetter.FragmentType.Delimiter ||\r\n                width + labelAdvances[reverse ? fragment[1] - 1 : fragment[0]] > threshold) {\r\n                break;\r\n            }\r\n\r\n            // Try to cramp as many characters of the fragment (word) as possible.\r\n            for (let i1 = reverse ? fragment[1] - 1 : fragment[0];\r\n                reverse ? i1 >= fragment[0] : i1 < fragment[1]; reverse ? --i1 : ++i1) {\r\n\r\n                if (width + lastLabelFragmentWidth + labelAdvances[i1] + labelKernings[i1] < threshold) {\r\n                    lastLabelFragmentWidth += labelAdvances[i1] + labelKernings[i1];\r\n                    continue;\r\n                }\r\n\r\n                fragments.push([reverse ? i1 + 1 : fragment[0], reverse ? fragment[1] : i1, fragment[2]]);\r\n                fragmentWidths.push(lastLabelFragmentWidth);\r\n                break;\r\n            }\r\n            break;\r\n        }\r\n\r\n        return [fragments, fragmentWidths, width + lastLabelFragmentWidth];\r\n    }\r\n\r\n\r\n    /**\r\n     * Computes origin, tangent, and up vector for every vertex of in the given range.\r\n     * @param transform - Transformation to apply to every vertex.\r\n     * @param vertices - Glyph vertices to be transformed (expected untransformed, in typesetting space).\r\n     * @param begin - Vertex index to start alignment at.\r\n     * @param end - Vertex index to stop alignment at.\r\n     */\r\n    private static transformVertices(transform: mat4,\r\n        vertices: GlyphVertices | undefined, begin: number, end: number): void {\r\n        if (vertices === undefined || mat4.equals(transform, mat4.create())) {\r\n            return;\r\n        }\r\n\r\n        for (let index: number = begin; index < end; ++index) {\r\n            const origin = vertices.origin(index);\r\n\r\n            const ll: vec3 = v3(); // Lower Left\r\n            vec3.transformMat4(ll, origin, transform);\r\n            const lr: vec3 = v3(); // Lower Right\r\n            vec3.transformMat4(lr, vec3.add(lr, origin, vertices.tangent(index)), transform);\r\n            const ul: vec3 = v3(); // Upper Left\r\n            vec3.transformMat4(ul, vec3.add(ul, origin, vertices.up(index)), transform);\r\n\r\n            vec3.copy(vertices.origin(index), ll);\r\n            vec3.sub(vertices.tangent(index), lr, ll);\r\n            vec3.sub(vertices.up(index), ul, ll);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param currentRectangle - [minX, minY, minZ, maxX, maxY, maxZ] is updated in-place\r\n     * @param newRectangle - [minX, minY, minZ, maxX, maxY, maxZ] used to update currentRectangle\r\n     */\r\n    private static updateRectangleMinMax(currentRectangle: number[], newRectangle: number[]): void {\r\n        assert(currentRectangle.length === 6 && newRectangle.length === 6, `expected the rectangles to have 6 values!`);\r\n\r\n        let i = 0;\r\n        for (; i < 3; i++) {\r\n            currentRectangle[i] = Math.min(currentRectangle[i], newRectangle[i]);\r\n        }\r\n        for (; i < 6; i++) {\r\n            currentRectangle[i] = Math.max(currentRectangle[i], newRectangle[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a vec2 [min, max] containing the minimum and the maximum of the given values.\r\n     * @param currentMin - the current minimum (e.g., initialized to +Infinity)\r\n     * @param currentMax - the current maximum (e.g., initialized to -Infinity)\r\n     * @param values - find the maximum and minimum of the given values\r\n     */\r\n    private static minMax(currentMin: number, currentMax: number, values: number[]): vec2 {\r\n        const min = Math.min(currentMin, ...values);\r\n        const max = Math.max(currentMax, ...values);\r\n        return vec2.fromValues(min, max);\r\n    }\r\n\r\n    /**\r\n     * Returns [minX, minY, minZ, maxX, maxY, maxZ] of the vertices coordinates, i.e., origins,\r\n     * origins + tangents, origins + ups, from which a bounding rectangle can be calculated.\r\n     * @param vertices - Glyph vertices to be transformed (expected untransformed, in typesetting space).\r\n     * @param begin - Vertex index to start alignment at.\r\n     * @param end - Vertex index to stop alignment at.\r\n     */\r\n    private static getMinMaxVertices(vertices: GlyphVertices, begin: number, end: number)\r\n        : [number, number, number, number, number, number] {\r\n\r\n        let minX = Number.POSITIVE_INFINITY;\r\n        let maxX = Number.NEGATIVE_INFINITY;\r\n        let minY = Number.POSITIVE_INFINITY;\r\n        let maxY = Number.NEGATIVE_INFINITY;\r\n        let minZ = Number.POSITIVE_INFINITY;\r\n        let maxZ = Number.NEGATIVE_INFINITY;\r\n\r\n        for (let i: number = begin; i < end; ++i) {\r\n            const x = Typesetter.minMax(minX, maxX, [vertices.origin(i)[0], vertices.origin(i)[0] + vertices.up(i)[0],\r\n            vertices.origin(i)[0] + vertices.tangent(i)[0]]);\r\n            minX = x[0];\r\n            maxX = x[1];\r\n\r\n            const y = Typesetter.minMax(minY, maxY, [vertices.origin(i)[1], vertices.origin(i)[1] + vertices.up(i)[1],\r\n            vertices.origin(i)[1] + vertices.tangent(i)[1]]);\r\n            minY = y[0];\r\n            maxY = y[1];\r\n\r\n            const z = Typesetter.minMax(minZ, maxZ, [vertices.origin(i)[2], vertices.origin(i)[2] + vertices.up(i)[2],\r\n            vertices.origin(i)[2] + vertices.tangent(i)[2]]);\r\n            minZ = z[0];\r\n            maxZ = z[1];\r\n        }\r\n\r\n        return [minX, minY, minZ, maxX, maxY, maxZ];\r\n    }\r\n\r\n    /**\r\n     * Adjusts the vertices for a line after typesetting (done due to line feed, word wrap, or end of line) w.r.t.\r\n     * the targeted line alignment.\r\n     * @param width - Width of the line (e.g., typesetting position at the end of the line in typesetting space).\r\n     * @param alignment - Targeted alignment, e.g., left, center, or right.\r\n     * @param vertices - Glyph vertices for rendering to align the origins' x-components of (expected untransformed).\r\n     * @param begin - Vertex index to start alignment at.\r\n     * @param end - Vertex index to stop alignment at.\r\n     */\r\n    private static transformAlignment(width: number, alignment: Label.Alignment,\r\n        vertices: GlyphVertices | undefined, begin: number, end: number): void {\r\n        if (vertices === undefined || alignment === Label.Alignment.Left) {\r\n            return;\r\n        }\r\n\r\n        let offset = -width;\r\n        if (alignment === Label.Alignment.Center) {\r\n            offset *= 0.5;\r\n        }\r\n\r\n        // Origin is expected to be in typesetting space (not transformed yet).\r\n        for (let index = begin; index < end; ++index) {\r\n            vertices.origin(index)[0] += offset;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create and transform glyph vertices for rendering.\r\n     * @param label - Label providing transform data, e.g., alignment and static transform.\r\n     * @param vertices - Glyph vertices to apply transformations to.\r\n     * @param lines - Indices of glyph vertices on same lines to apply line-based transformations.\r\n     */\r\n    private static transform(label: Label, vertices: GlyphVertices, lines: Array<Line>): void {\r\n\r\n        const boundingRectangle = [\r\n            Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY,\r\n            Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY];\r\n\r\n        for (const line of lines) {\r\n            Typesetter.transformAlignment(line[2], label.alignment, vertices, line[0], line[1]);\r\n\r\n            Typesetter.updateRectangleMinMax(boundingRectangle,\r\n                Typesetter.getMinMaxVertices(vertices, line[0], line[1]));\r\n\r\n            Typesetter.transformVertices(label.staticTransform, vertices, line[0], line[1]);\r\n        }\r\n\r\n        // transform extent from Typesetting Space to the label's fontUnitSize space (depending on the label, e.g.\r\n        // screen space (px) or world space)\r\n        const width = boundingRectangle[3] - boundingRectangle[0];\r\n        const height = boundingRectangle[4] - boundingRectangle[1];\r\n\r\n        const ll = vec4.transformMat4(vec4.create(), vec4.fromValues(0, 0, 0, 1), label.staticTransform);\r\n        const lr = vec4.transformMat4(vec4.create(), vec4.fromValues(width, 0, 0, 1), label.staticTransform);\r\n        const ul = vec4.transformMat4(vec4.create(), vec4.fromValues(0, height, 0, 1), label.staticTransform);\r\n\r\n        const extent = vec2.fromValues(vec4.distance(lr, ll), vec4.distance(ul, ll));\r\n\r\n        label.extent = [extent[0], extent[1]];\r\n    }\r\n\r\n\r\n    /**\r\n     * Typesets the given label, transforming the vertices in-world, ready to be rendered.\r\n     * @param label - The label that is to be typeset.\r\n     * @param vertices - in/out The glyph vertices, a prepared (optionally empty) vertex storage.\r\n     * @returns - The number of glyphs that are actually typeset and setup as vertices.\r\n     */\r\n    static typeset(label: Label, vertices: GlyphVertices): number {\r\n\r\n        if (label.length === 0) {\r\n            return 0;\r\n        }\r\n\r\n        assert(label.fontFace !== undefined, `expected a font face for label before typesetting`);\r\n        const fontFace = label.fontFace!;\r\n\r\n        // Retrieve advances, kernings, as well as line feed and delimiter indices.\r\n\r\n        // Utility to query glyphs by index. If the index exceeds the label's text length, the ellipsis is queried\r\n        // instead of the text. Due to pre-fetching kernings and advances, additional/optional ellipsis data is appended\r\n        // and later access via offset @see {@link advance}.\r\n        const glyphs = (index: number): Glyph => index < label.length ? fontFace.glyph(label.charCodeAt(index)) :\r\n            fontFace.glyph(label.ellipsis.charCodeAt(index - label.length));\r\n\r\n        const labelAdvances = Typesetter.advances(label);\r\n        const labelKernings = Typesetter.kernings(label);\r\n\r\n        const labelFragments = Typesetter.fragments(label);\r\n        const labelFragmentWidths = Typesetter.fragmentWidths(labelFragments, labelAdvances, labelKernings);\r\n\r\n\r\n        // const pen: vec2 = vec2.fromValues(-fontFace.glyphTexturePadding[3], -Typesetter.lineAnchorOffset(label));\r\n        const pen: vec2 = vec2.fromValues(0.0, -Typesetter.lineAnchorOffset(label));\r\n\r\n        const lines = new Array<Line>();\r\n        let vertexIndex = 0;\r\n\r\n        const elide = label.elide !== Label.Elide.None;\r\n\r\n\r\n        // Typeset Lines. A line is a 3-tuple of start-index, end-index, and line width. The indices are referencing\r\n        // vertices of the glyph vertices. They cannot be reused for further typesetting. For it a local advance\r\n        // function is defined (easier to maintain without need of so many arguments).\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n        const advance = (fragments: Array<Fragment>, fragmentWidths: Float32Array, threshold: number = NaN,\r\n            advances: Float32Array = labelAdvances, kernings: Float32Array = labelKernings, offset: number = 0) => {\r\n\r\n            let firstIndexOfLine = vertexIndex;\r\n\r\n            for (let i = 0; i < fragments.length; ++i) {\r\n\r\n                const fragment = fragments[i];\r\n                if (fragment[0] >= fragment[1]) {\r\n                    continue;\r\n                }\r\n\r\n                // Elide takes precedence, since full line width is used, so every line break is omitted.\r\n                const lineFeed = !elide && fragment[2] === Typesetter.FragmentType.LineFeed;\r\n                let wordWrap = false;\r\n\r\n                // If word wrap is desired (no elide, no line feed already and label enabled), then take words with\r\n                // subsequent delimiters into account. These should be moved to the next line together (not split).\r\n                if (!elide && !lineFeed && label.wrap) {\r\n                    // If this fragment is a non depictable delimiter don't break. Non depictable fragments/characters\r\n                    // will not be visible at the end of a line, but would increase the indent for the subsequent line.\r\n                    // This, however, is only applied for the first non depictable delimiter, since, e.g., multiple\r\n                    // spaces are probably expected to indent the next line instead of trim-like behavior.\r\n                    // Example: 'A wonderful serenity has taken place'. If line breaks is required after 'taken' it will\r\n                    // ignore the subsequent space. For 'A wonderful serenity has    taken place' four spaces will occur\r\n                    // on the next new line: '    place' instead of 'place'.\r\n                    const depictable = fragment[2] !== Typesetter.FragmentType.Delimiter ||\r\n                        glyphs(fragment[0]).depictable();\r\n\r\n                    // If this fragment is a word then take next depictable delimiter into account.\r\n                    const lookAhead = fragment[2] === Typesetter.FragmentType.Word &&\r\n                        i < fragments.length - 1 && fragments[i + 1][2] === Typesetter.FragmentType.Delimiter;\r\n                    const depictableAhead = lookAhead && glyphs(fragments[i + 1][0]).depictable();\r\n\r\n                    wordWrap = pen[0] + (depictable ? fragmentWidths[i] : 0.0)\r\n                        + (depictableAhead ? fragmentWidths[i + 1] : 0.0) > label.lineWidth;\r\n                }\r\n\r\n                // New line! Either line feed or word wrap made it.\r\n                if (lineFeed || wordWrap) {\r\n                    lines.push([firstIndexOfLine, vertexIndex, pen[0]]);\r\n                    firstIndexOfLine = vertexIndex;\r\n\r\n                    pen[0] = 0.0;\r\n                    pen[1] -= fontFace.lineHeight;\r\n\r\n                    // In case of line feed, no additional vertex needs to be written.\r\n                    if (lineFeed) {\r\n                        continue;\r\n                    }\r\n                }\r\n\r\n                // Advance forward for the next word-fragment.\r\n                for (let i = fragment[0]; i < fragment[1]; ++i) {\r\n                    if (glyphs(i).depictable()) {\r\n                        Typesetter.writeVertex(fontFace, pen, glyphs(i), vertices, vertexIndex);\r\n                        ++vertexIndex;\r\n                    }\r\n                    pen[0] += advances[i - offset] + kernings[i - offset];\r\n                }\r\n            }\r\n            if (firstIndexOfLine < vertexIndex) {\r\n                lines.push([firstIndexOfLine, vertexIndex, pen[0]]);\r\n            }\r\n        };\r\n\r\n\r\n        const fullApproximatedWidth = labelFragmentWidths.reduce((accumulate, width) => accumulate + width, 0.0);\r\n        if (elide && fullApproximatedWidth > label.lineWidth) {\r\n\r\n            // Compute width of ellipsis (reuse default advances, kernings and fragment widths functions).\r\n            const ellipsisFragments: Array<Fragment> =\r\n                [[label.length, label.length + label.ellipsis.length, Typesetter.FragmentType.Word]];\r\n\r\n            const ellipsisAdvances = Typesetter.advances(label, label.ellipsis);\r\n            const ellipsisKernings = Typesetter.kernings(label, label.ellipsis);\r\n            const ellipsisFragmentWidths = Typesetter.fragmentWidths(\r\n                [[0, label.ellipsis.length, Typesetter.FragmentType.Word]], ellipsisAdvances, ellipsisKernings);\r\n\r\n            const ellipsisWidth = ellipsisFragmentWidths[0];\r\n            // If even the ellipsis does not fit within line width, then skip typesetting.\r\n            if (label.lineWidth < ellipsisWidth) {\r\n                return 0;\r\n            }\r\n            const thresholds = Typesetter.elideThresholds(label, ellipsisWidth);\r\n\r\n            const [leftFragments, leftFragmentWidths, leftWidth] = Typesetter.elideFragments(\r\n                thresholds[0], labelFragments, labelFragmentWidths, labelAdvances, labelKernings, false);\r\n\r\n            // Pass the unused width (delta to left-side threshold) to the right-side threshold.\r\n            if (label.elide === Label.Elide.Middle) {\r\n                thresholds[1] += thresholds[0] - leftWidth;\r\n            }\r\n\r\n            const [rightFragments, rightFragmentWidths] = Typesetter.elideFragments(\r\n                thresholds[1], labelFragments, labelFragmentWidths, labelAdvances, labelKernings, true);\r\n\r\n            advance(leftFragments, new Float32Array(leftFragmentWidths));\r\n\r\n            advance(ellipsisFragments, ellipsisFragmentWidths, NaN,\r\n                ellipsisAdvances, ellipsisKernings, label.length);\r\n\r\n            advance(rightFragments.reverse(), new Float32Array(rightFragmentWidths.reverse()));\r\n\r\n            // Accumulate all lines into a single line.\r\n            assert(lines.length < 4, `expected at most 3-line-yield from advance, given ${lines}`);\r\n            lines[0][1] = lines[lines.length - 1][1];\r\n            lines[0][2] = pen[0];\r\n            lines.length = 1;\r\n\r\n        } else {\r\n\r\n            advance(labelFragments, labelFragmentWidths, label.lineWidth);\r\n\r\n        }\r\n\r\n\r\n        // Apply transforms (alignment and static label transform) to all written vertices.\r\n        Typesetter.transform(label, vertices, lines);\r\n        vertices.shrink(vertexIndex);\r\n\r\n        return vertexIndex;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport namespace Typesetter {\r\n\r\n    export enum FragmentType {\r\n        Word = 0,\r\n        Delimiter = 1,\r\n        LineFeed = 2,\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { assert, log, logIf, LogLevel } from './auxiliaries';\r\nimport { byteSizeOfFormat } from './formatbytesizes';\r\nimport { GLsizei2 } from './tuples';\r\n\r\nimport { Bindable } from './bindable';\r\nimport { TexImage2DData } from './gl2facade';\r\nimport { Initializable } from './initializable';\r\nimport { AbstractObject } from './object';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * Wrapper for an WebGL 2D texture providing size accessors and requiring for bind, unbind, resize, validity, and\r\n * initialization implementations. The texture object is created on initialization and deleted on uninitialization.\r\n * After being initialized, the texture can be resized, reformated, and data can set directly or via fetch:\r\n * ```\r\n * const texture = new Texture2D(context, 'Texture');\r\n * texture.initialize(1, 1, gl.RGB8, gl.RGB, gl.UNSIGNED_BYTE);\r\n * texture.fetch('/img/webgl-operate-logo.png', true);\r\n * ```\r\n */\r\nexport class Texture2D extends AbstractObject<WebGLTexture> implements Bindable {\r\n\r\n    /**\r\n     * Default texture, e.g., used for unbind.\r\n     */\r\n    static readonly DEFAULT_TEXTURE = undefined;\r\n\r\n    static MAX_ANISOTROPY: GLfloat | undefined = undefined;\r\n\r\n\r\n    /** @see {@link width} */\r\n    protected _width: GLsizei = 0;\r\n\r\n    /** @see {@link height} */\r\n    protected _height: GLsizei = 0;\r\n\r\n    /** @see {@link internalFormat} */\r\n    protected _internalFormat: GLenum = 0;\r\n\r\n    /** @see {@link format} */\r\n    protected _format: GLenum = 0;\r\n\r\n    /** @see {@link type} */\r\n    protected _type: GLenum = 0;\r\n\r\n    /**\r\n     * Whether or not to generate mip maps (based on minification settings).\r\n     * If true, gl.generateMipmap will be called whenever the image data changes.\r\n     */\r\n    protected _mipmap = false;\r\n\r\n    /** @see {@link anisotropy} */\r\n    protected _anisotropy: GLfloat | undefined = undefined;\r\n\r\n\r\n    /**\r\n     * Create a texture object on the GPU.\r\n     * @param width - Initial width of the texture in px.\r\n     * @param height - Initial height of the texture in px.\r\n     * @param internalFormat - Internal format of the texture object.\r\n     * @param format - Format of the texture data even though no data is passed.\r\n     * @param type - Data type of the texel data.\r\n     */\r\n    protected create(width: GLsizei, height: GLsizei, internalFormat: GLenum,\r\n        format: GLenum, type: GLenum): WebGLTexture | undefined {\r\n\r\n        assert(width > 0 && height > 0, `texture requires valid width and height of greater than zero`);\r\n        const gl = this._context.gl;\r\n        const gl2facade = this._context.gl2facade;\r\n\r\n        this._object = gl.createTexture();\r\n\r\n        this._width = width;\r\n        this._height = height;\r\n        this._internalFormat = internalFormat;\r\n        this._format = format;\r\n        this._type = type;\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, this._object);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n        /* Query max anisotropy. This is done lazy, that is, only for the first texture created. */\r\n        if (Texture2D.MAX_ANISOTROPY === undefined) {\r\n            if (this._context.supportsTextureFilterAnisotropic) {\r\n                const ext = this._context.textureFilterAnisotropic;\r\n                Texture2D.MAX_ANISOTROPY = gl.getParameter(ext.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\r\n            } else {\r\n                Texture2D.MAX_ANISOTROPY = 0.0;\r\n            }\r\n        }\r\n\r\n        gl2facade.texImage2D(gl.TEXTURE_2D, 0, this._internalFormat,\r\n            this._width, this._height, 0, this._format, this._type);\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, Texture2D.DEFAULT_TEXTURE);\r\n        /* note that gl.isTexture requires the texture to be bound */\r\n        this._valid = gl.isTexture(this._object);\r\n\r\n        this.reallocate();\r\n        return this._object;\r\n    }\r\n\r\n    /**\r\n     * Delete the texture object on the GPU. This should have the reverse effect of `create`.\r\n     */\r\n    protected delete(): void {\r\n        assert(this._object instanceof WebGLTexture, `expected WebGLTexture object`);\r\n        this._context.gl.deleteTexture(this._object);\r\n\r\n        this._object = undefined;\r\n        this._valid = false;\r\n\r\n        this._internalFormat = 0;\r\n        this._format = 0;\r\n        this._type = 0;\r\n\r\n        this._width = 0;\r\n        this._height = 0;\r\n    }\r\n\r\n    protected reallocate(): void {\r\n        const gl = this.context.gl;\r\n        const gl2facade = this._context.gl2facade;\r\n\r\n        let bytes: GLsizei = this._width * this._height * byteSizeOfFormat(this.context, this._internalFormat);\r\n        // Fix in case of implicit float and half-float texture generation (e.g., in webgl with half_float support).\r\n        if (this._type === gl2facade.HALF_FLOAT && this._internalFormat !== gl.RGBA16F) {\r\n            bytes *= 2;\r\n        } else if (this._type === gl.FLOAT && this._internalFormat !== gl.RGBA16F) {\r\n            bytes *= 4;\r\n        }\r\n        this.context.allocationRegister.reallocate(this._identifier, bytes);\r\n    }\r\n\r\n    /**\r\n     * Bind the texture object to a texture unit.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    bind(unit?: GLenum): void {\r\n        const gl = this.context.gl;\r\n        if (unit) {\r\n            gl.activeTexture(unit);\r\n        }\r\n        gl.bindTexture(gl.TEXTURE_2D, this._object);\r\n    }\r\n\r\n    /**\r\n     * Unbind the texture object from a texture unit.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    unbind(unit?: GLenum): void {\r\n        const gl = this.context.gl;\r\n        if (unit) {\r\n            gl.activeTexture(unit);\r\n        }\r\n        gl.bindTexture(gl.TEXTURE_2D, Texture2D.DEFAULT_TEXTURE);\r\n    }\r\n\r\n    /**\r\n     * Asynchronous load of an image via URL or data URI.\r\n     * @param url - Uniform resource locator string referencing the image that should be loaded (data URI supported).\r\n     * @param crossOrigin - Enable cross origin data loading.\r\n     * @returns - Promise for handling image load status.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    fetch(url: string, crossOrigin: boolean = false, flipY: boolean = false): Promise<void> {\r\n        const gl = this.context.gl;\r\n\r\n        return new Promise((resolve, reject) => {\r\n            const image = new Image();\r\n            image.onerror = () => {\r\n                log(LogLevel.Error, `loading image from '${image.src}' failed`);\r\n                reject();\r\n            };\r\n\r\n            image.onload = () => {\r\n                this.resize(image.width, image.height);\r\n\r\n                // Flip the image horizontally, since Image has the origin on the top left\r\n                // while WebGL has it on the bottom left\r\n                if (!flipY) {\r\n                    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n                }\r\n\r\n                this.data(image);\r\n                gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n\r\n                resolve();\r\n            };\r\n\r\n            if (crossOrigin) {\r\n                image.crossOrigin = 'anonymous';\r\n            }\r\n            image.src = url;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Pass image data to the texture object.\r\n     * @param data - Texel data that will be copied into the objects data store.\r\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    data(data: TexImage2DData, bind: boolean = true, unbind: boolean = true): void {\r\n        const gl = this.context.gl;\r\n        const gl2facade = this._context.gl2facade;\r\n\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n\r\n        gl2facade.texImage2D(gl.TEXTURE_2D, 0, this._internalFormat,\r\n            this._width, this._height, 0, this._format, this._type, data);\r\n\r\n        if (this._anisotropy !== undefined && this._anisotropy > 0.0) {\r\n            this.maxAnisotropy(this._anisotropy, false, false);\r\n        } else if (this._mipmap) {\r\n            this.generateMipMap(false, false);\r\n        }\r\n\r\n        if (unbind) {\r\n            this.unbind();\r\n        }\r\n        this.reallocate();\r\n    }\r\n\r\n    /**\r\n     * Sets the texture object's magnification and minification filter. If a mipmap mode is set for minification, will\r\n     * be generated automatically whenever the image data changes. The MipMap can be generated manually as well by\r\n     * calling generateMipMap (@see {@link generateMipMap}).\r\n     * @param mag - Value for the TEXTURE_MAG_FILTER parameter.\r\n     * @param min - Value for the TEXTURE_MIN_FILTER parameter.\r\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    filter(mag: GLenum, min: GLenum, bind: boolean = true, unbind: boolean = true): void {\r\n        const gl = this.context.gl;\r\n\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n        logIf(mag === gl.LINEAR_MIPMAP_LINEAR || mag === gl.LINEAR_MIPMAP_NEAREST, LogLevel.Debug,\r\n            `magnification does not utilize a MipMap (refer to LINEAR and NEAREST only)`);\r\n\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, mag);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, min);\r\n\r\n        this._mipmap = min === gl.LINEAR_MIPMAP_LINEAR || min === gl.LINEAR_MIPMAP_NEAREST;\r\n        if (this._mipmap) {\r\n            gl.generateMipmap(gl.TEXTURE_2D);\r\n        }\r\n\r\n        if (unbind) {\r\n            this.unbind();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the texture object's wrapping function for s and t coordinates.\r\n     * @param wrap_s - Value for the TEXTURE_WRAP_S parameter, defaulted to CLAMP_TO_EDGE.\r\n     * @param wrap_t - Value for the TEXTURE_WRAP_T parameter, defaulted to CLAMP_TO_EDGE.\r\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    wrap(wrap_s: GLenum, wrap_t: GLenum, bind: boolean = true, unbind: boolean = true): void {\r\n        const gl = this.context.gl;\r\n\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap_s);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap_t);\r\n        if (unbind) {\r\n            this.unbind();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This can be used to reformat the texture image without creating a new texture object. Please note that this\r\n     * resets the texture's image data to undefined. @see {@link data} for setting new image data.\r\n     * @param internalFormat - Internal format of the texture object.\r\n     * @param format - Format of the texture data even though no data is passed.\r\n     * @param type - Data type of the texel data.\r\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    reformat(internalFormat: GLenum, format?: GLenum, type?: GLenum,\r\n        bind: boolean = true, unbind: boolean = true): void {\r\n\r\n        if (internalFormat === this._internalFormat\r\n            && (format === undefined || format === this._format)\r\n            && (type === undefined || type === this._type)) {\r\n            return;\r\n        }\r\n        assert(internalFormat !== undefined, `valid internal format expected`);\r\n        this._internalFormat = internalFormat;\r\n\r\n        if (format) {\r\n            this._format = format;\r\n        }\r\n        if (type) {\r\n            this._type = type;\r\n        }\r\n\r\n        this.data(undefined, bind, unbind);\r\n    }\r\n\r\n    /**\r\n     * This should be used to implement efficient resize the texture.\r\n     * @param width - Targeted/new width of the texture in px.\r\n     * @param height - Targeted/new height of the texture in px.\r\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    resize(width: GLsizei, height: GLsizei, bind: boolean = true, unbind: boolean = true): void {\r\n        if (width === this._width && height === this._height) {\r\n            return;\r\n        }\r\n        this._width = width;\r\n        this._height = height;\r\n\r\n        this.data(undefined, bind, unbind);\r\n    }\r\n\r\n    /**\r\n     * Generate MipMap for the texture. This is only required when minification filter is set to use\r\n     * the MipMap. If the mipmap is generated, it will be automatically regenerated whenever the image data changes\r\n     * via one of this classes' methods. Should be called manually when updated image data from outside though.\r\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\r\n     */\r\n    generateMipMap(bind: boolean = true, unbind: boolean = true): void {\r\n        const gl = this.context.gl;\r\n\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n        gl.generateMipmap(gl.TEXTURE_2D);\r\n        if (unbind) {\r\n            this.unbind();\r\n        }\r\n        this._mipmap = true;\r\n    }\r\n\r\n    /**\r\n     * Sets this textures anisotropy value. If anisotropy is not supported a debug message is logged.\r\n     * If anisotropy is supported, the given value is clamped to the maximum supported anisotropy value and setup.\r\n     * Note that using as well as changing a texture's anisotropy value requires (re)generating a MipMap and takes only\r\n     * effect when minification filtering is setup to use MipMapping.\r\n     * @param max - Targeted maximum anisotropy value (will be clamped to [0.0, MAX_ANISOTROPY]).\r\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\r\n     * @returns - The anisotropy value that was actually set (undefined if anisotropy is not supported).\r\n     */\r\n    maxAnisotropy(max: GLfloat | undefined, bind: boolean = true, unbind: boolean = true): GLfloat | undefined {\r\n        if (this._context.supportsTextureFilterAnisotropic === false) {\r\n            log(LogLevel.Debug, `setting anisotropy not supported (EXT_texture_filter_anisotropic missing)`);\r\n            return undefined;\r\n        }\r\n\r\n        const gl = this.context.gl;\r\n        const ext = this._context.textureFilterAnisotropic;\r\n\r\n        this._anisotropy = max === undefined ? undefined : Math.max(0.0, Math.min(Texture2D.MAX_ANISOTROPY!, max));\r\n        logIf(max !== this._anisotropy, LogLevel.Debug,\r\n            `value clamped to max supported anisotropy of ${Texture2D.MAX_ANISOTROPY}, given ${max}`);\r\n\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n\r\n        gl.texParameterf(gl.TEXTURE_2D, ext.TEXTURE_MAX_ANISOTROPY_EXT,\r\n            this._anisotropy === undefined ? 0.0 : this._anisotropy);\r\n\r\n        this.generateMipMap(false, unbind);\r\n        return this._anisotropy;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of bytes this object approximately allocates on the GPU. The size will be zero when no\r\n     * image data was passed to the texture object.\r\n     */\r\n    get bytes(): GLsizei {\r\n        this.assertInitialized();\r\n        return this.context.allocationRegister.allocated(this._identifier);\r\n    }\r\n\r\n    /**\r\n     * Cached internal format of the texture for efficient resize. This can only be changed by re-initialization.\r\n     */\r\n    get internalFormat(): GLenum {\r\n        this.assertInitialized();\r\n        return this._internalFormat!;\r\n    }\r\n\r\n    /**\r\n     * Cached format of the data provided to the texture object for efficient resize. This is set on initialization and\r\n     * might change on data transfers.\r\n     */\r\n    get format(): GLenum {\r\n        this.assertInitialized();\r\n        return this._format!;\r\n    }\r\n\r\n    /**\r\n     * Cached type of the data provided to the texture used for efficient resize. This is set on initialization and\r\n     * might change on data transfers.\r\n     */\r\n    get type(): GLenum {\r\n        this.assertInitialized();\r\n        return this._type!;\r\n    }\r\n\r\n    /**\r\n     * The width of the texture object in px.\r\n     */\r\n    get width(): GLsizei {\r\n        this.assertInitialized();\r\n        return this._width;\r\n    }\r\n\r\n    /**\r\n     * The height of the texture object in px.\r\n     */\r\n    get height(): GLsizei {\r\n        this.assertInitialized();\r\n        return this._height;\r\n    }\r\n\r\n    /**\r\n     * Convenience getter for the 2-tuple containing width and height.\r\n     * @see {@link width}\r\n     * @see {@link height}\r\n     */\r\n    get size(): GLsizei2 {\r\n        this.assertInitialized();\r\n        return [this._width, this._height];\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { assert, log, LogLevel } from './auxiliaries';\r\nimport { byteSizeOfFormat } from './formatbytesizes';\r\nimport { GLsizei3 } from './tuples';\r\n\r\nimport { Bindable } from './bindable';\r\nimport { TexImage2DData } from './gl2facade';\r\nimport { Initializable } from './initializable';\r\nimport { AbstractObject } from './object';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * Wrapper for an WebGL 2D texture array providing size accessors and requiring for bind, unbind, resize, validity, and\r\n * initialization implementations. The texture object is created on initialization and deleted on uninitialization.\r\n * After being initialized, the texture can be resized, reformated, and data can set directly or via fetch:\r\n * ```\r\n * const texture = new Texture2DArray(context, 'Texture');\r\n * texture.initialize(1, 1, 1, gl.RGB8, gl.RGB, gl.UNSIGNED_BYTE);\r\n * texture.fetch('/img/webgl-operate-logo.png', true);\r\n * ```\r\n */\r\nexport class Texture2DArray extends AbstractObject<WebGLTexture> implements Bindable {\r\n\r\n    /**\r\n     * Default texture, e.g., used for unbind.\r\n     */\r\n    static readonly DEFAULT_TEXTURE = undefined;\r\n\r\n    /** @see {@link width} */\r\n    protected _width: GLsizei = 0;\r\n\r\n    /** @see {@link height} */\r\n    protected _height: GLsizei = 0;\r\n\r\n    /** @see {@link depth} */\r\n    protected _depth: GLsizei = 0;\r\n\r\n\r\n    /** @see {@link internalFormat} */\r\n    protected _internalFormat: GLenum = 0;\r\n\r\n    /** @see {@link format} */\r\n    protected _format: GLenum = 0;\r\n\r\n    /** @see {@link type} */\r\n    protected _type: GLenum = 0;\r\n\r\n\r\n    /**\r\n     * Create a texture object on the GPU.\r\n     * @param width - Initial width of the texture in px.\r\n     * @param height - Initial height of the texture in px.\r\n     * @param depth - Initial depth (number of slices) of the texture.\r\n     * @param internalFormat - Internal format of the texture object.\r\n     * @param format - Format of the texture data even though no data is passed.\r\n     * @param type - Data type of the texel data.\r\n     */\r\n    protected create(width: GLsizei, height: GLsizei, depth: GLsizei, internalFormat: GLenum,\r\n        format: GLenum, type: GLenum): WebGLTexture | undefined {\r\n        // texImage3D is also used for 2D array textures\r\n        assert(this._context.supportsTexImage3D, `expected texImage3D to be supported`);\r\n\r\n        assert(width > 0 && height > 0 && depth > 0,\r\n            `texture requires valid width, height, and depth of greater than zero`);\r\n        const gl = this._context.gl;\r\n        const gl2facade = this._context.gl2facade;\r\n\r\n        this._object = gl.createTexture();\r\n\r\n        this._width = width;\r\n        this._height = height;\r\n        this._depth = depth;\r\n        this._internalFormat = internalFormat;\r\n        this._format = format;\r\n        this._type = type;\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D_ARRAY, this._object);\r\n        gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_WRAP_R, gl.CLAMP_TO_EDGE);\r\n\r\n        gl2facade.texImage3D(gl.TEXTURE_2D_ARRAY, 0, this._internalFormat,\r\n            this._width, this._height, this._depth, 0, this._format, this._type);\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D_ARRAY, Texture2DArray.DEFAULT_TEXTURE);\r\n        /* note that gl.isTexture requires the texture to be bound */\r\n        this._valid = gl.isTexture(this._object);\r\n\r\n        this.reallocate();\r\n        return this._object;\r\n    }\r\n\r\n    /**\r\n     * Delete the texture object on the GPU. This should have the reverse effect of `create`.\r\n     */\r\n    protected delete(): void {\r\n        assert(this._object instanceof WebGLTexture, `expected WebGLTexture object`);\r\n        this._context.gl.deleteTexture(this._object);\r\n\r\n        this._object = undefined;\r\n        this._valid = false;\r\n\r\n        this._internalFormat = 0;\r\n        this._format = 0;\r\n        this._type = 0;\r\n\r\n        this._width = 0;\r\n        this._height = 0;\r\n        this._depth = 0;\r\n    }\r\n\r\n    protected reallocate(): void {\r\n        const gl = this.context.gl;\r\n        const gl2facade = this._context.gl2facade;\r\n\r\n        let bytes: GLsizei = this._width * this._height * this._depth\r\n            * byteSizeOfFormat(this.context, this._internalFormat);\r\n        // Fix in case of implicit float and half-float texture generation (e.g., in webgl with half_float support).\r\n        if (this._type === gl2facade.HALF_FLOAT && this._internalFormat !== gl.RGBA16F) {\r\n            bytes *= 2;\r\n        } else if (this._type === gl.FLOAT && this._internalFormat !== gl.RGBA16F) {\r\n            bytes *= 4;\r\n        }\r\n        this.context.allocationRegister.reallocate(this._identifier, bytes);\r\n    }\r\n\r\n    /**\r\n     * Bind the texture object to a texture unit.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    bind(unit?: GLenum): void {\r\n        const gl = this.context.gl;\r\n        if (unit) {\r\n            gl.activeTexture(unit);\r\n        }\r\n        gl.bindTexture(gl.TEXTURE_2D_ARRAY, this._object);\r\n    }\r\n\r\n    /**\r\n     * Unbind the texture object from a texture unit.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    unbind(unit?: GLenum): void {\r\n        const gl = this.context.gl;\r\n        if (unit) {\r\n            gl.activeTexture(unit);\r\n        }\r\n        gl.bindTexture(gl.TEXTURE_2D_ARRAY, Texture2DArray.DEFAULT_TEXTURE);\r\n    }\r\n\r\n    /**\r\n     * Asynchronous load of an image comprising a column of slices via URL or data URI.\r\n     * @param url - Uniform resource locator string referencing image slices that should be loaded (data URI supported).\r\n     * @param slices - Number of slices (resulting in the array's depth) vertically aligned within the image.\r\n     * @param crossOrigin - Enable cross origin data loading.\r\n     * @returns - Promise for handling image load status.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    fetch(url: string, slices: GLsizei, crossOrigin: boolean = false): Promise<void> {\r\n        return new Promise((resolve, reject) => {\r\n            const image = new Image();\r\n            image.onerror = () => {\r\n                log(LogLevel.Error, `loading image from '${image.src}' failed`);\r\n                reject();\r\n            };\r\n\r\n            image.onload = () => {\r\n                this.resize(image.width, image.height / slices, slices);\r\n                this.data(image);\r\n                resolve();\r\n            };\r\n\r\n            if (crossOrigin) {\r\n                image.crossOrigin = 'anonymous';\r\n            }\r\n            image.src = url;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Pass image data to the texture object.\r\n     * @param data - Texel data that will be copied into the objects data store.\r\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    data(data: TexImage2DData, bind: boolean = true, unbind: boolean = true): void {\r\n        const gl = this.context.gl;\r\n        const gl2facade = this._context.gl2facade;\r\n\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n\r\n        gl2facade.texImage3D(gl.TEXTURE_2D_ARRAY, 0, this._internalFormat,\r\n            this._width, this._height, this._depth, 0, this._format, this._type, data);\r\n\r\n        if (unbind) {\r\n            this.unbind();\r\n        }\r\n        this.reallocate();\r\n    }\r\n\r\n    /**\r\n     * Sets the texture object's magnification and minification filter.\r\n     * @param mag - Value for the TEXTURE_MAG_FILTER parameter.\r\n     * @param min - Value for the TEXTURE_MIN_FILTER parameter.\r\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    filter(mag: GLenum, min: GLenum, bind: boolean = true, unbind: boolean = true): void {\r\n        const gl = this.context.gl;\r\n\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n        gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MAG_FILTER, mag);\r\n        gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, min);\r\n        if (unbind) {\r\n            this.unbind();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the texture object's wrapping function for s, t and r coordinates.\r\n     * @param wrap_s - Value for the TEXTURE_WRAP_S parameter, defaulted to CLAMP_TO_EDGE.\r\n     * @param wrap_t - Value for the TEXTURE_WRAP_T parameter, defaulted to CLAMP_TO_EDGE.\r\n     * @param wrap_r - Value for the TEXTURE_WRAP_R parameter, defaulted to CLAMP_TO_EDGE.\r\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    /* tslint:disable-next-line:variable-name */\r\n    wrap(wrap_s: GLenum, wrap_t: GLenum, wrap_r: GLenum, bind: boolean = true, unbind: boolean = true): void {\r\n        const gl = this.context.gl;\r\n\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n        gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_WRAP_S, wrap_s);\r\n        gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_WRAP_T, wrap_t);\r\n        gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_WRAP_R, wrap_r);\r\n        if (unbind) {\r\n            this.unbind();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This can be used to reformat the texture image without creating a new texture object. Please note that this\r\n     * resets the texture's image data to undefined. @see {@link data} for setting new image data.\r\n     * @param internalFormat - Internal format of the texture object.\r\n     * @param format - Format of the texture data even though no data is passed.\r\n     * @param type - Data type of the texel data.\r\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    reformat(internalFormat: GLenum, format?: GLenum, type?: GLenum,\r\n        bind: boolean = true, unbind: boolean = true): void {\r\n\r\n        if (internalFormat === this._internalFormat\r\n            && (format === undefined || format === this._format)\r\n            && (type === undefined || type === this._type)) {\r\n            return;\r\n        }\r\n        assert(internalFormat !== undefined, `valid internal format expected`);\r\n        this._internalFormat = internalFormat;\r\n\r\n        if (format) {\r\n            this._format = format;\r\n        }\r\n        if (type) {\r\n            this._type = type;\r\n        }\r\n\r\n        this.data(undefined, bind, unbind);\r\n    }\r\n\r\n    /**\r\n     * This should be used to implement efficient resize the texture.\r\n     * @param width - Targeted/new width of the texture in px.\r\n     * @param height - Targeted/new height of the texture in px.\r\n     * @param depth - Targeted/new depth (number of slices) of the texture.\r\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    resize(width: GLsizei, height: GLsizei, depth: GLsizei, bind: boolean = true, unbind: boolean = true): void {\r\n        if (width === this._width && height === this._height && depth === this._depth) {\r\n            return;\r\n        }\r\n        this._width = width;\r\n        this._height = height;\r\n        this._depth = depth;\r\n\r\n        this.data(undefined, bind, unbind);\r\n    }\r\n\r\n    /**\r\n     * Returns the number of bytes this object approximately allocates on the GPU. The size will be zero when no\r\n     * image data was passed to the texture object.\r\n     */\r\n    get bytes(): GLsizei {\r\n        this.assertInitialized();\r\n        return this.context.allocationRegister.allocated(this._identifier);\r\n    }\r\n\r\n    /**\r\n     * Cached internal format of the texture for efficient resize. This can only be changed by re-initialization.\r\n     */\r\n    get internalFormat(): GLenum {\r\n        this.assertInitialized();\r\n        return this._internalFormat!;\r\n    }\r\n\r\n    /**\r\n     * Cached format of the data provided to the texture object for efficient resize. This is set on initialization and\r\n     * might change on data transfers.\r\n     */\r\n    get format(): GLenum {\r\n        this.assertInitialized();\r\n        return this._format!;\r\n    }\r\n\r\n    /**\r\n     * Cached type of the data provided to the texture used for efficient resize. This is set on initialization and\r\n     * might change on data transfers.\r\n     */\r\n    get type(): GLenum {\r\n        this.assertInitialized();\r\n        return this._type!;\r\n    }\r\n\r\n    /**\r\n     * The width of the texture object in px.\r\n     */\r\n    get width(): GLsizei {\r\n        this.assertInitialized();\r\n        return this._width;\r\n    }\r\n\r\n    /**\r\n     * The height of the texture object in px.\r\n     */\r\n    get height(): GLsizei {\r\n        this.assertInitialized();\r\n        return this._height;\r\n    }\r\n\r\n    /**\r\n     * The depth (number of slices) of the texture object.\r\n     */\r\n    get depth(): GLsizei {\r\n        this.assertInitialized();\r\n        return this._depth;\r\n    }\r\n\r\n    /**\r\n     * Convenience getter for the 3-tuple containing width, height and depth.\r\n     * @see {@link width}\r\n     * @see {@link height}\r\n     * @see {@link depth}\r\n     */\r\n    get size(): GLsizei3 {\r\n        this.assertInitialized();\r\n        return [this._width, this._height, this._depth];\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { assert } from './auxiliaries';\r\nimport { byteSizeOfFormat } from './formatbytesizes';\r\nimport { GLsizei3 } from './tuples';\r\n\r\nimport { Bindable } from './bindable';\r\nimport { TexImage3DData } from './gl2facade';\r\nimport { Initializable } from './initializable';\r\nimport { AbstractObject } from './object';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * Wrapper for an WebGL 2D texture providing size accessors and requiring for bind, unbind, resize, validity, and\r\n * initialization implementations. The texture object is created on initialization and deleted on uninitialization.\r\n * After being initialized, the texture can be resized, reformated, and data can set directly or via load:\r\n * ```\r\n * const texture = new Texture3D(context, 'Texture');\r\n * texture.initialize(1, 1, 1, gl.RGB8, gl.RGB, gl.UNSIGNED_BYTE);\r\n * texture.load('/img/webgl-operate-logo.png', true)\r\n * ```\r\n */\r\nexport class Texture3D extends AbstractObject<WebGLTexture> implements Bindable {\r\n\r\n    /**\r\n     * Default texture, e.g., used for unbind.\r\n     */\r\n    static readonly DEFAULT_TEXTURE = undefined;\r\n\r\n    /** @see {@link width} */\r\n    protected _width: GLsizei = 0;\r\n\r\n    /** @see {@link height} */\r\n    protected _height: GLsizei = 0;\r\n\r\n    /** @see {@link depth} */\r\n    protected _depth: GLsizei = 0;\r\n\r\n\r\n    /** @see {@link internalFormat} */\r\n    protected _internalFormat: GLenum = 0;\r\n\r\n    /** @see {@link format} */\r\n    protected _format: GLenum = 0;\r\n\r\n    /** @see {@link type} */\r\n    protected _type: GLenum = 0;\r\n\r\n\r\n    /**\r\n     * Create a texture object on the GPU.\r\n     * @param width - Initial width of the texture in px.\r\n     * @param height - Initial height of the texture in px.\r\n     * @param depth - Initial depth of the texture in px.\r\n     * @param internalFormat - Internal format of the texture object.\r\n     * @param format - Format of the texture data even though no data is passed.\r\n     * @param type - Data type of the texel data.\r\n     */\r\n    protected create(width: GLsizei, height: GLsizei, depth: GLsizei, internalFormat: GLenum,\r\n        format: GLenum, type: GLenum): WebGLTexture | undefined {\r\n        assert(this._context.supportsTexImage3D, `expected texImage3D to be supported`);\r\n\r\n        assert(width > 0 && height > 0 && depth > 0,\r\n            `texture requires valid width, height, and depth of greater than zero`);\r\n        const gl = this._context.gl;\r\n        const gl2facade = this._context.gl2facade;\r\n\r\n        this._object = gl.createTexture();\r\n\r\n        this._width = width;\r\n        this._height = height;\r\n        this._depth = depth;\r\n        this._internalFormat = internalFormat;\r\n        this._format = format;\r\n        this._type = type;\r\n\r\n        gl.bindTexture(gl.TEXTURE_3D, this._object);\r\n        gl.texParameteri(gl.TEXTURE_3D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_3D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_3D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_3D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_3D, gl.TEXTURE_WRAP_R, gl.CLAMP_TO_EDGE);\r\n\r\n        gl2facade.texImage3D(gl.TEXTURE_3D, 0, this._internalFormat,\r\n            this._width, this._height, this._depth, 0, this._format, this._type);\r\n\r\n        gl.bindTexture(gl.TEXTURE_3D, Texture3D.DEFAULT_TEXTURE);\r\n        /* note that gl.isTexture requires the texture to be bound */\r\n        this._valid = gl.isTexture(this._object);\r\n\r\n        this.reallocate();\r\n        return this._object;\r\n    }\r\n\r\n    /**\r\n     * Delete the texture object on the GPU. This should have the reverse effect of `create`.\r\n     */\r\n    protected delete(): void {\r\n        assert(this._object instanceof WebGLTexture, `expected WebGLTexture object`);\r\n        this._context.gl.deleteTexture(this._object);\r\n\r\n        this._object = undefined;\r\n        this._valid = false;\r\n\r\n        this._internalFormat = 0;\r\n        this._format = 0;\r\n        this._type = 0;\r\n\r\n        this._width = 0;\r\n        this._height = 0;\r\n        this._depth = 0;\r\n    }\r\n\r\n    protected reallocate(): void {\r\n        const gl = this.context.gl;\r\n        const gl2facade = this._context.gl2facade;\r\n\r\n        let bytes: GLsizei = this._width * this._height * this._depth\r\n            * byteSizeOfFormat(this.context, this._internalFormat);\r\n        // Fix in case of implicit float and half-float texture generation (e.g., in webgl with half_float support).\r\n        if (this._type === gl2facade.HALF_FLOAT && this._internalFormat !== gl.RGBA16F) {\r\n            bytes *= 2;\r\n        } else if (this._type === gl.FLOAT && this._internalFormat !== gl.RGBA16F) {\r\n            bytes *= 4;\r\n        }\r\n        this.context.allocationRegister.reallocate(this._identifier, bytes);\r\n    }\r\n\r\n    /**\r\n     * Bind the texture object to a texture unit.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    bind(unit?: GLenum): void {\r\n        const gl = this.context.gl;\r\n        if (unit) {\r\n            gl.activeTexture(unit);\r\n        }\r\n        gl.bindTexture(gl.TEXTURE_3D, this._object);\r\n    }\r\n\r\n    /**\r\n     * Unbind the texture object from a texture unit.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    unbind(unit?: GLenum): void {\r\n        const gl = this.context.gl;\r\n        if (unit) {\r\n            gl.activeTexture(unit);\r\n        }\r\n        gl.bindTexture(gl.TEXTURE_3D, Texture3D.DEFAULT_TEXTURE);\r\n    }\r\n\r\n    /**\r\n     * Asynchronous load of an image comprising a column/row of slices via URL or data URI. Please note that due to the lack\r\n     * of sub-data access on images, the slices are loaded using a auxiliary canvas and context (temporarily). The sub\r\n     * images (slices) are drawn using the canvas and the image data is then captured.\r\n     * @param uri - Uniform resource locator string referencing image slices that should be loaded (data URI supported).\r\n     * @param slices - Number of slices (resulting in the 3D texture's depth) vertically aligned within the image.\r\n     * @param crossOrigin - Enable cross origin data loading.\r\n     * @param useHorizontalSlicing - Optional: Whether or not to use horizontal (rows) instead of vertical (columns) slice alignment.\r\n     * @returns - Promise for handling image load status.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    load(uri: string, slices: GLsizei, crossOrigin: boolean = false, useHorizontalSlicing: boolean = false): Promise<void> {\r\n        return new Promise((resolve, reject) => {\r\n            const image = new Image();\r\n            image.onerror = () => reject();\r\n\r\n            image.onload = () => {\r\n                /* Use an auxiliary canvas to extract slices by drawing and extracting each slice. */\r\n                const auxiliaryCanvas = document.createElement('canvas');\r\n                const auxiliaryContext = auxiliaryCanvas.getContext('2d');\r\n\r\n                assert(auxiliaryContext !== undefined, `expected auxiliary 2D context for temporary slicing`);\r\n\r\n                let width, height, depth, data;\r\n\r\n                if (useHorizontalSlicing === false) {\r\n                    // TODO: Reduce code duplication with horizontal slicing code (else branch) below\r\n                    assert(image.height % slices === 0 && image.height / slices >= 1.0,\r\n                        `expected height to be a multitude of number of slices`);\r\n\r\n                    width = image.width;\r\n                    height = Math.floor(image.height / slices);\r\n                    depth = slices;\r\n\r\n                    auxiliaryCanvas.width = width;\r\n                    auxiliaryCanvas.height = height;\r\n\r\n                    data = new Uint8Array(width * height * depth);\r\n                    const subImageSize = width * height;\r\n\r\n                    for (let slice = 0; slice < slices; ++slice) {\r\n                        auxiliaryContext!.drawImage(image, 0, height * slice, width, height, 0, 0, width, height);\r\n                        const subImageData = auxiliaryContext!.getImageData(0, 0, width, height).data;\r\n\r\n                        for (let i = 0; i < subImageSize; ++i) {\r\n                            data[subImageSize * slice + i] = subImageData[4 * i];\r\n                        }\r\n                    }\r\n                } else {\r\n                    assert(image.width % slices === 0 && image.width / slices >= 1.0,\r\n                        `expected width to be a multitude of number of slices`);\r\n\r\n                    width = Math.floor(image.width / slices);\r\n                    height = image.height;\r\n                    depth = slices;\r\n\r\n                    auxiliaryCanvas.width = width;\r\n                    auxiliaryCanvas.height = height;\r\n\r\n                    data = new Uint8Array(width * height * depth);\r\n                    const subImageSize = width * height;\r\n\r\n                    for (let slice = 0; slice < slices; ++slice) {\r\n                        auxiliaryContext!.drawImage(image, width * slice, 0, width, height, 0, 0, width, height);\r\n                        const subImageData = auxiliaryContext!.getImageData(0, 0, width, height).data;\r\n\r\n                        for (let i = 0; i < subImageSize; ++i) {\r\n                            data[subImageSize * slice + i] = subImageData[4 * i];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.resize(width, height, depth);\r\n                this.data(data);\r\n\r\n                resolve();\r\n            };\r\n\r\n            if (crossOrigin) {\r\n                image.crossOrigin = 'anonymous';\r\n            }\r\n            image.src = uri;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Asynchronous load of multiple images, each containing a column/row of slices, via URL or data URI.\r\n     * This can be used, e. g., for a dynamically sized array of 3D textures.\r\n     * Note that all the images must have the exact same dimensions.\r\n     * Each image is loaded and drawn into a large, multi-row/-column image. This image is then used as a base64 encoded\r\n     * PNG for subsequent usage in the regular @see {load} function.\r\n     * @param uris - Uniform resource locator strings referencing a set of equally-sized images that should be loaded (data URI supported).\r\n     * @param slices - Number of slices (resulting in the 3D texture's depth) vertically aligned within each image.\r\n     * @param crossOrigin - Enable cross origin data loading.\r\n     * @param useHorizontalSlicing - Optional: Whether or not to use horizontal (rows) instead of vertical (columns) slice alignment.\r\n     * @returns - Promise for handling image load status.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    loadFromSingleImages(uris: string[], slices: GLsizei, crossOrigin: boolean = false, useHorizontalSlicing: boolean = false): Promise<void> {\r\n        return new Promise((resolve, reject) => {\r\n            const auxiliaryCanvas = document.createElement('canvas');\r\n            const auxiliaryContext = auxiliaryCanvas.getContext('2d');\r\n\r\n            const drawingPromises = [];\r\n\r\n            let mergedImageWidth: number;\r\n            let mergedImageHeight: number;\r\n\r\n            for (let imageIndex = 0; imageIndex < uris.length; imageIndex++) {\r\n                const singleImage = new Image();\r\n                singleImage.onerror = () => reject();\r\n\r\n                const drawingPromise: Promise<void> = new Promise((resolve, reject) => {\r\n                    try {\r\n                        singleImage.onload = () => {\r\n                            const singleImageWidth = singleImage.width;\r\n                            const singleImageHeight = singleImage.height;\r\n\r\n                            if (useHorizontalSlicing === false) {\r\n                                if (mergedImageWidth === undefined) {\r\n                                    mergedImageWidth = singleImageWidth * uris.length;\r\n                                    auxiliaryCanvas.width = mergedImageWidth;\r\n                                } else {\r\n                                    assert(singleImageWidth * uris.length === mergedImageWidth, \"The single images do not have the same width\");\r\n                                }\r\n                                if (mergedImageHeight === undefined) {\r\n                                    mergedImageHeight = singleImageHeight;\r\n                                    auxiliaryCanvas.height = mergedImageHeight;\r\n                                } else {\r\n                                    assert(singleImageHeight === mergedImageHeight, \"The single images do not have the same height\");\r\n                                }\r\n\r\n                                auxiliaryContext!.drawImage(singleImage, singleImageWidth * imageIndex, 0);\r\n                            } else {\r\n                                if (mergedImageWidth === undefined) {\r\n                                    mergedImageWidth = singleImageWidth;\r\n                                    auxiliaryCanvas.width = mergedImageWidth;\r\n                                } else {\r\n                                    assert(singleImageWidth === mergedImageWidth, \"The single images do not have the same width\");\r\n                                }\r\n                                if (mergedImageHeight === undefined) {\r\n                                    mergedImageHeight = singleImageHeight * uris.length;\r\n                                    auxiliaryCanvas.height = mergedImageHeight;\r\n                                } else {\r\n                                    assert(singleImageHeight * uris.length === mergedImageHeight, \"The single images do not have the same height\");\r\n                                }\r\n\r\n                                auxiliaryContext!.drawImage(singleImage, 0, singleImageHeight * imageIndex);\r\n                            }\r\n\r\n                            resolve();\r\n                        }\r\n                    } catch (error) {\r\n                        reject(error);\r\n                    }\r\n                });\r\n\r\n                drawingPromises.push(drawingPromise);\r\n\r\n                if (crossOrigin) {\r\n                    singleImage.crossOrigin = 'anonymous';\r\n                }\r\n                singleImage.src = uris[imageIndex];\r\n            }\r\n\r\n            Promise.all(drawingPromises).then(() => {\r\n                const mergedImageDataUri = auxiliaryCanvas.toDataURL('image/png', 1.0);\r\n                return this.load(mergedImageDataUri, slices, crossOrigin, useHorizontalSlicing).then(() => {\r\n                    resolve();\r\n                });\r\n            })\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Pass image data to the texture object.\r\n     * @param data - Texel data that will be copied into the objects data store.\r\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    data(data: TexImage3DData, bind: boolean = true, unbind: boolean = true): void {\r\n        const gl = this.context.gl;\r\n        const gl2facade = this._context.gl2facade;\r\n\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n\r\n        gl2facade.texImage3D(gl.TEXTURE_3D, 0, this._internalFormat,\r\n            this._width, this._height, this._depth, 0, this._format, this._type, data);\r\n\r\n        if (unbind) {\r\n            this.unbind();\r\n        }\r\n        this.reallocate();\r\n    }\r\n\r\n    /**\r\n     * Sets the texture object's magnification and minification filter.\r\n     * @param mag - Value for the TEXTURE_MAG_FILTER parameter.\r\n     * @param min - Value for the TEXTURE_MIN_FILTER parameter.\r\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    filter(mag: GLenum, min: GLenum, bind: boolean = true, unbind: boolean = true): void {\r\n        const gl = this.context.gl;\r\n\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n        gl.texParameteri(gl.TEXTURE_3D, gl.TEXTURE_MAG_FILTER, mag);\r\n        gl.texParameteri(gl.TEXTURE_3D, gl.TEXTURE_MIN_FILTER, min);\r\n        if (unbind) {\r\n            this.unbind();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the texture object's wrapping function for s and t coordinates.\r\n     * @param wrap_s - Value for the TEXTURE_WRAP_S parameter, defaulted to CLAMP_TO_EDGE.\r\n     * @param wrap_t - Value for the TEXTURE_WRAP_T parameter, defaulted to CLAMP_TO_EDGE.\r\n     * @param wrap_r - Value for the TEXTURE_WRAP_R parameter, defaulted to CLAMP_TO_EDGE.\r\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    wrap(wrap_s: GLenum, wrap_t: GLenum, wrap_r: GLenum, bind: boolean = true, unbind: boolean = true): void {\r\n        const gl = this.context.gl;\r\n\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n        gl.texParameteri(gl.TEXTURE_3D, gl.TEXTURE_WRAP_S, wrap_s);\r\n        gl.texParameteri(gl.TEXTURE_3D, gl.TEXTURE_WRAP_T, wrap_t);\r\n        gl.texParameteri(gl.TEXTURE_3D, gl.TEXTURE_WRAP_R, wrap_r);\r\n        if (unbind) {\r\n            this.unbind();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This can be used to reformat the texture image without creating a new texture object. Please note that this\r\n     * resets the texture's image data to undefined. @see {@link data} for setting new image data.\r\n     * @param internalFormat - Internal format of the texture object.\r\n     * @param format - Format of the texture data even though no data is passed.\r\n     * @param type - Data type of the texel data.\r\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    reformat(internalFormat: GLenum, format?: GLenum, type?: GLenum,\r\n        bind: boolean = true, unbind: boolean = true): void {\r\n\r\n        if (internalFormat === this._internalFormat\r\n            && (format === undefined || format === this._format)\r\n            && (type === undefined || type === this._type)) {\r\n            return;\r\n        }\r\n        assert(internalFormat !== undefined, `valid internal format expected`);\r\n        this._internalFormat = internalFormat;\r\n\r\n        if (format) {\r\n            this._format = format;\r\n        }\r\n        if (type) {\r\n            this._type = type;\r\n        }\r\n\r\n        this.data(undefined, bind, unbind);\r\n    }\r\n\r\n    /**\r\n     * This should be used to implement efficient resize the texture.\r\n     * @param width - Targeted/new width of the texture in px.\r\n     * @param height - Targeted/new height of the texture in px.\r\n     * @param depth - Targeted/new depth of the texture in px.\r\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    resize(width: GLsizei, height: GLsizei, depth: GLsizei, bind: boolean = true, unbind: boolean = true): void {\r\n        if (width === this._width && height === this._height && depth === this._depth) {\r\n            return;\r\n        }\r\n        this._width = width;\r\n        this._height = height;\r\n        this._depth = depth;\r\n\r\n        this.data(undefined, bind, unbind);\r\n    }\r\n\r\n    /**\r\n     * Returns the number of bytes this object approximately allocates on the GPU. The size will be zero when no\r\n     * image data was passed to the texture object.\r\n     */\r\n    get bytes(): GLsizei {\r\n        this.assertInitialized();\r\n        return this.context.allocationRegister.allocated(this._identifier);\r\n    }\r\n\r\n    /**\r\n     * Cached internal format of the texture for efficient resize. This can only be changed by re-initialization.\r\n     */\r\n    get internalFormat(): GLenum {\r\n        this.assertInitialized();\r\n        return this._internalFormat!;\r\n    }\r\n\r\n    /**\r\n     * Cached format of the data provided to the texture object for efficient resize. This is set on initialization and\r\n     * might change on data transfers.\r\n     */\r\n    get format(): GLenum {\r\n        this.assertInitialized();\r\n        return this._format!;\r\n    }\r\n\r\n    /**\r\n     * Cached type of the data provided to the texture used for efficient resize. This is set on initialization and\r\n     * might change on data transfers.\r\n     */\r\n    get type(): GLenum {\r\n        this.assertInitialized();\r\n        return this._type!;\r\n    }\r\n\r\n    /**\r\n     * The width of the texture object in px.\r\n     */\r\n    get width(): GLsizei {\r\n        this.assertInitialized();\r\n        return this._width;\r\n    }\r\n\r\n    /**\r\n     * The height of the texture object in px.\r\n     */\r\n    get height(): GLsizei {\r\n        this.assertInitialized();\r\n        return this._height;\r\n    }\r\n\r\n    /**\r\n     * The depth of the texture object in px.\r\n     */\r\n    get depth(): GLsizei {\r\n        this.assertInitialized();\r\n        return this._depth;\r\n    }\r\n\r\n    /**\r\n     * Convenience getter for the 3-tuple containing width and height.\r\n     * @see {@link width}\r\n     * @see {@link heigth}\r\n     * @see {@link depth}\r\n     */\r\n    get size(): GLsizei3 {\r\n        this.assertInitialized();\r\n        return [this._width, this._height, this._depth];\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { assert, log, LogLevel } from './auxiliaries';\r\nimport { byteSizeOfFormat } from './formatbytesizes';\r\n\r\nimport { Bindable } from './bindable';\r\nimport { TexImage2DData } from './gl2facade';\r\nimport { Initializable } from './initializable';\r\nimport { AbstractObject } from './object';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * Wrapper for an WebGL cube texture providing size accessors and requiring for bind, unbind, resize, validity, and\r\n * initialization implementations. The texture cube object is created on initialization and deleted on uninitialization.\r\n * After being initialized, the texture cube can be resized, reformated, and data can set directly or via fetch:\r\n * ```\r\n * const cubeMap = new TextureCube(context, 'CubeMap');\r\n * cubeMap.initialize(512, gl.RGB8, gl.RGB, gl.UNSIGNED_BYTE);\r\n * cubeMap.fetch({\r\n *     positiveX: 'data/cubemap.px.png', negativeX: 'data/cubemap.nx.png',\r\n *     positiveY: 'data/cubemap.py.png', negativeY: 'data/cubemap.ny.png',\r\n *     positiveZ: 'data/cubemap.pz.png', negativeZ: 'data/cubemap.nz.png',\r\n * }).then(() => this.invalidate(true);\r\n * ```\r\n * Please note that each of the six textures of a texture cube is required to be of the exact same, square dimensions.\r\n * This is reflected within this classes interface by providing a single size property in favor to width and height.\r\n */\r\nexport class TextureCube extends AbstractObject<WebGLTexture> implements Bindable {\r\n\r\n    /**\r\n     * Default texture, e.g., used for unbind.\r\n     */\r\n    static readonly DEFAULT_TEXTURE = undefined;\r\n\r\n    /** @see {@link size} */\r\n    protected _size: GLsizei = 0;\r\n\r\n    /** @see {@link internalFormat} */\r\n    protected _internalFormat: GLenum = 0;\r\n\r\n    /** @see {@link format} */\r\n    protected _format: GLenum = 0;\r\n\r\n    /** @see {@link type} */\r\n    protected _type: GLenum = 0;\r\n\r\n    /**\r\n     * For tracking approximate use of GPU storage in bytes per face.\r\n     */\r\n    protected _bytes: Array<GLsizei> = [0, 0, 0, 0, 0, 0];\r\n\r\n\r\n    /**\r\n     * Provides an ID for each of the six texture cube identifier (0: +x, 1: -x, 2: +y, 3: -y, 4: +z, 5: -z).\r\n     * @param face - Texture cube face identifier, e.g., `TEXTURE_CUBE_MAP_POSITIVE_X`.\r\n     * @returns - Face ID in the following sequence: 0: +x, 1: -x, 2: +y, 3: -y, 4: +z, 5: -z.\r\n     */\r\n    protected faceID(face: GLenum): GLint {\r\n        const gl = this._context.gl;\r\n        switch (face) {\r\n            case gl.TEXTURE_CUBE_MAP_POSITIVE_X:\r\n                return 0;\r\n            case gl.TEXTURE_CUBE_MAP_NEGATIVE_X:\r\n                return 1;\r\n            case gl.TEXTURE_CUBE_MAP_POSITIVE_Y:\r\n                return 2;\r\n            case gl.TEXTURE_CUBE_MAP_NEGATIVE_Y:\r\n                return 3;\r\n            case gl.TEXTURE_CUBE_MAP_POSITIVE_Z:\r\n                return 4;\r\n            case gl.TEXTURE_CUBE_MAP_NEGATIVE_Z:\r\n                return 5;\r\n            default:\r\n                assert(false, `expected texture cube map identifier (${gl.TEXTURE_CUBE_MAP_POSITIVE_X}, ` +\r\n                    `${gl.TEXTURE_CUBE_MAP_NEGATIVE_X}, ${gl.TEXTURE_CUBE_MAP_POSITIVE_Y}, ` +\r\n                    `${gl.TEXTURE_CUBE_MAP_NEGATIVE_Y}, ${gl.TEXTURE_CUBE_MAP_POSITIVE_Z}, or` +\r\n                    `${gl.TEXTURE_CUBE_MAP_NEGATIVE_Z}), given ${face}`);\r\n                return -1;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Create a texture object on the GPU.\r\n     * @param size - Initial size (width/height) of each face, which are required to be a square texture.\r\n     * @param internalFormat - Internal format of the texture object.\r\n     * @param format - Format of the texture data even though no data is passed.\r\n     * @param type - Data type of the texel data.\r\n     */\r\n    protected create(size: GLsizei, internalFormat: GLenum, format: GLenum, type: GLenum): WebGLTexture | undefined {\r\n\r\n        assert(size > 0, `texture cube requires valid size (width/height) of greater than zero`);\r\n        const gl = this._context.gl;\r\n        const gl2facade = this._context.gl2facade;\r\n\r\n        this._object = gl.createTexture();\r\n\r\n        this._size = size;\r\n        this._internalFormat = internalFormat;\r\n        this._format = format;\r\n        this._type = type;\r\n\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, this._object);\r\n\r\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n        gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X, 0, this._internalFormat,\r\n            this._size, this._size, 0, this._format, this._type);\r\n        gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, this._internalFormat,\r\n            this._size, this._size, 0, this._format, this._type);\r\n        gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, this._internalFormat,\r\n            this._size, this._size, 0, this._format, this._type);\r\n        gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, this._internalFormat,\r\n            this._size, this._size, 0, this._format, this._type);\r\n        gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, this._internalFormat,\r\n            this._size, this._size, 0, this._format, this._type);\r\n        gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, this._internalFormat,\r\n            this._size, this._size, 0, this._format, this._type);\r\n\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, TextureCube.DEFAULT_TEXTURE);\r\n        /* note that gl.isTexture requires the texture to be bound */\r\n        this._valid = gl.isTexture(this._object);\r\n        this.context.allocationRegister.reallocate(this._identifier, 0);\r\n\r\n        return this._object;\r\n    }\r\n\r\n    /**\r\n     * Delete the texture object on the GPU. This should have the reverse effect of `create`.\r\n     */\r\n    protected delete(): void {\r\n        assert(this._object instanceof WebGLTexture, `expected WebGLTexture object`);\r\n        this._context.gl.deleteTexture(this._object);\r\n\r\n        this._object = undefined;\r\n        this._valid = false;\r\n\r\n        this._internalFormat = 0;\r\n        this._format = 0;\r\n        this._type = 0;\r\n\r\n        this._size = 0;\r\n    }\r\n\r\n    /**\r\n     * Crops the contents of an image and returns a ImageData element of the resulting image.\r\n     * Offsets and sizes of the cropping range need to be supplied. The resulting image data will\r\n     * have the same height and width as the crop size.\r\n     */\r\n    protected cropImage(srcImage: HTMLImageElement,\r\n        offsetX: number, offsetY: number, width: number, height: number): ImageData {\r\n\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n\r\n        // Get the drawing context\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        if (!ctx) {\r\n            console.log(LogLevel.Warning, '2D context creation failed when cropping image.');\r\n            return new ImageData(0, 0);\r\n        }\r\n\r\n        ctx.drawImage(srcImage, offsetX, offsetY, width, height, 0, 0, width, height);\r\n\r\n        return ctx.getImageData(0, 0, width, height);\r\n    }\r\n\r\n    /**\r\n     * Loads one mip map level from a texture atlas in which all mipmap levels of a cubemap are stored.\r\n     * The format is assumed to be NX, PZ, PX, NZ in the top row and PY, NY in the bottom row.\r\n     * The bottom right quarter is assumed to be the next lower mipmap level. This repeats until the highest mipmap\r\n     * level is reached.\r\n     * @param image - Source texture atlas.\r\n     * @param mipLevel - Level to load.\r\n     */\r\n    protected extractMipLevelFromAtlas(image: HTMLImageElement, mipLevel: number): void {\r\n        const gl = this.context.gl;\r\n\r\n        const mip0Size = image.height / 2;\r\n        const mipSize = mip0Size * Math.pow(0.5, mipLevel);\r\n\r\n        const offset = [0, 0];\r\n        const incrementOffset = [image.width, image.height];\r\n        for (let i = 0; i < mipLevel; ++i) {\r\n            incrementOffset[0] /= 2;\r\n            incrementOffset[1] /= 2;\r\n            offset[0] += incrementOffset[0];\r\n            offset[1] += incrementOffset[1];\r\n        }\r\n\r\n        /**\r\n         * Flip image along the Y axis, because the Image API and WebGL use\r\n         * different coordinate spaces.\r\n         */\r\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n\r\n        const nxData = this.cropImage(image, offset[0], offset[1], mipSize, mipSize);\r\n        this.data([gl.TEXTURE_CUBE_MAP_NEGATIVE_X, nxData], mipLevel);\r\n\r\n        const pzData = this.cropImage(image, offset[0] + mipSize, offset[1], mipSize, mipSize);\r\n        this.data([gl.TEXTURE_CUBE_MAP_POSITIVE_Z, pzData], mipLevel);\r\n\r\n        const pxData = this.cropImage(image, offset[0] + 2 * mipSize, offset[1], mipSize, mipSize);\r\n        this.data([gl.TEXTURE_CUBE_MAP_POSITIVE_X, pxData], mipLevel);\r\n\r\n        const nzData = this.cropImage(image, offset[0] + 3 * mipSize, offset[1], mipSize, mipSize);\r\n        this.data([gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, nzData], mipLevel);\r\n\r\n        const pyData = this.cropImage(image, offset[0], offset[1] + mipSize, mipSize, mipSize);\r\n        this.data([gl.TEXTURE_CUBE_MAP_POSITIVE_Y, pyData], mipLevel);\r\n\r\n        const nyData = this.cropImage(image, offset[0] + mipSize, offset[1] + mipSize, mipSize, mipSize);\r\n        this.data([gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, nyData], mipLevel);\r\n\r\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    }\r\n\r\n    /**\r\n     * Bind the texture object to a texture unit.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    bind(unit?: GLenum): void {\r\n        const gl = this.context.gl;\r\n        if (unit) {\r\n            gl.activeTexture(unit);\r\n        }\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, this._object);\r\n    }\r\n\r\n    /**\r\n     * Unbind the texture object from a texture unit.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    unbind(unit?: GLenum): void {\r\n        const gl = this.context.gl;\r\n        if (unit) {\r\n            gl.activeTexture(unit);\r\n        }\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, TextureCube.DEFAULT_TEXTURE);\r\n    }\r\n\r\n    /**\r\n     * Asynchronous load of multiple images (specified per texture cube face) via URI or data URI. Please note\r\n     * that the texture will not be resized and is assumed to be resized upfront accordingly.\r\n     * @param urisByFace - URI linking the image that should be loaded for a specific face. Data URI is also supported.\r\n     * @param crossOrigin - Enable cross origin data loading.\r\n     * @returns - Promise for handling images load status.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    fetch(urisByFace: TextureCube.PerFaceURI, crossOrigin: boolean = false, mipLevel: number = 0): Promise<void> {\r\n\r\n        const gl = this.context.gl;\r\n        return new Promise((resolve, reject) => {\r\n            const images = new Array<[GLenum, string]>();\r\n\r\n            if (urisByFace.positiveX) {\r\n                images.push([gl.TEXTURE_CUBE_MAP_POSITIVE_X, urisByFace.positiveX]);\r\n            }\r\n            if (urisByFace.negativeX) {\r\n                images.push([gl.TEXTURE_CUBE_MAP_NEGATIVE_X, urisByFace.negativeX]);\r\n            }\r\n            if (urisByFace.positiveY) {\r\n                images.push([gl.TEXTURE_CUBE_MAP_POSITIVE_Y, urisByFace.positiveY]);\r\n            }\r\n            if (urisByFace.negativeY) {\r\n                images.push([gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, urisByFace.negativeY]);\r\n            }\r\n            if (urisByFace.positiveZ) {\r\n                images.push([gl.TEXTURE_CUBE_MAP_POSITIVE_Z, urisByFace.positiveZ]);\r\n            }\r\n            if (urisByFace.negativeZ) {\r\n                images.push([gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, urisByFace.negativeZ]);\r\n            }\r\n\r\n            let waiting = images.length;\r\n            for (const tuple of images) {\r\n                const image = new Image();\r\n                image.crossOrigin = 'anonymous';\r\n\r\n                image.onerror = () => reject();\r\n\r\n                image.onload = () => {\r\n                    const size = this.calculateMipLevelSize(mipLevel);\r\n\r\n                    if (image.width !== image.height) {\r\n                        log(LogLevel.Warning, `image ignored, width and height expected to be equal (square image)`);\r\n                        return;\r\n                    }\r\n\r\n                    if (image.width !== size) {\r\n                        log(LogLevel.Warning, `image ignored, width and height expected to match ` +\r\n                            `this texture's size ${size}, given ${image.width}`);\r\n                        return;\r\n                    }\r\n\r\n                    /**\r\n                     * Flip image along the Y axis, because the Image API and WebGL use\r\n                     * different coordinate spaces.\r\n                     */\r\n                    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n                    this.data([tuple[0], image], mipLevel);\r\n                    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n\r\n                    /* Resolve the promise when all requested images have been loaded. */\r\n                    waiting = waiting - 1;\r\n                    if (waiting === 0) {\r\n                        resolve();\r\n                    }\r\n                };\r\n\r\n                if (crossOrigin) {\r\n                    image.crossOrigin = 'anonymous';\r\n                }\r\n                /* Trigger asynchronous loading of image data. */\r\n                image.src = tuple[1];\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Asynchronously loads a cubemap and its mipmap levels from a single texture atlas.\r\n     * The format is assumed to be NX, PZ, PX, NZ in the top row and PY, NY in the bottom row.\r\n     * The bottom right quarter is assumed to be the next lower mipmap level. This repeats until the highest mipmap\r\n     * level is reached.\r\n     * @param uri - URI linking the texture atlas that should be loaded.\r\n     * @param crossOrigin - Enable cross origin data loading.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    fetchMipmapAtlas(uri: string, crossOrigin: boolean = false): Promise<void> {\r\n\r\n        return new Promise((resolve, reject) => {\r\n            const image = new Image();\r\n            image.onerror = () => reject();\r\n\r\n            image.onload = () => {\r\n                if (image.width !== image.height * 2) {\r\n                    log(LogLevel.Warning, `Mipmap atlas expected to have dimensions of 2x1.`);\r\n                    return;\r\n                }\r\n\r\n                const mip0Size = image.height / 2;\r\n                const numMipLevels = Math.log2(mip0Size);\r\n\r\n                for (let i = 0; i < numMipLevels; ++i) {\r\n                    this.extractMipLevelFromAtlas(image, i);\r\n                }\r\n\r\n                resolve();\r\n            };\r\n\r\n            if (crossOrigin) {\r\n                image.crossOrigin = 'anonymous';\r\n            }\r\n            /* Trigger asynchronous loading of image data. */\r\n            image.src = uri;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This function returns how big a specific mip level for this cubemap hast to be.\r\n     * @param level - The level for which the size should be determined\r\n     */\r\n    calculateMipLevelSize(level: number): number {\r\n        return this._size * Math.pow(0.5, level);\r\n    }\r\n\r\n    /**\r\n     * Pass data of six images to the texture cube object.\r\n     * @param data - Per face texel data that will be copied into the objects data store. Either provided via object\r\n     * or as tuple, providing the data associated to the targeted face (as GLenum).\r\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    data(data: TextureCube.PerFaceData | [GLenum, TexImage2DData],\r\n        mipLevel: number = 0,\r\n        bind: boolean = true,\r\n        unbind: boolean = true): void {\r\n\r\n        const gl = this.context.gl;\r\n        const gl2facade = this.context.gl2facade;\r\n\r\n        const size = this.calculateMipLevelSize(mipLevel);\r\n\r\n        let bytesPerFace = size * size * byteSizeOfFormat(this.context, this._internalFormat as GLenum);\r\n        // Fix in case of implicit float and half-float texture generation (e.g., in webgl with half_float support).\r\n        if (this._type === this.context.gl2facade.HALF_FLOAT && this._internalFormat !== this.context.gl.RGBA16F) {\r\n            bytesPerFace *= 2;\r\n        } else if (this._type === this.context.gl.FLOAT && this._internalFormat !== this.context.gl.RGBA16F) {\r\n            bytesPerFace *= 4;\r\n        }\r\n\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n\r\n        if (data instanceof Array && data.length === 2) { /* if tuple is provided... */\r\n            gl2facade.texImage2D(data[0], mipLevel, this._internalFormat,\r\n                size, size, 0, this._format, this._type, data[1]);\r\n            const id = this.faceID(data[0]);\r\n            this.context.allocationRegister.deallocate(this._identifier, this._bytes[id]);\r\n            this.context.allocationRegister.allocate(this._identifier, bytesPerFace);\r\n            this._bytes[id] = bytesPerFace;\r\n\r\n        } else {\r\n            const perFaceData = data as TextureCube.PerFaceData;\r\n\r\n            if (perFaceData.positiveX !== undefined) {\r\n                gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X, mipLevel, this._internalFormat,\r\n                    size, size, 0, this._format, this._type, perFaceData.positiveX);\r\n                this.context.allocationRegister.deallocate(this._identifier, this._bytes[0]);\r\n                this.context.allocationRegister.allocate(this._identifier, bytesPerFace);\r\n                this._bytes[0] = bytesPerFace;\r\n            }\r\n            if (perFaceData.negativeX !== undefined) {\r\n                gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_X, mipLevel, this._internalFormat,\r\n                    size, size, 0, this._format, this._type, perFaceData.negativeX);\r\n                this.context.allocationRegister.deallocate(this._identifier, this._bytes[1]);\r\n                this.context.allocationRegister.allocate(this._identifier, bytesPerFace);\r\n                this._bytes[1] = bytesPerFace;\r\n            }\r\n            if (perFaceData.positiveY !== undefined) {\r\n                gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Y, mipLevel, this._internalFormat,\r\n                    size, size, 0, this._format, this._type, perFaceData.positiveY);\r\n                this.context.allocationRegister.deallocate(this._identifier, this._bytes[2]);\r\n                this.context.allocationRegister.allocate(this._identifier, bytesPerFace);\r\n                this._bytes[2] = bytesPerFace;\r\n            }\r\n            if (perFaceData.negativeY !== undefined) {\r\n                gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, mipLevel, this._internalFormat,\r\n                    size, size, 0, this._format, this._type, perFaceData.negativeY);\r\n                this.context.allocationRegister.deallocate(this._identifier, this._bytes[3]);\r\n                this.context.allocationRegister.allocate(this._identifier, bytesPerFace);\r\n                this._bytes[3] = bytesPerFace;\r\n            }\r\n            if (perFaceData.positiveZ !== undefined) {\r\n                gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Z, mipLevel, this._internalFormat,\r\n                    size, size, 0, this._format, this._type, perFaceData.positiveZ);\r\n                this.context.allocationRegister.deallocate(this._identifier, this._bytes[4]);\r\n                this.context.allocationRegister.allocate(this._identifier, bytesPerFace);\r\n                this._bytes[4] = bytesPerFace;\r\n            }\r\n            if (perFaceData.negativeZ !== undefined) {\r\n                gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, mipLevel, this._internalFormat,\r\n                    size, size, 0, this._format, this._type, perFaceData.negativeZ);\r\n                this.context.allocationRegister.deallocate(this._identifier, this._bytes[5]);\r\n                this.context.allocationRegister.allocate(this._identifier, bytesPerFace);\r\n                this._bytes[5] = bytesPerFace;\r\n            }\r\n        }\r\n\r\n        if (unbind) {\r\n            this.unbind();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the texture object's magnification and minification filter.\r\n     * @param mag - Value for the TEXTURE_MAG_FILTER parameter.\r\n     * @param min - Value for the TEXTURE_MIN_FILTER parameter.\r\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    filter(mag: GLenum, min: GLenum, bind: boolean = true, unbind: boolean = true): void {\r\n        const gl = this.context.gl;\r\n\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, mag);\r\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, min);\r\n        if (unbind) {\r\n            this.unbind();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the texture object's wrapping function for s and t coordinates.\r\n     * @param wrap_s - Value for the TEXTURE_WRAP_S parameter.\r\n     * @param wrap_t - Value for the TEXTURE_WRAP_T parameter.\r\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    wrap(wrap_s: GLenum, wrap_t: GLenum, bind: boolean = true, unbind: boolean = true): void {\r\n        const gl = this.context.gl;\r\n\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, wrap_s);\r\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, wrap_t);\r\n        if (unbind) {\r\n            this.unbind();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set the textures base and max level for mip mapping. This needs to be used when mip levels\r\n     * are uploaded manually to specifiy how many mip levels exist.\r\n     * @param baseLevel - The level with the maximal resolution, usually this will be 0.\r\n     * @param maxLevel - The level with the minimal resolution.\r\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    levels(baseLevel: number, maxLevel: number, bind: boolean = true, unbind: boolean = true): void {\r\n        const gl = this.context.gl;\r\n\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_BASE_LEVEL, baseLevel);\r\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAX_LEVEL, maxLevel);\r\n\r\n        if (unbind) {\r\n            this.unbind();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This can be used to reformat the texture image without creating a new texture object. Please note that this\r\n     * resets the texture's image data to undefined. @see {@link data} for setting new image data.\r\n     * @param internalFormat - Internal format of the texture object.\r\n     * @param format - Format of the texture data even though no data is passed.\r\n     * @param type - Data type of the texel data.\r\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    reformat(internalFormat: GLenum, format?: GLenum, type?: GLenum,\r\n        bind: boolean = true, unbind: boolean = true): void {\r\n\r\n        if (internalFormat === this._internalFormat\r\n            && (format === undefined || format === this._format)\r\n            && (type === undefined || type === this._type)) {\r\n            return;\r\n        }\r\n        assert(internalFormat !== undefined, `valid internal format expected`);\r\n        this._internalFormat = internalFormat;\r\n\r\n        if (format) {\r\n            this._format = format;\r\n        }\r\n        if (type) {\r\n            this._type = type;\r\n        }\r\n\r\n        this.data({ clearOnUndefined: true }, 0, bind, unbind);\r\n    }\r\n\r\n    /**\r\n     * This should be used to efficiently resize the texture.\r\n     * @param size - Targeted/new size (width/height) of the texture in px.\r\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    resize(size: GLsizei, bind: boolean = true, unbind: boolean = true): void {\r\n        if (size === this._size) {\r\n            return;\r\n        }\r\n        this._size = size;\r\n\r\n        this.data({ clearOnUndefined: true }, 0, bind, unbind);\r\n    }\r\n\r\n    /**\r\n     * Returns the number of bytes this object approximately allocates on the GPU. The size will be zero when no\r\n     * image data was passed to the texture object.\r\n     */\r\n    get bytes(): GLsizei {\r\n        this.assertInitialized();\r\n        return this.context.allocationRegister.allocated(this._identifier);\r\n    }\r\n\r\n    /**\r\n     * Cached internal format of the texture for efficient resize. This can only be changed by re-initialization.\r\n     */\r\n    get internalFormat(): GLenum {\r\n        this.assertInitialized();\r\n        return this._internalFormat as GLenum;\r\n    }\r\n\r\n    /**\r\n     * Cached format of the data provided to the texture object for efficient resize. This is set on initialization and\r\n     * might change on data transfers.\r\n     */\r\n    get format(): GLenum {\r\n        this.assertInitialized();\r\n        return this._format as GLenum;\r\n    }\r\n\r\n    /**\r\n     * Cached type of the data provided to the texture used for efficient resize. This is set on initialization and\r\n     * might change on data transfers.\r\n     */\r\n    get type(): GLenum {\r\n        this.assertInitialized();\r\n        return this._type as GLenum;\r\n    }\r\n\r\n    /**\r\n     * The width/height of the texture object (each cube map face is required to be a square).\r\n     */\r\n    get size(): GLsizei {\r\n        this.assertInitialized();\r\n        return this._size;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport namespace TextureCube {\r\n\r\n    export interface PerFaceURI {\r\n        positiveX?: string;\r\n        negativeX?: string;\r\n        positiveY?: string;\r\n        negativeY?: string;\r\n        positiveZ?: string;\r\n        negativeZ?: string;\r\n    }\r\n\r\n    export interface PerFaceData {\r\n        positiveX?: TexImage2DData;\r\n        negativeX?: TexImage2DData;\r\n        positiveY?: TexImage2DData;\r\n        negativeY?: TexImage2DData;\r\n        positiveZ?: TexImage2DData;\r\n        negativeZ?: TexImage2DData;\r\n        clearOnUndefined: boolean;\r\n    }\r\n\r\n}\r\n","\r\nimport { mat4, vec3, vec4 } from 'gl-matrix';\r\n\r\nimport { m4 } from './gl-matrix-extensions';\r\nimport { log, LogLevel, assert, upperPowerOfTwo } from './auxiliaries';\r\n\r\nimport { Camera } from './camera';\r\nimport { GLsizei2, GLsizei4 } from './tuples';\r\n\r\n\r\n/**\r\n * Support Class that wraps the calculation of camera tiling and iteration with various algorithms\r\n * by giving access to an adjusted camera which NDC-Coordinates match the current tile index.\r\n * Iteration can be done manually (variant: 1) or automatically (variant: 2).\r\n * It is intended to be used like:\r\n *\r\n * tileCameraGenerator = new TileCameraGenerator();\r\n * tileCameraGenerator.sourceCamera = camera;\r\n * tileCameraGenerator.sourceViewport = canvasSize;\r\n * tileCameraGenerator.tileSize = [128, 128];\r\n * tileCameraGenerator.algorithm = TileCameraGenerator.Algorithm.ScanLine;\r\n * let offset: [number, number];\r\n *\r\n * iteration variant 1:\r\n * for (let i = 0; i < tileCameraGenerator.numberOfTiles(); ++i){\r\n *      tileCameraGenerator.tile = i; // property\r\n *      tileCameraGenerator.update();\r\n *      offset = tileCameraGenerator.offset;\r\n *      \"render camera\"\r\n * }\r\n *\r\n * iteration variant 2:\r\n * while(tileCameraGenerator.nextTile()){\r\n *      offset = tileCameraGenerator.offset;\r\n *      \"render\"\r\n * }\r\n * // reset generator\r\n * tileCameraGenerator.reset();\r\n *\r\n * NOTE: Use `sourceCameraChanged` if the source camera is altered.\r\n */\r\nexport class TileCameraGenerator {\r\n\r\n    /** @see {@link sourceCamera} */\r\n    protected _sourceCamera: Camera | undefined;\r\n    /** @see {@link sourceViewport} */\r\n    protected _sourceViewport: GLsizei2 | undefined;\r\n\r\n    /** @see {@link tileSize} */\r\n    protected _tileSize: GLsizei2 = [0, 0];\r\n    /** @see {@link padding} */\r\n    protected _padding: vec4 = vec4.fromValues(0, 0, 0, 0);\r\n\r\n    /** @see {@link tile} */\r\n    protected _tile = -1;\r\n\r\n    /** @see {@link eye} */\r\n    protected _camera: Camera | undefined;\r\n\r\n    /** @see {@link algorithm} */\r\n    protected _algorithm = TileCameraGenerator.Algorithm.ScanLine;\r\n\r\n    protected _valid: boolean;\r\n\r\n    protected _offset: GLsizei2 = [0, 0];\r\n    protected _indices: Uint16Array;\r\n\r\n\r\n    /**\r\n     * Recursively fills the interleaved indices using the Hilbert Curve. This method is not intended to be used\r\n     * directly. Use generateHilbertIndices {@link generateHilbertIndices} instead.\r\n     */\r\n    protected static hilbertIndices(indices: Uint16Array, numX: number, numY: number, x: number, y: number,\r\n        xi: number, xj: number, yi: number, yj: number, depth: number, hilbertIndex: number): number {\r\n\r\n        if (depth > 0) {\r\n            hilbertIndex = this.hilbertIndices(indices, numX, numY,\r\n                x, y, yi / 2, yj / 2, xi / 2, xj / 2, depth - 1, hilbertIndex);\r\n            hilbertIndex = this.hilbertIndices(indices, numX, numY,\r\n                x + xi / 2, y + xj / 2, xi / 2, xj / 2, yi / 2, yj / 2, depth - 1, hilbertIndex);\r\n            hilbertIndex = this.hilbertIndices(indices, numX, numY,\r\n                x + xi / 2 + yi / 2, y + xj / 2 + yj / 2, xi / 2, xj / 2, yi / 2, yj / 2, depth - 1, hilbertIndex);\r\n            hilbertIndex = this.hilbertIndices(indices, numX, numY,\r\n                x + xi / 2 + yi, y + xj / 2 + yj, -yi / 2, -yj / 2, -xi / 2, -xj / 2, depth - 1, hilbertIndex);\r\n            return hilbertIndex;\r\n        }\r\n\r\n        x = x + (xi + yi - 1) / 2;\r\n        y = y + (xj + yj - 1) / 2;\r\n        if (x < numX && y < numY) {\r\n            const i = hilbertIndex * 2;\r\n            indices[i + 0] = x;\r\n            indices[i + 1] = y;\r\n            ++hilbertIndex;\r\n        }\r\n        return hilbertIndex;\r\n    }\r\n\r\n    /**\r\n     * Fills the iterationAlgorithmIndices with the table indices\r\n     * from the HilbertCurve-Iteration-Algorithm.\r\n     */\r\n    static generateHilbertIndices(indices: Uint16Array, numX: number, numY: number): void {\r\n        assert(indices.length === 2 * numX * numY,\r\n            `expected interleaved indices-array of length ${2 * numX * numY}, given ${indices.length}`);\r\n\r\n        const tableSize = Math.max(numX, numY);\r\n        const recursionDepth = Math.ceil(Math.log2(tableSize));\r\n\r\n        const uPow2 = upperPowerOfTwo(tableSize);\r\n        this.hilbertIndices(indices, numX, numY, 0, 0, uPow2, 0, 0, uPow2, recursionDepth, 0);\r\n    }\r\n\r\n    /**\r\n     * Generates interleaved table indices using the ZCurve-Iteration-Algorithm.\r\n     */\r\n    static generateScanLineIndices(indices: Uint16Array, numX: number, numY: number): void {\r\n        assert(indices.length === 2 * numX * numY,\r\n            `expected interleaved indices-array of length ${2 * numX * numY}, given ${indices.length}`);\r\n\r\n        for (let y = 0; y < numY; ++y) {\r\n            for (let x = 0; x < numX; ++x) {\r\n                const i = (x + y * numX) * 2;\r\n                indices[i + 0] = x;\r\n                indices[i + 1] = y;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fills the sequence/array of indices with the table indices from the ZCurve-Iteration-Algorithm.\r\n     */\r\n    static generateZCurveIndices(indices: Uint16Array, numX: number, numY: number): void {\r\n        assert(indices.length === 2 * numX * numY,\r\n            `expected interleaved indices-array of length ${2 * numX * numY}, given ${indices.length}`);\r\n\r\n        const tableSize = Math.max(numX, numY);\r\n        const maxZIndexBitLength = Math.floor(Math.log2(tableSize)) * 2;\r\n\r\n        // iterate over the z-curve until all indices in the tile-range are collected\r\n        let zIndex = 0;\r\n        for (let numberOfFoundIndices = 0; numberOfFoundIndices < numX * numY; ++zIndex) {\r\n            let x = 0;\r\n            let y = 0;\r\n            // Bit-Magic that maps the index to table indices (see Definition of Z-Curve for further information)\r\n            for (let currentBit = 0; currentBit < maxZIndexBitLength; ++currentBit) {\r\n                const xBit = zIndex >> (currentBit * 2) & 1;\r\n                x += xBit << currentBit;\r\n                const yBit = zIndex >> (currentBit * 2 + 1) & 1;\r\n                y += yBit << currentBit;\r\n            }\r\n            // Only add table indices that are within the tile-range.\r\n            if (x < numX && y < numY) {\r\n                const i = numberOfFoundIndices * 2;\r\n                indices[i + 0] = x;\r\n                indices[i + 1] = y;\r\n                ++numberOfFoundIndices;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    protected invalidate(clearIndices: boolean): void {\r\n        if (clearIndices) {\r\n            this._indices = new Uint16Array(0);\r\n        }\r\n        this._valid = false;\r\n    }\r\n\r\n\r\n    /**\r\n     * Ensures that the indices are available. If not, indices using the algorithm set will be generated.\r\n     */\r\n    protected ensureValidIterationIndices(): void {\r\n        if (this._indices.length > 0) {\r\n            return;\r\n        }\r\n\r\n        this._indices = new Uint16Array(this.numTiles * 2);\r\n\r\n        switch (this._algorithm) {\r\n            case TileCameraGenerator.Algorithm.ScanLine:\r\n                TileCameraGenerator.generateScanLineIndices(\r\n                    this._indices, this.numXTiles, this.numYTiles);\r\n                break;\r\n            case TileCameraGenerator.Algorithm.HilbertCurve:\r\n                TileCameraGenerator.generateHilbertIndices(\r\n                    this._indices, this.numXTiles, this.numYTiles);\r\n                break;\r\n            case TileCameraGenerator.Algorithm.ZCurve:\r\n                TileCameraGenerator.generateZCurveIndices(\r\n                    this._indices, this.numXTiles, this.numYTiles);\r\n                break;\r\n            default:\r\n                TileCameraGenerator.generateScanLineIndices(\r\n                    this._indices, this.numXTiles, this.numYTiles);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Converts the tile index from the selected Algorithm to table indices.\r\n     * @returns - The converted tile index.\r\n     */\r\n    protected tableIndices(): GLsizei2 {\r\n        this.ensureValidIterationIndices();\r\n        const i = this.tile * 2;\r\n        return [this._indices[i + 0], this._indices[i + 1]];\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns the padded tileSize.\r\n     * @returns - The padded tileSize.\r\n     */\r\n    protected getPaddedTileSize(): [number, number] {\r\n        return [this.padding[1] + this.padding[3] + this.tileSize[0],\r\n        this.padding[0] + this.padding[2] + this.tileSize[1]];\r\n    }\r\n\r\n    /**\r\n     * Used for Iterator behavior. It sets the tile to 0 (first tile) if the value of tile is negative\r\n     * and therefore initiates the iteration.\r\n     * Otherwise it increments the tile and calls update to directly change the camera.\r\n     * If the tile index would get out of range it returns false to indicate, that all tiles were rendered.\r\n     * @returns - If the camera has been set to a next tile.\r\n     */\r\n    public nextTile(): boolean {\r\n        if (this.tile >= this.numTiles - 1) {\r\n            return false;\r\n        }\r\n        if (this.tile < 0) {\r\n            this.tile = -1;\r\n        }\r\n        ++this.tile;\r\n        this.update();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Returns if tiles still need to be rendered.\r\n     */\r\n    public hasNextTile(): boolean {\r\n        return this.tile <= this.numTiles - 1 && this.tile >= 0;\r\n    }\r\n\r\n    /**\r\n     * Resets the tile index to prepare the generator for the next rendering.\r\n     * Should be called after iteration with nextTile().\r\n     */\r\n    public reset(): void {\r\n        this.tile = -1;\r\n\r\n        this._offset[0] = 0;\r\n        this._offset[1] = 0;\r\n    }\r\n\r\n    /**\r\n     * Reassigns all values from the source camera to the tile camera, e.g., when the source camera is altered.\r\n     */\r\n    public sourceCameraChanged(): void {\r\n        assert(this._sourceCamera !== undefined, `expected the unput/source camera to be defined`);\r\n        this._camera = Object.create(this._sourceCamera!) as Camera;\r\n    }\r\n\r\n    /**\r\n     * Updates the camera view frustum to current tile based on\r\n     * the sourceViewport, tileSize and the padding.\r\n     * If the tile is less than zero, the camera is set to the first tile.\r\n     * If the tile is too high, the camera is not updated and remains in the last valid state.\r\n     * @returns - the offset of the new camera tile.\r\n     */\r\n    public update(): GLsizei2 {\r\n        // do nothing and return the last offset if no property has changed.\r\n        if (this._valid) {\r\n            return this._offset;\r\n        }\r\n\r\n        // If an invalid index is requested: Do not change the camera and return the last valid tile offset.\r\n        if (this.numTiles <= this.tile || 0 > this.tile) {\r\n            log(LogLevel.Warning, `index ${this.tile} is out of bounds ${this.numTiles}, returning first tile`);\r\n            return this._offset;\r\n        }\r\n\r\n        assert(this._sourceViewport !== undefined && this._sourceCamera !== undefined,\r\n            `expected source camera and source viewport to be defined before updating`);\r\n\r\n        this._valid = true;\r\n\r\n        const tableIndices = this.tableIndices();\r\n        const viewport = this.sourceViewport!;\r\n\r\n        const paddedTileSize = this.getPaddedTileSize();\r\n\r\n        // Calculate the padded tile center coordinates in the viewport-space.\r\n        const paddedTileCenter = [0, 0];\r\n        paddedTileCenter[0] = tableIndices[0] * this.tileSize[0] + paddedTileSize[0] / 2;\r\n        paddedTileCenter[1] = tableIndices[1] * this.tileSize[1] + paddedTileSize[1] / 2;\r\n\r\n        // Calculate the offset which is needed for the return.\r\n        const offset: [number, number] = [0, 0];\r\n        offset[0] = tableIndices[0] * this.tileSize[0];\r\n        offset[1] = tableIndices[1] * this.tileSize[1];\r\n\r\n        // Scale down the padded tile center coordinates to padded tile center NDC coordinates.\r\n        const paddedTileCenterNDC = [paddedTileCenter[0] * 2 / viewport[0] - 1\r\n            , paddedTileCenter[1] * 2 / viewport[1] - 1];\r\n\r\n        // Create the scale vector that scales up the padded tile to the NDC-range of -1;1.\r\n        const scaleVec = vec3.fromValues(viewport[0] / paddedTileSize[0], viewport[1] / paddedTileSize[1], 1);\r\n\r\n        // Create the translation vector which shifts the padded tile center NDC into the origin.\r\n        const translationVec = vec3.fromValues(-paddedTileCenterNDC[0], -paddedTileCenterNDC[1], 0);\r\n\r\n        // Combine the translation ans scale into the matrix.\r\n        const tileNDCCorrectionMatrix = mat4.scale(m4(), mat4.identity(m4()), scaleVec);\r\n        const translateMatrix = mat4.translate(m4(), tileNDCCorrectionMatrix, translationVec);\r\n\r\n        // Set the postViewProjection matrix and offset to the new calculated values.\r\n        this._camera!.postViewProjection = translateMatrix;\r\n        this._offset = offset;\r\n\r\n        return offset;\r\n    }\r\n\r\n    get valid(): boolean {\r\n        return this._camera !== undefined && this._sourceCamera !== undefined && this._valid\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns the number of tiles along the x-axis based on the number of tiles that fit inside the horizontal extent\r\n     * of the source camera's viewport.\r\n     * @returns - The number of tiles along the x-axis.\r\n     */\r\n    get numXTiles(): number {\r\n        assert(this._sourceViewport !== undefined, `expected the source viewport to be defined`);\r\n        return Math.ceil(this.sourceViewport![0] / this.tileSize[0]);\r\n    }\r\n\r\n    /**\r\n     * Returns the number of tiles along the y-axis based on the number of tiles that fit inside the vertical extent\r\n     * of the source camera's viewport.\r\n     * @returns - The number of tiles along the y-axis.\r\n     */\r\n    get numYTiles(): number {\r\n        assert(this._sourceViewport !== undefined, `expected the source viewport to be defined`);\r\n        return Math.ceil(this.sourceViewport![1] / this.tileSize[1]);\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns the total number of tiles\r\n     * based on the how many of tileSize fit inside the sourceViewport.\r\n     * @returns - The total number of tiles.\r\n     */\r\n    get numTiles(): number {\r\n        return this.numXTiles * this.numYTiles;\r\n    }\r\n\r\n    /**\r\n     * Returns the offset of the current tile. The padding is not included in the offset.\r\n     * @returns - Current tile offset.\r\n     */\r\n    get offset(): GLsizei2 {\r\n        return this._offset;\r\n    }\r\n\r\n    /**\r\n     * Read-only access to the tiled camera that has the viewport of the current tile of the input/source camera.\r\n     * @returns - The reference to the tile viewing camera.\r\n     */\r\n    get camera(): Camera | undefined {\r\n        return this._camera;\r\n    }\r\n\r\n    /**\r\n     * Creates a 4-tuple with x0, y0, and width and height of the viewport for the current tile and camera.\r\n     * @returns - 4-tuple with [x0, y0, width, height] based on the current tile.\r\n     */\r\n    get viewport(): GLsizei4 {\r\n        return [this.offset[0], this.offset[1], this.tileSize[0], this.tileSize[1]];\r\n    }\r\n\r\n    /**\r\n     * Returns the sourceCamera which viewport should be divided in tiles.\r\n     * If the sourceCamera has not been set, it returns a default camera.\r\n     * @returns - The sourceCamera which viewport should be divided in tiles.\r\n     */\r\n    get sourceCamera(): Camera | undefined {\r\n        return this._sourceCamera;\r\n    }\r\n\r\n    /**\r\n     * Assigns the input camera whose viewport will be divided in tiles. Additionally it creates a deep copy of the\r\n     * input camera which is used as the tiled camera {@link camera}.\r\n     * @param camera - The input camera whose viewport will be divided in tiles.\r\n     */\r\n    set sourceCamera(camera: Camera | undefined) {\r\n        if (camera === undefined) {\r\n            this._sourceCamera = this._camera = undefined;\r\n            return;\r\n        }\r\n        this._sourceCamera = camera;\r\n        this._camera = Object.create(camera) as Camera;\r\n        this.invalidate(false);\r\n    }\r\n\r\n    /**\r\n     * Returns the current tile index.\r\n     * @returns - The current tile index.\r\n     */\r\n    get tile(): number {\r\n        return this._tile;\r\n    }\r\n\r\n    /**\r\n     * Sets the current tile index.\r\n     * @param index - The new index.\r\n     */\r\n    set tile(index: GLsizei) {\r\n        if (this._tile === index) {\r\n            return;\r\n        }\r\n        this._tile = index;\r\n        this.invalidate(false);\r\n    }\r\n\r\n    /**\r\n     * Returns the size of the original viewport\r\n     * which should be divided in tiles based on the tile size.\r\n     * If the viewport has not been set, it returns [-1, -1].\r\n     * @returns - Size of the Viewport.\r\n     */\r\n    get sourceViewport(): GLsizei2 | undefined {\r\n        return this._sourceViewport;\r\n    }\r\n\r\n    /**\r\n     * Sets the size of the viewport from the sourceCamera.\r\n     * It checks if the sourceViewport is compatible with the selected algorithm\r\n     * and eventually adjusts the tileSize to match the conditions of the algorithm.\r\n     */\r\n    set sourceViewport(viewport: GLsizei2 | undefined) {\r\n        if (this._sourceViewport !== undefined && viewport !== undefined &&\r\n            this._sourceViewport[0] === viewport[0] && this._sourceViewport[1] === viewport[1]) {\r\n            return;\r\n        }\r\n        this._sourceViewport = viewport;\r\n        this.invalidate(true);\r\n    }\r\n\r\n    /**\r\n     * Returns the tileSize.\r\n     * @returns - [-1, -1] as invalid.\r\n     */\r\n    get tileSize(): GLsizei2 {\r\n        return this._tileSize;\r\n    }\r\n\r\n    /**\r\n     * Sets the tileSize. The tileSize eventually changes to match the selected algorithms constraints.\r\n     */\r\n    set tileSize(tileSize: GLsizei2) {\r\n        if (this._tileSize[0] === tileSize[0] && this._tileSize[1] === tileSize[1]) {\r\n            return;\r\n        }\r\n        this._tileSize = tileSize;\r\n        this.invalidate(true);\r\n    }\r\n\r\n    /**\r\n     * Returns the padding per tile in CSS order: top, right, bottom, left. The standard is (0, 0, 0, 0).\r\n     */\r\n    get padding(): vec4 {\r\n        return this._padding;\r\n    }\r\n\r\n    /**\r\n     * Stets the padding per tile in CSS order: top, right, bottom, left. The standard is (0, 0, 0, 0).\r\n     */\r\n    set padding(padding: vec4) {\r\n        if (vec4.equals(this._padding, padding)) {\r\n            return;\r\n        }\r\n        this._padding = vec4.clone(padding);\r\n        this.invalidate(false);\r\n    }\r\n\r\n    /**\r\n     * Returns the selected IterationAlgorithm which determines the sequence in which the tiles are rendered.\r\n     */\r\n    get algorithm(): TileCameraGenerator.Algorithm {\r\n        return this._algorithm;\r\n    }\r\n\r\n    /**\r\n     * Sets the selected IterationAlgorithm which determines the order in which the tiles are rendered. The default is\r\n     * `ScanLine`. If needed, it automatically adjusts the tileSize to match the new algorithm.\r\n     */\r\n    set algorithm(algorithm: TileCameraGenerator.Algorithm) {\r\n        if (this._algorithm === algorithm) {\r\n            return;\r\n        }\r\n        this._algorithm = algorithm;\r\n        this.invalidate(true);\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * The enum that is used to select one of the different algorithm.\r\n */\r\nexport namespace TileCameraGenerator {\r\n\r\n    export enum Algorithm {\r\n        /**\r\n         * ScanLine conditions: none.\r\n         */\r\n        ScanLine = 'scanline',\r\n\r\n        /**\r\n         * HilbertCurve conditions: Both numberOfXTiles, numberOfYTiles need to be equal and need to be a power of two.\r\n         * In the case that the condition is not satisfied the next higher number than numberOfTilesX/Y that is power\r\n         * of two is calculated. The Iteration will be calculated with this number and tiles that lay outside the\r\n         * viewport are skipped.\r\n         */\r\n        HilbertCurve = 'hilbertcurve',\r\n\r\n        /**\r\n         * ZCurve conditions: Both numberOfXTiles, numberOfYTiles need to be equal and need to be a power of two. In\r\n         * the case that the condition is not satisfied the next higher number than numberOfTilesX/Y that is power of\r\n         * two is calculated. The Iteration will be calculated with this number and tiles that lay outside the\r\n         * viewport are skipped.\r\n         */\r\n        ZCurve = 'zcurve',\r\n    }\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { Observable, ReplaySubject } from 'rxjs';\r\n\r\nimport { assert, bitInBitfield } from './auxiliaries';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\nexport class TouchEventProvider {\r\n\r\n    /**\r\n     * HTML canvas element within the HTML5 document to register event listeners to.\r\n     */\r\n    protected _element: HTMLCanvasElement;\r\n\r\n    /**\r\n     * Time frame for events to be buffered (windowTime in rxjs per ReplaySubject).\r\n     */\r\n    protected _timeframe: number | undefined;\r\n\r\n    protected _startListener: { (event: TouchEvent): void };\r\n    protected _startSubject: ReplaySubject<TouchEvent>;\r\n\r\n    protected _endListener: { (event: TouchEvent): void };\r\n    protected _endSubject: ReplaySubject<TouchEvent>;\r\n\r\n    protected _moveListener: { (event: TouchEvent): void };\r\n    protected _moveSubject: ReplaySubject<TouchEvent>;\r\n\r\n    protected _cancelListener: { (event: TouchEvent): void };\r\n    protected _cancelSubject: ReplaySubject<TouchEvent>;\r\n\r\n    /**\r\n     * This mask saves for which types of events, event.preventDefault should be called.\r\n     * This is useful to disallow some kinds of standard events like scrolling or clicking on links.\r\n     */\r\n    protected _preventDefaultMask: TouchEventProvider.Type;\r\n\r\n\r\n    constructor(element: HTMLCanvasElement, timeframe?: number) {\r\n        assert(element !== undefined, `expected valid canvas element on initialization, given ${element}`);\r\n        this._element = element;\r\n        this._timeframe = timeframe;\r\n    }\r\n\r\n    /**\r\n     * Checks whether or not to prevent the default handling of the given event. This depends on the internal\r\n     * `preventDefaultMask` which can be modified using `preventDefault` function @see{@link prevenDefault}.\r\n     * @param type - Internal event type of the incoming event.\r\n     * @param event - Actual event to prevent default handling on (if masked).\r\n     */\r\n    protected preventDefaultOnEvent(type: TouchEventProvider.Type, event: TouchEvent): void {\r\n        if (bitInBitfield(this._preventDefaultMask, type)) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Prevent default event handling on specific event type (using prevenDefault on the event).\r\n     * @param types - Event types to prevent default handling on.\r\n     */\r\n    preventDefault(...types: TouchEventProvider.Type[]): void {\r\n        for (const type of types) {\r\n            if (!bitInBitfield(this._preventDefaultMask, type)) {\r\n                this._preventDefaultMask |= type;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Allow default event handling on specific event type (not calling preventDefault on the event).\r\n     * @param types - Event types to allow default handling on.\r\n     */\r\n    allowDefault(...types: TouchEventProvider.Type[]): void {\r\n        for (const type of types) {\r\n            if (bitInBitfield(this._preventDefaultMask, type)) {\r\n                this._preventDefaultMask &= ~type;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    observable(type: TouchEventProvider.Type): Observable<TouchEvent> {\r\n        // eslint-disable-next-line default-case\r\n        switch (type) {\r\n            case TouchEventProvider.Type.Start:\r\n                return this.start$;\r\n            case TouchEventProvider.Type.End:\r\n                return this.end$;\r\n            case TouchEventProvider.Type.Move:\r\n                return this.move$;\r\n            case TouchEventProvider.Type.Cancel:\r\n                return this.cancel$;\r\n        }\r\n\r\n        assert(false, 'Encountered unknown touch event.');\r\n        return new Observable<TouchEvent>();\r\n    }\r\n\r\n    get start$(): Observable<TouchEvent> {\r\n        if (this._startSubject === undefined) {\r\n            this._startSubject = new ReplaySubject<TouchEvent>(undefined, this._timeframe);\r\n            this._startListener = (event: TouchEvent) => {\r\n                this.preventDefaultOnEvent(TouchEventProvider.Type.Start, event);\r\n                this._startSubject.next(event);\r\n            };\r\n            this._element.addEventListener('touchstart', this._startListener);\r\n        }\r\n        return this._startSubject.asObservable();\r\n    }\r\n\r\n    get end$(): Observable<TouchEvent> {\r\n        if (this._endSubject === undefined) {\r\n            this._endSubject = new ReplaySubject<TouchEvent>(undefined, this._timeframe);\r\n            this._endListener = (event: TouchEvent) => {\r\n                this.preventDefaultOnEvent(TouchEventProvider.Type.End, event);\r\n                this._endSubject.next(event);\r\n            };\r\n            this._element.addEventListener('touchend', this._endListener);\r\n        }\r\n        return this._endSubject.asObservable();\r\n    }\r\n\r\n    get move$(): Observable<TouchEvent> {\r\n        if (this._moveSubject === undefined) {\r\n            this._moveSubject = new ReplaySubject<TouchEvent>(undefined, this._timeframe);\r\n            this._moveListener = (event: TouchEvent) => {\r\n                this.preventDefaultOnEvent(TouchEventProvider.Type.Move, event);\r\n                this._moveSubject.next(event);\r\n            };\r\n            this._element.addEventListener('touchmove', this._moveListener);\r\n        }\r\n        return this._moveSubject.asObservable();\r\n    }\r\n\r\n    get cancel$(): Observable<TouchEvent> {\r\n        if (this._cancelSubject === undefined) {\r\n            this._cancelSubject = new ReplaySubject<TouchEvent>(undefined, this._timeframe);\r\n            this._cancelListener = (event: TouchEvent) => {\r\n                this.preventDefaultOnEvent(TouchEventProvider.Type.Cancel, event);\r\n                this._cancelSubject.next(event);\r\n            };\r\n            this._element.addEventListener('touchcancel', this._cancelListener);\r\n        }\r\n        return this._cancelSubject.asObservable();\r\n    }\r\n}\r\n\r\n\r\nexport namespace TouchEventProvider {\r\n\r\n    export enum Type {\r\n        Start = 1 << 0,\r\n        End = 1 << 1,\r\n        Move = 1 << 2,\r\n        Cancel = 1 << 3,\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { mat4, quat, vec2, vec3 } from 'gl-matrix';\r\n\r\nimport { m4, v2, v3 } from './gl-matrix-extensions';\r\n\r\nimport { CameraModifier } from './cameramodifier';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * Math for camera rotation based on the trackball metaphor. The rotation computed by an initial (@see startRotate) and\r\n * subsequent (@see updateRotate) event points and can be applied to a camera via an explicit update (@see update).\r\n */\r\nexport class TrackballModifier extends CameraModifier {\r\n\r\n    protected static readonly DEFAULT_SENSITIVITY = 0.002;\r\n\r\n\r\n    /**\r\n     * Current rotation matrix.\r\n     */\r\n    protected _rotation: mat4 = mat4.create();\r\n\r\n    /** @see {@link sensitivity} */\r\n    protected _sensitivity: number = TrackballModifier.DEFAULT_SENSITIVITY;\r\n\r\n\r\n    /**\r\n     * Initiate a new trackball rotation at a specific event position.\r\n     * @param point - Position of the current event to start the trackball rotation at.\r\n     */\r\n    initiate(point: vec2): void {\r\n        /* Retrieve initial event position. */\r\n        this._initialPoint = point;\r\n    }\r\n\r\n    /**\r\n     * Update the trackball rotation w.r.t. a specific event position.\r\n     * @param point - Position of the current event to continue/update the trackball rotation at.\r\n     */\r\n    process(point: vec2): void {\r\n        /* Retrieve current event positions. */\r\n        this._currentPoint = point;\r\n\r\n        const magnitudes = vec2.subtract(v2(), this._initialPoint, this._currentPoint);\r\n        vec2.scale(magnitudes, magnitudes, window.devicePixelRatio * this._sensitivity);\r\n\r\n        /* Rotation uses difference between two events, thus, initial position is reset. */\r\n        vec2.copy(this._initialPoint, this._currentPoint);\r\n\r\n        /* Create rotation with respect to arbitrary camera center and up vector. */\r\n        const centerToEye = vec3.sub(v3(), this._reference.eye, this._reference.center);\r\n        vec3.normalize(centerToEye, centerToEye);\r\n        const up = vec3.normalize(v3(), this._reference.up);\r\n\r\n        /* Create vertical rotation axis. */\r\n        const ortho = vec3.cross(v3(), centerToEye, up);\r\n        vec3.scale(up, up, magnitudes[1]);\r\n        vec3.scale(ortho, ortho, magnitudes[0]);\r\n\r\n        /* Create overall rotation axis for quaternion based rotation. */\r\n        const axis = vec3.cross(v3(), vec3.add(v3(), up, ortho), centerToEye);\r\n        vec3.normalize(axis, axis);\r\n\r\n        /* Create quaternion and modify rotation transformation. */\r\n        const q = quat.setAxisAngle(quat.create(), axis, vec2.len(magnitudes));\r\n        mat4.multiply(this._rotation, this._rotation, mat4.fromQuat(m4(), q));\r\n\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Actually applies the trackball rotation to the given camera.\r\n     */\r\n    update(): void {\r\n        if (this._camera === undefined) {\r\n            return;\r\n        }\r\n\r\n        /* Adjust for arbitrary camera center and rotate using quaternion based rotation. */\r\n        const T = mat4.fromTranslation(m4(), this._reference.center);\r\n        mat4.multiply(T, T, this._rotation);\r\n        mat4.translate(T, T, vec3.negate(v3(), this._reference.center));\r\n\r\n        const up = vec3.transformMat4(v3(), [0.0, 1.0, 0.0], this._rotation);\r\n        const eye = vec3.transformMat4(v3(), this._reference.eye, T);\r\n\r\n        this._camera.up = up;\r\n        this._camera.eye = eye;\r\n    }\r\n\r\n\r\n    /**\r\n     * Rotational sensitivity.\r\n     */\r\n    set sensitivity(sensitivity: number) {\r\n        this._sensitivity = sensitivity;\r\n    }\r\n\r\n    get sensitivity(): number {\r\n        return this._sensitivity;\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { vec2, vec3, vec4 } from 'gl-matrix';\r\nimport { clamp, clamp2, clamp3, clamp4 } from './gl-matrix-extensions';\r\n\r\nimport { assert, logIf, LogLevel } from './auxiliaries';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\nnamespace tuples {\r\n\r\n    /**\r\n     * Auxiliary 2-tuple of GLsizei values.\r\n     */\r\n    export type GLsizei2 = [GLsizei, GLsizei];\r\n\r\n    /**\r\n     * Auxiliary 3-tuple of GLsizei values.\r\n     */\r\n    export type GLsizei3 = [GLsizei, GLsizei, GLsizei];\r\n\r\n    /**\r\n     * Auxiliary 4-tuple of GLsizei values.\r\n     */\r\n    export type GLsizei4 = [GLsizei, GLsizei, GLsizei, GLsizei];\r\n\r\n\r\n    /**\r\n     * Auxiliary 2-tuple of GLfloat values.\r\n     */\r\n    export type GLfloat2 = [GLfloat, GLfloat];\r\n\r\n    /**\r\n     * Auxiliary 3-tuple of GLfloat values.\r\n     */\r\n    export type GLfloat3 = [GLfloat, GLfloat, GLfloat];\r\n\r\n    /**\r\n     * Auxiliary 4-tuple of GLfloat values.\r\n     */\r\n    export type GLfloat4 = [GLfloat, GLfloat, GLfloat, GLfloat];\r\n\r\n\r\n    /**\r\n     * Auxiliary 3-tuple of GLclampf values.\r\n     */\r\n    export type GLclampf2 = [GLclampf, GLclampf];\r\n\r\n    /**\r\n     * Auxiliary 3-tuple of GLclampf values.\r\n     */\r\n    export type GLclampf3 = [GLclampf, GLclampf, GLclampf];\r\n\r\n    /**\r\n     * Auxiliary 4-tuple of GLclampf values.\r\n     */\r\n    export type GLclampf4 = [GLclampf, GLclampf, GLclampf, GLclampf];\r\n\r\n    /**\r\n     * Auxiliary 5-tuple of GLclampf values.\r\n     */\r\n    export type GLclampf5 = [GLclampf, GLclampf, GLclampf, GLclampf, GLclampf];\r\n\r\n    /**\r\n     * Creates a tuple from a array buffer of the same size.\r\n     * @param buffer - Array of two float32 values.\r\n     * @returns - 2-tuple of specified type (GLsizei, GLfloat, or GLclampf).\r\n     */\r\n    export function tuple2<T extends GLsizei | GLclampf | GLfloat>(buffer: Float32Array | vec2): [T, T] {\r\n        assert(buffer.length === 2, `expected length of buffer to be 2, given ${buffer.length}`);\r\n        return [buffer[0] as T, buffer[1] as T];\r\n    }\r\n\r\n    /**\r\n     * Creates a tuple from a array buffer of the same size.\r\n     * @param buffer - Array of three float32 values.\r\n     * @returns - 3-tuple of specified type (GLsizei, GLfloat, or GLclampf).\r\n     */\r\n    export function tuple3<T extends GLsizei | GLclampf | GLfloat>(buffer: Float32Array | vec3): [T, T, T] {\r\n        assert(buffer.length === 3, `expected length of buffer to be 3, given ${buffer.length}`);\r\n        return [buffer[0] as T, buffer[1] as T, buffer[2] as T];\r\n    }\r\n\r\n    /**\r\n     * Creates a tuple from a array buffer of the same size.\r\n     * @param buffer - Array of four float32 values.\r\n     * @returns - 4-tuple of specified type (GLsizei, GLfloat, or GLclampf).\r\n     */\r\n    export function tuple4<T extends GLsizei | GLclampf | GLfloat>(buffer: Float32Array | vec4): [T, T, T, T] {\r\n        assert(buffer.length === 4, `expected length of buffer to be 4, given ${buffer.length}`);\r\n        return [buffer[0] as T, buffer[1] as T, buffer[2] as T, buffer[3] as T];\r\n    }\r\n\r\n\r\n    /**\r\n     * Clamps a single GLclampf/GLfloat value to the range [0.0, 1.0]. If clamping is necessary, a user-level message\r\n     * will be logged to console.\r\n     * @param value - Single GLclampf/GLfloat value to clamp to range [0.0, 1.0].\r\n     * @param semantic - String describing the value's semantic, used for the user-level log message.\r\n     * @returns - Clamped value.\r\n     */\r\n    export function clampf(value: GLclampf | GLfloat, semantic?: string): GLclampf | GLfloat {\r\n        const valueV1 = clamp(value, 0.0, 1.0);\r\n        logIf(semantic !== undefined && value < 0.0 || value > 1.0, LogLevel.Info,\r\n            `${semantic} clamped to [${valueV1}], given [${value}]`);\r\n        return valueV1;\r\n    }\r\n\r\n    /**\r\n     * Clamps each GLclampf/GLfloat value of a 2-tuple to the range [0.0, 1.0]. If clamping is necessary, a user-level\r\n     * message will be logged to console.\r\n     * @param tuple - 2-tuple of GLclampf/GLfloat values, each to be clamped to range [0.0, 1.0].\r\n     * @param semantic - String describing the tuple's semantic, used for the user-level log message.\r\n     * @returns - Clamped tuple.\r\n     */\r\n    export function clampf2(tuple: GLclampf2 | GLfloat2, semantic?: string): GLclampf2 | GLfloat2 {\r\n        const tupleV2: vec2 = vec2.fromValues(tuple[0], tuple[1]);\r\n        if (tuple[0] < 0.0 || tuple[0] > 1.0 || tuple[1] < 0.0 || tuple[1] > 1.0) {\r\n            clamp2(tupleV2, tupleV2, vec2.fromValues(0.0, 0.0), vec2.fromValues(1.0, 1.0));\r\n            logIf(semantic !== undefined, LogLevel.Info, `${semantic} clamped to [${tupleV2}], given [${tuple}]`);\r\n        }\r\n        return tuple2<typeof tuple[0]>(tupleV2);\r\n    }\r\n\r\n    /**\r\n     * Clamps each GLclampf/GLfloat value of a 3-tuple to the range [0.0, 1.0]. If clamping is necessary, a user-level\r\n     * message will be logged to console.\r\n     * @param tuple - 3-tuple of GLclampf/GLfloat values, each to be clamped to range [0.0, 1.0].\r\n     * @param semantic - String describing the tuple's semantic, used for the user-level log message.\r\n     * @returns - Clamped tuple.\r\n     */\r\n    export function clampf3(tuple: GLclampf3 | GLfloat3, semantic?: string): GLclampf3 | GLfloat3 {\r\n        const tupleV3: vec3 = vec3.fromValues(tuple[0], tuple[1], tuple[2]);\r\n        if (tuple[0] < 0.0 || tuple[0] > 1.0 || tuple[1] < 0.0 || tuple[1] > 1.0 || tuple[2] < 0.0 || tuple[2] > 1.0) {\r\n            clamp3(tupleV3, tupleV3, vec3.fromValues(0.0, 0.0, 0.0), vec3.fromValues(1.0, 1.0, 1.0));\r\n            logIf(semantic !== undefined, LogLevel.Info, `${semantic} clamped to [${tupleV3}], given [${tuple}]`);\r\n        }\r\n        return tuple3<typeof tuple[0]>(tupleV3);\r\n    }\r\n\r\n    /**\r\n     * Clamps each GLclampf/GLfloat value of a 4-tuple to the range [0.0, 1.0]. If clamping is necessary, a user-level\r\n     * message will be logged to console.\r\n     * @param tuple - 4-tuple of GLclampf/GLfloat values, each to be clamped to range [0.0, 1.0].\r\n     * @param semantic - String describing the tuple's semantic, used for the user-level log message.\r\n     * @returns - Clamped tuple.\r\n     */\r\n    export function clampf4(tuple: GLclampf4 | GLfloat4, semantic?: string): GLclampf4 | GLfloat4 {\r\n        const tupleV4: vec4 = vec4.fromValues(tuple[0], tuple[1], tuple[2], tuple[3]);\r\n        if (tuple[0] < 0.0 || tuple[0] > 1.0 || tuple[1] < 0.0 || tuple[1] > 1.0 ||\r\n            tuple[2] < 0.0 || tuple[2] > 1.0 || tuple[3] < 0.0 || tuple[3] > 1.0) {\r\n            clamp4(tupleV4, tupleV4, vec4.fromValues(0.0, 0.0, 0.0, 0.0), vec4.fromValues(1.0, 1.0, 1.0, 1.0));\r\n            logIf(semantic !== undefined, LogLevel.Info, `${semantic} clamped to [${tupleV4}], given [${tuple}]`);\r\n        }\r\n        return tuple4<typeof tuple[0]>(tupleV4);\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates a duplicate of a 2-tuple into another tuple.\r\n     * @param tuple - Source tuple to create duplicate of.\r\n     */\r\n    export function duplicate2<T extends GLclampf | GLfloat | GLsizei>(tuple: [T, T]): [T, T] {\r\n        return [tuple[0], tuple[1]];\r\n    }\r\n\r\n    /**\r\n     * Creates a duplicate of a 3-tuple into another tuple.\r\n     * @param tuple - Source tuple to create duplicate of.\r\n     */\r\n    export function duplicate3<T extends GLclampf | GLfloat | GLsizei>(tuple: [T, T, T]): [T, T, T] {\r\n        return [tuple[0], tuple[1], tuple[2]];\r\n    }\r\n\r\n    /**\r\n     * Creates a duplicate of a 4-tuple into another tuple.\r\n     * @param tuple - Source tuple to create duplicate of.\r\n     */\r\n    export function duplicate4<T extends GLclampf | GLfloat | GLsizei>(tuple: [T, T, T, T]): [T, T, T, T] {\r\n        return [tuple[0], tuple[1], tuple[2], tuple[3]];\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks whether or not two 2-tuples have identical values.\r\n     * @param tuple0 - First 2-tuple/operand for comparison.\r\n     * @param tuple1 - Second 2-tuple/operand for comparison.\r\n     * @returns - True iff tuples are equal in all two values (in their sequence).\r\n     */\r\n    export function equals2<T extends GLclampf | GLfloat | GLsizei>(t0: [T, T], t1: [T, T]): boolean {\r\n        return t0[0] === t1[0] && t0[1] === t1[1];\r\n    }\r\n\r\n    /**\r\n     * Checks whether or not two 3-tuples have identical values.\r\n     * @param tuple0 - First 3-tuple/operand for comparison.\r\n     * @param tuple1 - Second 3-tuple/operand for comparison.\r\n     * @returns - True iff tuples are equal in all three values (in their sequence).\r\n     */\r\n    export function equals3<T extends GLclampf | GLfloat | GLsizei>(t0: [T, T, T], t1: [T, T, T]): boolean {\r\n        return t0[0] === t1[0] && t0[1] === t1[1] && t0[2] === t1[2];\r\n    }\r\n\r\n    /**\r\n     * Checks whether or not two 4-tuples have identical values.\r\n     * @param tuple0 - First 4-tuple/operand for comparison.\r\n     * @param tuple1 - Second 4-tuple/operand for comparison.\r\n     * @returns - True iff tuples are equal in all four values (in their sequence).\r\n     */\r\n    export function equals4<T extends GLclampf | GLfloat | GLsizei>(t0: [T, T, T, T], t1: [T, T, T, T]): boolean {\r\n        return t0[0] === t1[0] && t0[1] === t1[1] && t0[2] === t1[2] && t0[3] === t1[3];\r\n    }\r\n\r\n}\r\n\r\nexport = tuples;\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { mat4, vec2, vec3 } from 'gl-matrix';\r\n\r\nimport { m4, v2, v3 } from './gl-matrix-extensions';\r\n\r\nimport { CameraModifier } from './cameramodifier';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * Math for camera rotation based on the turntable metaphor. The rotation computed by an initial (@see startRotate) and\r\n * subsequent (@see updateRotate) event points and can be applied to a camera via an explicit update (@see update).\r\n * In contrast to the trackball, this metaphor is usually less confusing for non-professionals.\r\n */\r\nexport class TurntableModifier extends CameraModifier {\r\n\r\n    protected static readonly DEFAULT_SENSITIVITY = 0.002;\r\n\r\n\r\n    /**\r\n     * Current rotation matrix.\r\n     */\r\n    protected _rotation: mat4 = m4();\r\n\r\n    protected _maxAzimuth: number | undefined = +Math.PI * 0.5 - 1e-4;\r\n    protected _minAzimuth: number | undefined = -Math.PI * 0.5 + 1e-4;\r\n\r\n    protected _xAxisScreenSpace = v3();\r\n    protected _azimuth: number;\r\n\r\n\r\n    /** @see {@link sensitivity} */\r\n    protected _sensitivity: number = TurntableModifier.DEFAULT_SENSITIVITY;\r\n\r\n\r\n    /**\r\n     * Initiate a new turntable rotation at a specific event position.\r\n     * @param point - Position of the current event to derive the magnitude for rotation from.\r\n     */\r\n    initiate(point: vec2): void {\r\n        Object.assign(this._reference, this._camera);\r\n\r\n        /* Retrieve initial event position. */\r\n        this._initialPoint = point;\r\n\r\n        const centerToEye = vec3.sub(v3(), this._reference.eye, this._reference.center);\r\n        vec3.normalize(centerToEye, centerToEye);\r\n\r\n        this._xAxisScreenSpace = vec3.cross(v3(), [0.0, 1.0, 0.0], centerToEye);\r\n        this._azimuth = Math.acos(vec3.dot(centerToEye, [0.0, 1.0, 0.0]));\r\n        this._azimuth = Math.PI * 0.5 - this._azimuth;\r\n    }\r\n\r\n    /**\r\n     * Update the turntable rotation w.r.t. a specific event position.\r\n     * @param point - Position of the current event to derive the magnitude for rotation from.\r\n     */\r\n    process(point: vec2): void {\r\n        /* Retrieve current event positions. */\r\n        this._currentPoint = point;\r\n\r\n        const magnitudes = vec2.subtract(v2(), this._initialPoint, this._currentPoint);\r\n        vec2.scale(magnitudes, magnitudes, window.devicePixelRatio * this._sensitivity);\r\n\r\n        if (Number.isFinite(this._minAzimuth)) {\r\n            magnitudes[1] = Math.min(this._azimuth - this._minAzimuth!, magnitudes[1]);\r\n        }\r\n        if (Number.isFinite(this._maxAzimuth)) {\r\n            magnitudes[1] = Math.max(this._azimuth - this._maxAzimuth!, magnitudes[1]);\r\n        }\r\n\r\n        mat4.rotateY(this._rotation, m4(), magnitudes[0]);\r\n        mat4.rotate(this._rotation, this._rotation, magnitudes[1], this._xAxisScreenSpace);\r\n\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Actually applies the trackball rotation to the given camera.\r\n     */\r\n    update(): void {\r\n        if (this._camera === undefined) {\r\n            return;\r\n        }\r\n\r\n        /* Adjust for arbitrary camera center and rotate using quaternion based rotation. */\r\n        const T = mat4.fromTranslation(m4(), this._reference.center);\r\n        mat4.multiply(T, T, this._rotation);\r\n        mat4.translate(T, T, vec3.negate(v3(), this._reference.center));\r\n\r\n        const up = vec3.transformMat4(v3(), [0.0, 1.0, 0.0], this._rotation);\r\n        const eye = vec3.transformMat4(v3(), this._reference.eye, T);\r\n\r\n        this._camera.up = up;\r\n        this._camera.eye = eye;\r\n    }\r\n\r\n\r\n    /**\r\n     * Rotational sensitivity.\r\n     */\r\n    set sensitivity(sensitivity: number) {\r\n        this._sensitivity = sensitivity;\r\n    }\r\n\r\n    get sensitivity(): number {\r\n        return this._sensitivity;\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { Buffer } from './buffer';\r\nimport { Context } from './context';\r\nimport { Initializable } from './initializable';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * Class to encapsulating a WebGL buffer adding functionality to record changes to the underlying buffer without\r\n * instantly propagating them to the WebGL buffer. It is intended to be a direct replacement for {@link Buffer}.\r\n * When calling {@link subData} the data will be copied to an internal, CPU-sided buffer and the affecting range will be\r\n * recorded. If the newly recorded range overrides a part of or the whole of a previously recorded range the older one\r\n * will either be discarded completely or merged with the new one according to a specifiable merge threshold.\r\n * To propagate all recorded changes to the GPU-sided buffer, {@link update} has to be called. This will take care of\r\n * both the allocation of the GPU-sided buffer and the transfer of the changed data.\r\n * While {@link update} can must only be called after initializing the object, {@link subData},\r\n * {@link mergeSubDataRanges} and resizing (@see{@link size}) can be called on the unitialized object.\r\n * The GPU-sided buffer is created on initialization and deleted on uninitialization.\r\n * A typical usage could look like this:\r\n * ```\r\n * // Create a unified buffer with the size of 1028 bytes and a mergeThreshold of 32 bytes\r\n * const unifiedBuffer = new UnifiedBuffer(context, 1028, gl.STATIC_DRAW, 32, 'UnifiedBuffer');\r\n * unifiedBuffer.initialize(gl.ARRAY_BUFFER);\r\n * unifiedBuffer.attribEnable(0, 1, gl.FLOAT, gl.FALSE, 0, 0, true, false);\r\n * unifiedBuffer.attribEnable(1, 1, gl.SHORT, gl.FALSE, 0, 512, false, true);\r\n *\r\n * unifiedBuffer.subData(0, new Float32Array(64).fill(3.14));\r\n * unifiedBuffer.subData(512, new Int16Array(128).fill(1200));\r\n *\r\n * unifiedBuffer.update(true, true);\r\n *\r\n * unifiedBuffer.subData(128, new Float32Array(32).fill(1.57));\r\n * unifiedBuffer.subData(640, new Int36Array(64).fill(600));\r\n *\r\n * unifiedBuffer.mergeThreshold = -1;\r\n * // This will merge both already existing ranges resulting in a single update\r\n * unifiedBuffer.mergeSubDataRanges();\r\n *\r\n * unifiedBuffer.bind();\r\n * unifiedBuffer.update();\r\n * unifiedBuffer.unbind();\r\n * ```\r\n */\r\nexport class UnifiedBuffer extends Initializable {\r\n\r\n    protected _cpuBuffer: ArrayBuffer;\r\n    protected _gpuBuffer: Buffer;\r\n    protected _updates = new Array<Update>();\r\n\r\n    /** @see {@link usage} */\r\n    protected _usage: GLenum;\r\n\r\n    /** @see {@link mergeThreshold} */\r\n    protected _mergeThreshold: number;\r\n\r\n    /**\r\n     * Checks if two updates have to be merged according to the mergeThreshold. Note: lhsUpdate.begin has to be smaller\r\n     * than rhsUpdate.begin.\r\n     * @param lhsUpdate - First update\r\n     * @param rhsUpdate - Second update\r\n     * @param mergeThreshold - Threshold considered for merging.\r\n     * @returns - True if mergeThreshold == -1 or distance between the two updates <= mergeThreshold, false otherwise.\r\n     */\r\n    protected static updatesNeedMerge(lhsUpdate: Update, rhsUpdate: Update, mergeThreshold: number): boolean {\r\n        return rhsUpdate.begin - lhsUpdate.end < mergeThreshold || mergeThreshold === -1;\r\n    }\r\n\r\n    /**\r\n     * Creates a zero initialized buffer with the given size.\r\n     * @param context - Context used for all GPU operations.\r\n     * @param sizeInBytes - Size of the buffer in bytes.\r\n     * @param usage - Usage hint for allocation of the GPU-sided buffer.\r\n     * @param mergeThreshold - Threshold in which all updates will get merged.\r\n     * @param identifier - Unique identifier for this UnifiedBuffer.\r\n     */\r\n    constructor(context: Context, sizeInBytes: number, usage: GLenum, mergeThreshold = 0, identifier?: string) {\r\n        super();\r\n\r\n        this._cpuBuffer = new ArrayBuffer(sizeInBytes);\r\n        this._gpuBuffer = new Buffer(context, identifier);\r\n        this._usage = usage;\r\n        this._mergeThreshold = mergeThreshold;\r\n    }\r\n\r\n    /**\r\n     * Merges all updates left of index transitively with the update at index until there are no more updates within the\r\n     * merge threshold.\r\n     * @param index - Index of the update that should get merged.\r\n     * @returns - Number of merged updates.\r\n     */\r\n    protected mergeUpdatesLeft(index: number): number {\r\n        let removeCount = 0;\r\n        const rhs = this._updates[index];\r\n\r\n        for (let i = index - 1; i >= 0; i--) {\r\n            const lhs = this._updates[i];\r\n\r\n            if (UnifiedBuffer.updatesNeedMerge(lhs, rhs, this._mergeThreshold)) {\r\n                rhs.begin = Math.min(rhs.begin, lhs.begin);\r\n                rhs.end = Math.max(rhs.end, lhs.end);\r\n                removeCount++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        this._updates.splice(index - removeCount, removeCount);\r\n\r\n        return removeCount + 1;\r\n    }\r\n\r\n    /**\r\n     * Merges all updates right of index transitively with the update at index until there are no more updates within\r\n     * the merge threshold.\r\n     * @param index - Index of the update that should get merged.\r\n     * @returns - Number of merged updates.\r\n     */\r\n    protected mergeUpdatesRight(index: number): number {\r\n        let removeCount = 0;\r\n        const lhs = this._updates[index];\r\n\r\n        for (let i = index + 1; i < this._updates.length; i++) {\r\n            const rhs = this._updates[i];\r\n\r\n            if (UnifiedBuffer.updatesNeedMerge(lhs, rhs, this._mergeThreshold)) {\r\n                lhs.begin = Math.min(lhs.begin, rhs.begin);\r\n                lhs.end = Math.max(lhs.end, rhs.end);\r\n                removeCount++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        this._updates.splice(index + 1, removeCount);\r\n\r\n        return removeCount + 1;\r\n    }\r\n\r\n    /**\r\n     * Adds a range to recorded updates. Transitively merges all already recorded updates within the mergeThreshold of\r\n     * the added range.\r\n     * @param update - Range to add to the updates.\r\n     */\r\n    protected addUpdate(update: Update): void {\r\n        const start = this._updates.findIndex((current: Update) => {\r\n            return update.begin < current.begin;\r\n        });\r\n\r\n        if (start === -1) {\r\n            this._updates.push(update);\r\n\r\n            this.mergeUpdatesLeft(this._updates.length - 1);\r\n        } else {\r\n            this._updates.splice(start, 0, update);\r\n\r\n            this.mergeUpdatesRight(start);\r\n            this.mergeUpdatesLeft(start);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create the buffer object on the GPU.\r\n     * @param target - Target used as binding point.\r\n     */\r\n    @Initializable.initialize()\r\n    initialize(target: GLenum): boolean {\r\n        return this._gpuBuffer.initialize(target);\r\n    }\r\n\r\n    /**\r\n     * Delete the buffer object on the GPU. This should have the reverse effect of `create`.\r\n     */\r\n    @Initializable.uninitialize()\r\n    uninitialize(): void {\r\n        this._gpuBuffer.uninitialize();\r\n    }\r\n\r\n    /**\r\n     * Binds the buffer object as buffer to predefined target.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    bind(): void {\r\n        this._gpuBuffer.bind();\r\n    }\r\n\r\n    /**\r\n     * Binds null as current buffer to predefined target;\r\n     */\r\n    @Initializable.assert_initialized()\r\n    unbind(): void {\r\n        this._gpuBuffer.unbind();\r\n    }\r\n\r\n    /**\r\n     * Specifies the memory layout of the buffer for a binding point.\r\n     * @param index - Index of the vertex attribute that is to be setup and enabled.\r\n     * @param size - Number of components per vertex attribute.\r\n     * @param type - Data type of each component in the array.\r\n     * @param normalized - Whether integer data values should be normalized when being casted to a float.\r\n     * @param stride - Offset in bytes between the beginning of consecutive vertex attributes.\r\n     * @param offset - Offset in bytes of the first component in the vertex attribute array.\r\n     * @param bind - Allows to skip binding the object (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the object (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    attribEnable(index: GLuint, size: GLint, type: GLenum, normalized: GLboolean = false,\r\n        stride: GLsizei = 0, offset: GLintptr = 0, bind: boolean = true, unbind: boolean = true): void {\r\n        this._gpuBuffer.attribEnable(index, size, type, normalized, stride, offset, bind, unbind);\r\n    }\r\n\r\n    /**\r\n     * Disables a buffer binding point.\r\n     * @param index - Index of the vertex attribute that is to be disabled.\r\n     * @param bind - Allows to skip binding the object (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the object (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    attribDisable(index: GLuint, bind: boolean = true, unbind: boolean = true): void {\r\n        this._gpuBuffer.attribDisable(index, bind, unbind);\r\n    }\r\n\r\n    /**\r\n     * Merges all recorded subData ranges.\r\n     */\r\n    mergeSubDataRanges(): void {\r\n        let index = 0;\r\n        while (index < this._updates.length) {\r\n            index += this.mergeUpdatesRight(index);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Copies the new data into the CPU-sided buffer and records the range as changed. All previously added ranges will\r\n     * get merged transitively with the new one, if they are within the set mergeThreshold.\r\n     * Note: This does not transfer anything to the GPU-sided buffer yet.\r\n     * @param dstByteOffset - Offset of bytes into the destination buffer.\r\n     * @param srcData - Data that will be copied into the destination buffer.\r\n     */\r\n    subData(dstByteOffset: GLintptr, srcData: ArrayBufferView | ArrayBuffer): void {\r\n        let src: Uint8Array;\r\n        if (srcData instanceof ArrayBuffer) {\r\n            src = new Uint8Array(srcData);\r\n        } else {\r\n            src = new Uint8Array(srcData.buffer).subarray(srcData.byteOffset, srcData.byteOffset + srcData.byteLength);\r\n        }\r\n\r\n        const dst = new Uint8Array(this._cpuBuffer);\r\n\r\n        dst.set(src, dstByteOffset);\r\n        this.addUpdate({ begin: dstByteOffset, end: dstByteOffset + src.byteLength });\r\n    }\r\n\r\n    /**\r\n     * Copies all previously recorded ranges and their data to the GPU. (Re-)Allocate the GPU-sided buffer if the size\r\n     * changed or the object was reinitialized.\r\n     * @param bind - Allows to skip binding the object (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the object (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    update(bind: boolean = false, unbind: boolean = false): void {\r\n        if (bind) {\r\n            this._gpuBuffer.bind();\r\n        }\r\n\r\n        if (this._gpuBuffer.bytes !== this._cpuBuffer.byteLength) {\r\n            this._gpuBuffer.data(this._cpuBuffer, this._usage);\r\n        } else {\r\n            const bufferView = new Uint8Array(this._cpuBuffer);\r\n            for (const update of this._updates) {\r\n                const subBufferView = bufferView.subarray(update.begin, update.end);\r\n                this._gpuBuffer.subData(update.begin, subBufferView);\r\n            }\r\n        }\r\n\r\n        if (unbind) {\r\n            this._gpuBuffer.unbind();\r\n        }\r\n\r\n        this._updates.length = 0;\r\n    }\r\n\r\n    /**\r\n     * Returns the size of the CPU-sided buffer. This is not necessarily the same as the size of the GPU-sided buffer,\r\n     * if update has not been called after resizing the buffer.\r\n     */\r\n    get size(): number {\r\n        return this._cpuBuffer.byteLength;\r\n    }\r\n\r\n    /**\r\n     * Resizes the buffer. Note, that this does not resize the GPU-sided buffer. To update the size of the GPU-sided\r\n     * buffer update has to be called.\r\n     */\r\n    set size(sizeInBytes: number) {\r\n        const oldBuffer = this._cpuBuffer;\r\n        this._cpuBuffer = new ArrayBuffer(sizeInBytes);\r\n\r\n        // Takes the whole buffer, if sizeInBytes > oldBuffer\r\n        // Takes sizeInBytes of oldBuffer otherwise\r\n        const src = new Uint8Array(oldBuffer).slice(0, sizeInBytes);\r\n        const dst = new Uint8Array(this._cpuBuffer);\r\n        dst.set(src);\r\n    }\r\n\r\n    /**\r\n     * Target to which the buffer object is bound (either GL_ARRAY_BUFFER or GL_ELEMENT_ARRAY_BUFFER).\r\n     * Readonly access to the target (as specified on initialization) the buffer will be bound to.\r\n     */\r\n    get target(): GLenum | undefined {\r\n        this.assertInitialized();\r\n        return this._gpuBuffer.target;\r\n    }\r\n\r\n    /**\r\n     * Returns the usage hint used for allocation of the GPU-sided buffer.\r\n     */\r\n    get usage(): GLenum {\r\n        return this._usage;\r\n    }\r\n\r\n    /**\r\n     * Sets the usage hint used for allocation of the GPU-sided buffer.\r\n     */\r\n    set usage(usage: GLenum) {\r\n        this._usage = usage;\r\n    }\r\n\r\n    /**\r\n     * Returns the threshold used to determine whether two ranges have to be merged.\r\n     */\r\n    get mergeThreshold(): number {\r\n        return this._mergeThreshold;\r\n    }\r\n\r\n    /**\r\n     * Sets the threshold determining whether two ranges have to be merged. If the mergeThreshold is set to -1 all\r\n     * ranges will get merged disregarding their distance to each other.\r\n     */\r\n    set mergeThreshold(mergeThreshold: number) {\r\n        this._mergeThreshold = mergeThreshold;\r\n    }\r\n}\r\n\r\ninterface Update {\r\n    /** inclusive */\r\n    begin: number;\r\n    /** exclusive */\r\n    end: number;\r\n}\r\n","\r\n\r\n/**\r\n * Provided via the git-revision-webgl-operate and define plugins.\r\n */\r\ndeclare let GIT_REV_VERSION: string;\r\ndeclare let GIT_REV_COMMIT: string;\r\ndeclare let GIT_REV_BRANCH: string;\r\n\r\n/**\r\n * `gloperate.branch` provides the git revision branch at build-time.\r\n */\r\nexport const branch = typeof GIT_REV_BRANCH !== 'undefined' ? `${GIT_REV_BRANCH}` : undefined;\r\n\r\n/**\r\n * `gloperate.commit` provides the git revision commit at build-time.\r\n */\r\nexport const commit = typeof GIT_REV_COMMIT !== 'undefined' ? `${GIT_REV_COMMIT}` : undefined;\r\n\r\n/**\r\n * `gloperate.version` provides the git revision version at build-time.\r\n */\r\nexport const version = typeof GIT_REV_VERSION !== 'undefined' ? `${GIT_REV_VERSION}` : undefined;\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { assert } from './auxiliaries';\r\n\r\nimport { Bindable } from './bindable';\r\nimport { Initializable } from './initializable';\r\nimport { AbstractObject } from './object';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * Wrapper for drawable objects by means of multiple vertex buffer that could be bound to a vertex array. If the\r\n * context supports vertex array objects either natively (webgl2) or by extension, the drawable buffer are bound\r\n * only once on initialization and only a single VAO bind and unbind is required for a rendering pass.\r\n *\r\n * The VertexArray can be used wrapped around any VertexBuffer interface:\r\n * ```\r\n * export class ScreenFillingTriangle extends VertexArray {\r\n * // ...\r\n *     bind(index: GLuint): void { ... }\r\n *     unbind(index: GLuint): void { ... }\r\n *     draw(): void { ... }\r\n * }\r\n *\r\n * export class ScreenFillingTriangleVAO extends VertexArray<ScreenFillingTriangle> { }\r\n * ```\r\n *\r\n * With that the screen-filling triangle can be drawn as follows:\r\n * ```\r\n * this.someTriangleVAO.draw();\r\n * ```\r\n */\r\nexport class VertexArray extends AbstractObject<any> implements Bindable {\r\n\r\n    /**\r\n     * Default vertex array, e.g., used for unbind.\r\n     */\r\n    static readonly DEFAULT_VERTEX_ARRAY = undefined;\r\n\r\n\r\n    /**\r\n     * Flag to track one-time initialization (in case vertex arrays are supported).\r\n     */\r\n    protected _buffersBound = false;\r\n\r\n    /**\r\n     * The feature specific bind function. This is mapped on initialization either to native VAO bind, extension based\r\n     * VAO bind or directly to the drawable's bind.\r\n     */\r\n    protected _bind: () => void;\r\n    /**\r\n     * The feature specific unbind function. This is mapped on initialization either to native VAO unbind, extension\r\n     * based VAO unbind or directly to the drawable's unbind.\r\n     */\r\n    protected _unbind: () => void;\r\n\r\n\r\n    /**\r\n     * Depending on the context features, a vertex array object is created and the bind method is specified (either\r\n     * native, by extension, or none/direct bind).\r\n     * @param bindBOs - Function that should bind all VBOs and IBOs required for drawing.\r\n     * @param unbindBOs - Function that should unbind all VBOs and IBOs used for drawing.\r\n     */\r\n    protected create(bindBOs: () => void, unbindBOs: () => void): any /* WebGLVertexArrayObject */ | undefined {\r\n\r\n        if (this.context.isWebGL2 || this.context.supportsVertexArrayObject) {\r\n            const gl2facade = this.context.gl2facade;\r\n\r\n            this._object = gl2facade.createVertexArray();\r\n            /* note that gl.isVertexArray requires the vertex array to be bound */\r\n            this._valid = this._object !== undefined;\r\n\r\n            this._bind = () => {\r\n                gl2facade.bindVertexArray(this.object);\r\n                if (this._buffersBound) {\r\n                    return;\r\n                }\r\n                bindBOs();\r\n                this._buffersBound = true;\r\n            };\r\n            this._unbind = () => gl2facade.bindVertexArray(VertexArray.DEFAULT_VERTEX_ARRAY);\r\n\r\n        } else {\r\n            this._bind = () => bindBOs();\r\n            this._unbind = () => unbindBOs();\r\n            this._valid = true;\r\n        }\r\n\r\n        return this._object;\r\n    }\r\n\r\n    /**\r\n     * On deletion either the VAO is deleted (when VAOs are supported natively or by extension) or nothing happens. Note\r\n     * that the VAO does not own any of its associated buffers (which can be shared over multiple VAO instances or\r\n     * used directly).\r\n     */\r\n    protected delete(): void {\r\n        if (!this.context.isWebGL2 && !this.context.supportsVertexArrayObject) {\r\n            this._valid = false;\r\n            return;\r\n        }\r\n\r\n        assert(this._object !== undefined, `expected WebGLVertexArrayObject object`);\r\n        this._context.gl2facade.deleteVertexArray(this._object);\r\n\r\n        this._object = undefined;\r\n        this._valid = false;\r\n\r\n        this._buffersBound = false;\r\n    }\r\n\r\n    /**\r\n     * Invokes the preset bind function.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    bind(): void {\r\n        this._bind();\r\n    }\r\n\r\n    /**\r\n     * Invokes the preset unbind function.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    unbind(): void {\r\n        this._unbind();\r\n    }\r\n\r\n    /**\r\n     * Can be used to enforce rebinding all buffers, e.g., when data has changed.\r\n     */\r\n    invalidate(): void {\r\n        this._buffersBound = false;\r\n    }\r\n\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n\r\n/* spellchecker: disable */\r\n\r\nexport { branch, commit, version } from './version';\r\n\r\nexport { Context } from './context';\r\nexport { Canvas } from './canvas';\r\nexport { Controller } from './controller';\r\n\r\nexport { Initializable } from './initializable';\r\n\r\nexport { ContextMasquerade } from './contextmasquerade';\r\nexport { ExtensionsHash } from './extensionshash';\r\nexport { ChangeLookup } from './changelookup';\r\nexport { MouseEventProvider } from './mouseeventprovider';\r\nexport { TouchEventProvider } from './toucheventprovider';\r\nexport { PointerEventProvider } from './pointereventprovider';\r\nexport { EventHandler, EventProvider } from './eventhandler';\r\n\r\nexport { Buffer } from './buffer';\r\nexport { Color } from './color';\r\nexport { ColorScale } from './colorscale';\r\nexport { DefaultFramebuffer } from './defaultframebuffer';\r\nexport { Framebuffer } from './framebuffer';\r\nexport { Geometry } from './geometry';\r\nexport { Program } from './program';\r\nexport { Renderbuffer } from './renderbuffer';\r\nexport { Renderer, Invalidate, LoadingStatus } from './renderer';\r\nexport { Shader } from './shader';\r\nexport { Texture2D } from './texture2d';\r\nexport { Texture3D } from './texture3d';\r\nexport { Texture2DArray } from './texture2darray';\r\nexport { TextureCube } from './texturecube';\r\nexport { UnifiedBuffer } from './unifiedbuffer';\r\nexport { VertexArray } from './vertexarray';\r\nexport { Wizard } from './wizard';\r\n\r\nexport { Camera } from './camera';\r\nexport { TileCameraGenerator } from './tilecameragenerator';\r\nexport { CameraModifier } from './cameramodifier';\r\nexport { Navigation } from './navigation';\r\nexport { FirstPersonModifier } from './firstpersonmodifier';\r\nexport { PanModifier } from './panmodifier';\r\nexport { PointerLock } from './pointerlock';\r\nexport { TrackballModifier } from './trackballmodifier';\r\nexport { TurntableModifier } from './turntablemodifier';\r\nexport { PinchZoomModifier } from './pinchzoommodifier';\r\nexport { WheelZoomModifier } from './wheelzoommodifier';\r\nexport { CanvasRecorder } from './canvasrecorder';\r\n\r\nexport { NdcFillingRectangle } from './ndcfillingrectangle';\r\nexport { NdcFillingTriangle } from './ndcfillingtriangle';\r\n\r\nexport { AbstractKernel } from './kernel';\r\nexport { AntiAliasingKernel } from './antialiasingkernel';\r\nexport { RandomSquareKernel } from './randomsquarekernel';\r\nexport { KernelF32, KernelI32, KernelI8, KernelUI32, KernelUI8 } from './kernel';\r\n\r\nexport { AccumulatePass } from './accumulatepass';\r\nexport { BlitPass } from './blitpass';\r\nexport { DebugPass } from './debugpass';\r\nexport { EnvironmentRenderingPass, EnvironmentTextureType } from './environmentrenderingpass';\r\nexport { ReadbackPass } from './readbackpass';\r\n\r\nexport { GaussFilter } from './gaussfilter';\r\nexport { ShadowPass } from './shadowpass';\r\n\r\n\r\nexport { EyeGazeDataStream, EyeGazeDataStreams } from './eyegazedatastream';\r\nexport { EyeGazeEventProvider } from './eyegazeeventprovider';\r\nexport { EyeGazeEvent, EyeGazeData } from './eyegazeevent';\r\n\r\nexport { FrameCapture } from './framecapture';\r\n\r\n\r\nexport * from './core/index';\r\nexport * from './scene/index';\r\nexport * from './text/index';\r\n\r\n\r\n/* AUXILIARIES */\r\n\r\nimport * as root_auxiliaries from './auxiliaries';\r\nexport import auxiliaries = root_auxiliaries;\r\n\r\nexport { vec2, vec3, vec4 } from 'gl-matrix';\r\nexport { mat2, mat2d, mat3, mat4 } from 'gl-matrix';\r\nexport { quat } from 'gl-matrix';\r\n\r\nimport * as root_gl_matrix_extensions from './gl-matrix-extensions';\r\nexport import gl_matrix_extensions = root_gl_matrix_extensions;\r\n\r\nimport * as root_tuples from './tuples';\r\nexport import tuples = root_tuples;\r\n\r\n/* spellchecker: enable */\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { mat4, vec3 } from 'gl-matrix';\r\n\r\nimport { m4, v3 } from './gl-matrix-extensions';\r\n\r\nimport { CameraModifier } from './cameramodifier';\r\n\r\n/* spellchecker: enable */\r\n\r\nexport class WheelZoomModifier extends CameraModifier {\r\n\r\n    protected static readonly DEFAULT_SENSITIVITY = 0.002;\r\n\r\n    protected _sensitivity: number = WheelZoomModifier.DEFAULT_SENSITIVITY;\r\n\r\n    protected _translation: vec3 = v3();\r\n\r\n    /**\r\n     * Update the panning transform w.r.t. a specific event position.\r\n     * @param point - Position of the current event to derive the magnitude for translation from.\r\n     */\r\n    process(delta: number): void {\r\n        Object.assign(this._reference, this._camera);\r\n\r\n        const magnitude = delta * this._sensitivity;\r\n\r\n        const eyeToCenter = vec3.sub(v3(), this._reference.center, this._reference.eye);\r\n        vec3.normalize(eyeToCenter, eyeToCenter);\r\n\r\n        this._translation = vec3.scale(v3(), eyeToCenter, magnitude);\r\n\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Actually applies the trackball rotation to the given camera.\r\n     */\r\n    update(): void {\r\n        if (this._camera === undefined) {\r\n            return;\r\n        }\r\n\r\n        /* Adjust for arbitrary camera center and rotate using quaternion based rotation. */\r\n        const T = mat4.fromTranslation(m4(), this._translation);\r\n\r\n        const eye = vec3.transformMat4(v3(), this._reference.eye, T);\r\n\r\n        this._camera.eye = eye;\r\n    }\r\n\r\n}\r\n","\r\n/* spellchecker: disable */\r\n\r\nimport { assert, log, LogLevel } from './auxiliaries';\r\n\r\nimport { Context } from './context';\r\n\r\n/* spellchecker: enable */\r\n\r\n\r\n/**\r\n * This wizard provides means for non-trivial, context specific framebuffer setups, texture formats, etc.\r\n */\r\nexport class Wizard {\r\n\r\n    /**\r\n     * Queries the support of internal texture precision given a query precision within the given context.\r\n     * @param context - Wrapped gl context for function resolution (passed to all stages).\r\n     * @param precision - Requested precision of the internal format: 'auto', 'float', 'half', 'byte'.\r\n     * @returns tuple of query, type, and internal format index to reduce tuple return logic (see switch)\r\n     */\r\n    private static queryPrecisionSupport(\r\n        context: Context, precision: Wizard.Precision): [Wizard.Precision, GLenum, GLint] {\r\n\r\n        const gl = context.gl;\r\n        const gl2facade = context.gl2facade;\r\n\r\n        /**\r\n         * In WebGL1 contexts, OES_texture_float always implies WEBGL_color_buffer_float and OES_texture_half_float\r\n         * implies EXT_color_buffer_half_float.\r\n         */\r\n        const floatWriteSupport = (context.isWebGL1 && context.supportsTextureFloat) ||\r\n            (context.isWebGL2 && context.supportsColorBufferFloat);\r\n        const halfWriteSupport = (context.isWebGL1 && context.supportsTextureHalfFloat) ||\r\n            (context.isWebGL2 && context.supportsColorBufferFloat);\r\n\r\n        let query = precision;\r\n\r\n        if (!(precision in Wizard.Precision)) {\r\n            log(LogLevel.Warning, `unknown precision '${query}' changed to '${Wizard.Precision.auto}'`);\r\n            precision = Wizard.Precision.auto;\r\n        }\r\n        if (precision === Wizard.Precision.auto) { /* Derive maximum supported write to texture/buffer format. */\r\n            query = floatWriteSupport ? Wizard.Precision.float : halfWriteSupport ?\r\n                Wizard.Precision.half : Wizard.Precision.byte;\r\n        }\r\n\r\n        /* Query type and, if required), enable extension. */\r\n        if (query === Wizard.Precision.half && halfWriteSupport) {\r\n            context.isWebGL2 ? context.colorBufferFloat : context.textureHalfFloat;\r\n            return [query, gl2facade.HALF_FLOAT, 1];\r\n\r\n        } else if ((query === Wizard.Precision.float || query === Wizard.Precision.half)\r\n            && floatWriteSupport) {\r\n            /* If not explicitly requested, fallback for half_float. */\r\n            context.isWebGL2 ? context.colorBufferFloat : context.textureFloat;\r\n            return [query, gl.FLOAT, 0];\r\n\r\n        } else {\r\n            return [query, gl.UNSIGNED_BYTE, 2];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Queries the internal texture format matching the target format best for the given context. For 'auto' precision\r\n     * the format of maximum accuracy supported is returned.\r\n     * @param context - Wrapped gl context for function resolution (passed to all stages).\r\n     * @param target - Target format, e.g., gl.RGBA, used to find the supported precision/accuracy for.\r\n     * @param precision - Requested precision of the internal format: 'auto', 'float', 'half', 'byte'.\r\n     * @returns - 3-tuple containing the (1) internal format, (2) the type (required for some internal formats to work\r\n     * ...), and (3) the precision enum/string that matches the resulting format best.\r\n     */\r\n    static queryInternalTextureFormat(context: Context, target: GLenum,\r\n        precision: Wizard.Precision = Wizard.Precision.auto): [GLenum, GLenum, Wizard.Precision] {\r\n\r\n        const [query, type, internalFormatIndex] = this.queryPrecisionSupport(context, precision);\r\n\r\n        const gl = context.gl;\r\n\r\n        /* In this case, no specialized internal formats are available. */\r\n        if (context.isWebGL1) {\r\n            assert([gl.RGB, gl.RGBA].includes(target), 'target must be gl.RGB or gl.RGBA in WebGL 1');\r\n            return [target, type, query];\r\n        }\r\n\r\n        switch (target) {\r\n            case gl.RGBA:\r\n                return [[gl.RGBA32F, gl.RGBA16F, gl.RGBA8][internalFormatIndex], type, query];\r\n            case gl.RGB:\r\n                return [[gl.RGB32F, gl.RGB16F, gl.RGB8][internalFormatIndex], type, query];\r\n            case gl.RG:\r\n                return [[gl.RG32F, gl.RG16F, gl.RG8][internalFormatIndex], type, query];\r\n            case gl.RED:\r\n                return [[gl.R32F, gl.R16F, gl.R8][internalFormatIndex], type, query];\r\n            default:\r\n                assert(false, `internal format querying is not yet supported for formats other than RGBA, RGB`);\r\n        }\r\n        return [gl.NONE, gl.NONE, query];\r\n    }\r\n\r\n}\r\n\r\nexport namespace Wizard {\r\n\r\n    export enum Precision {\r\n        float = 'float',\r\n        half = 'half',\r\n        byte = 'byte',\r\n        auto = 'auto',\r\n    }\r\n\r\n}\r\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n","module.exports = \"\\r\\nprecision lowp float;\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n    #define texture(sampler, coord) texture2D(sampler, coord)\\r\\n#else \\r\\n    #define varying in\\r\\n#endif\\r\\n\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n    #define fragColor gl_FragColor\\r\\n#else\\r\\n    layout(location = 0) out vec4 fragColor;\\r\\n#endif\\r\\n\\r\\n\\r\\nuniform float u_weight;\\r\\nuniform sampler2D u_accumulationTexture;\\r\\nuniform sampler2D u_currentFrameTexture;\\r\\n\\r\\nvarying vec2 v_uv;\\r\\n\\r\\n\\r\\nvoid main(void)\\r\\n{\\r\\n    vec4 accumulationColor = texture(u_accumulationTexture, v_uv);\\r\\n    vec4 currentFrameColor = texture(u_currentFrameTexture, v_uv);\\r\\n    fragColor = mix(accumulationColor, currentFrameColor, u_weight);\\r\\n}\\r\\n\"","module.exports = \"\\r\\nprecision highp float;\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n    #define texture(sampler, coord) texture2D(sampler, coord)\\r\\n#else \\r\\n    #define varying in\\r\\n#endif\\r\\n\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n    #define fragColor gl_FragColor\\r\\n#else\\r\\n    layout(location = 0) out vec4 fragColor;\\r\\n#endif\\r\\n\\r\\n\\r\\nuniform sampler2D u_source;\\r\\n\\r\\nvarying vec2 v_uv;\\r\\n\\r\\n\\r\\nvoid main(void)\\r\\n{\\r\\n    fragColor = texture(u_source, v_uv);\\r\\n}\\r\\n\"","module.exports = \"\\r\\nprecision lowp float;\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n    #define texture(sampler, coord) texture2D(sampler, coord)\\r\\n#else\\r\\n    #define varying out\\r\\n#endif\\r\\n\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n    attribute vec2 a_vertex;\\r\\n#else\\r\\n    layout(location = 0) in vec2 a_vertex;\\r\\n#endif\\r\\n\\r\\nuniform vec4 u_srcBounds; // normalized\\r\\nuniform vec4 u_dstBounds; // normalized\\r\\n\\r\\nvarying vec2 v_uv;\\r\\n\\r\\n\\r\\nvoid main(void)\\r\\n{\\r\\n    vec2 uv = a_vertex * 0.5 + 0.5;\\r\\n\\r\\n    v_uv = mix(u_srcBounds.xy, u_srcBounds.zw, uv);\\r\\n    gl_Position = vec4(a_vertex.xy, 0.0, 1.0);\\r\\n}\\r\\n\"","module.exports = \"\\r\\nprecision highp float;\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n    #define texture(sampler, coord) texture2D(sampler, coord)\\r\\n#else \\r\\n    #define varying in\\r\\n#endif\\r\\n\\r\\n\\r\\n\\r\\nconst float one255ths = 1.0 / 255.0;\\r\\n\\r\\nvec3 float24x1_to_uint8x3(const in float f) {\\r\\n    vec3 uint8x3 = vec3(f, fract(f * 256.0), fract(f * 65536.0));\\r\\n    return floor(uint8x3 * 256.0) * one255ths;\\r\\n}\\r\\n\\r\\nvec4 float24x1_to_uint8x4(const in float f) {\\r\\n    vec4 uint8x4 = vec4(f, fract(f * 256.0), fract(f * 65536.0), fract(f * 16777216.0));\\r\\n    return floor(uint8x4 * 256.0) * one255ths;\\r\\n}\\r\\n\\r\\nconst vec3 premultUint8x3 = vec3(255.0 / 256.0, 255.0 / 65536.0, 255.0 / 16777216.0);\\r\\nfloat uint8x3_to_float24x1(const in vec3 v) {\\r\\n    return dot(v, premultUint8x3); // a1 * b1 + a2 * b2 + a3 * b3  ;)\\r\\n}\\r\\n\\r\\nconst vec4 premultUint8x4 = vec4(255.0 / 256.0, 255.0 / 65536.0, 255.0 / 16777216.0, 255.0 / 4294967296.0);\\r\\nfloat uint8x4_to_float32x1(const in vec4 v) {\\r\\n    return dot(v, premultUint8x4); // a1 * b1 + a2 * b2 + a3 * b3 + a4 * b4  ;)\\r\\n}\\r\\n\\r\\n\\r\\nfloat linearizeDepth(float zInNDC, float near, float far) {\\r\\n    float zLinear = 2.0 * near;\\r\\n    zLinear /= far + near - zInNDC * (far - near);\\r\\n    return zLinear;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n    #define fragColor gl_FragColor\\r\\n#else\\r\\n    layout(location = 0) out vec4 fragColor;\\r\\n#endif\\r\\n\\r\\n\\r\\nuniform sampler2D u_source;\\r\\n\\r\\nuniform int u_mode; /* Debug mode. */\\r\\nuniform vec2 u_linearize; /* [ zNear, zFar ] */\\r\\n\\r\\n\\r\\nvarying vec2 v_uv;\\r\\n\\r\\n\\r\\nvoid main(void)\\r\\n{\\r\\n    vec4 source = texture(u_source, v_uv);\\r\\n\\r\\n    /* u_mode == 0                 None */\\r\\n\\r\\n    if(u_mode == 1) {           /* Depth */\\r\\n        source.rgb = vec3(source[0]);\\r\\n\\r\\n    } else if (u_mode == 2) {   /* DepthLinear */\\r\\n        float zLinear = linearizeDepth(source[0], u_linearize[0], u_linearize[1]);\\r\\n        source.rgb = vec3(zLinear);\\r\\n\\r\\n    } else if(u_mode == 3) {    /* DepthPacked */\\r\\n        source.rgb = float24x1_to_uint8x3(source[0]);\\r\\n\\r\\n    } else if (u_mode == 4) {   /* DepthLinearPacked */\\r\\n        float zLinear = linearizeDepth(source[0], u_linearize[0], u_linearize[1]);\\r\\n        source.rgb = float24x1_to_uint8x3(zLinear);\\r\\n    }\\r\\n\\r\\n    fragColor = source;\\r\\n}\\r\\n\"","module.exports = \"precision highp float;\\r\\nprecision highp int;\\r\\n\\r\\n/**\\r\\n  To be replaced via Shader.replace();\\r\\n */\\r\\n#define PROJECTION_TYPE\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n    #define texture(sampler, coord) texture2D(sampler, coord)\\r\\n#else \\r\\n    #define varying in\\r\\n#endif\\r\\n\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n    #define fragColor gl_FragColor\\r\\n#else\\r\\n    layout(location = 0) out vec4 fragColor;\\r\\n#endif\\r\\n\\r\\n\\r\\nuniform int u_mode;\\r\\nuniform bool u_skipLod;\\r\\n\\r\\n#if defined(CUBE_MAP)\\r\\n    uniform samplerCube u_cubemap;\\r\\n#elif defined(EQUI_MAP)\\r\\n    uniform sampler2D u_equirectmap;\\r\\n#elif defined(SPHERE_MAP)\\r\\n    uniform sampler2D u_spheremap;\\r\\n#elif defined(POLAR_MAP)\\r\\n    uniform sampler2D u_polarmap[2];\\r\\n#endif\\r\\n\\r\\nvarying vec2 v_uv;\\r\\nvarying vec4 v_ray;\\r\\n\\r\\n\\r\\nconst float PI = 3.141592653589793;\\r\\nconst float OneOver2PI = 0.1591549430918953357688837633725;\\r\\nconst float OneOverPI  = 0.3183098861837906715377675267450;\\r\\n\\r\\n\\r\\nvoid main(void)\\r\\n{\\r\\n    vec2 uv = v_uv;\\r\\n    vec3 ray = normalize(v_ray.xyz);\\r\\n\\r\\n    #if defined(CUBE_MAP)\\r\\n        #if __VERSION__ == 100\\r\\n            fragColor = u_skipLod ? textureCubeLod(u_cubemap, vec3(ray), 0.0) : textureCube(u_cubemap, vec3(ray));\\r\\n        #else\\r\\n            fragColor = u_skipLod ? textureLod(u_cubemap, vec3(ray), 0.0) : texture(u_cubemap, vec3(ray));\\r\\n        #endif\\r\\n    #endif\\r\\n\\r\\n    #if defined(EQUI_MAP)\\r\\n        float v = acos(-ray.y) * OneOverPI;\\r\\n        float m = atan(-ray.x, ray.z);\\r\\n        uv = vec2(m * OneOver2PI + 0.5, v);\\r\\n\\r\\n        fragColor = texture(u_equirectmap, uv);\\r\\n    #endif\\r\\n\\r\\n    #if defined(SPHERE_MAP)\\r\\n        ray = -ray.xzy;\\r\\n        ray.y *= -1.0;\\r\\n        ray.z += +1.0;\\r\\n        uv = 0.5 + 0.5 * ray.xy / length(ray);\\r\\n\\r\\n        fragColor = texture(u_spheremap, uv);\\r\\n    #endif\\r\\n\\r\\n    #if defined(POLAR_MAP)\\r\\n        ray.xz /= abs(ray.y) + 1.0;\\r\\n        ray.xz = ray.xz * 0.5 + 0.5;\\r\\n        ray.x *= -1.0;\\r\\n\\r\\n        fragColor = mix(texture(u_polarmap[1], ray.xz),\\r\\n                        texture(u_polarmap[0], vec2(1.0, -1.0) * ray.xz),\\r\\n                        step(0.0, ray.y));\\r\\n    #endif\\r\\n}\\r\\n\"","module.exports = \"precision highp float;\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n    #define texture(sampler, coord) texture2D(sampler, coord)\\r\\n#else\\r\\n    #define varying out\\r\\n#endif\\r\\n\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n    attribute vec2 a_vertex;\\r\\n#else\\r\\n    in vec2 a_vertex;\\r\\n#endif\\r\\n\\r\\n\\r\\nuniform mat4 u_viewProjectionInverse;\\r\\n\\r\\n\\r\\nvarying vec2 v_uv;\\r\\nvarying vec4 v_ray;\\r\\n\\r\\n\\r\\nvoid main(void)\\r\\n{\\r\\n    v_uv = a_vertex * 0.5 + 0.5;\\r\\n    v_ray = u_viewProjectionInverse * vec4(a_vertex, 1.0, 1.0);\\r\\n\\r\\n    gl_Position = vec4(a_vertex.xy, 1.0 - 1e-6, 1.0);\\r\\n}\\r\\n\"","module.exports = \"\\r\\nprecision lowp float;\\r\\nprecision lowp int;\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n    #define texture(sampler, coord) texture2D(sampler, coord)\\r\\n#else \\r\\n    #define varying in\\r\\n#endif\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n  #define fragColor gl_FragColor\\r\\n#else\\r\\n  layout(location = 0) out vec4 fragColor;\\r\\n#endif\\r\\n\\r\\n\\r\\nuniform float u_weights[32];\\r\\nuniform vec2 u_delta;\\r\\n\\r\\nuniform sampler2D u_texture;\\r\\n\\r\\nvarying vec2 v_texCoords;\\r\\n\\r\\n\\r\\nvoid main()\\r\\n{\\r\\n    vec4 result = u_weights[0] * texture(u_texture, v_texCoords);\\r\\n    for (int i = 1; i <= $KERNEL_HALF_SIZE; i++)\\r\\n    {\\r\\n        result += u_weights[i] * texture(u_texture, v_texCoords + float(i) * u_delta);\\r\\n        result += u_weights[i] * texture(u_texture, v_texCoords - float(i) * u_delta);\\r\\n    }\\r\\n\\r\\n    fragColor = result;\\r\\n}\\r\\n\"","module.exports = \"\\r\\nprecision lowp float;\\r\\nprecision lowp int;\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n    #define texture(sampler, coord) texture2D(sampler, coord)\\r\\n#else\\r\\n    #define varying out\\r\\n#endif\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n  attribute vec2 a_vertex;\\r\\n#else\\r\\n  layout(location = 0) in vec2 a_vertex;\\r\\n#endif\\r\\n\\r\\n\\r\\nvarying vec2 v_texCoords;\\r\\n\\r\\n\\r\\nvoid main()\\r\\n{\\r\\n    v_texCoords = a_vertex * 0.5 + 0.5;\\r\\n    gl_Position = vec4(a_vertex, 0.0, 1.0);\\r\\n}\\r\\n\"","module.exports = \"\\r\\nprecision lowp float;\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n    #define texture(sampler, coord) texture2D(sampler, coord)\\r\\n#else\\r\\n    #define varying out\\r\\n#endif\\r\\n\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n    attribute vec2 a_vertex;\\r\\n#else\\r\\n    layout(location = 0) in vec2 a_vertex;\\r\\n#endif\\r\\n\\r\\n\\r\\nvarying vec2 v_uv;\\r\\n\\r\\n\\r\\nvoid main(void)\\r\\n{\\r\\n    v_uv = a_vertex * 0.5 + 0.5;\\r\\n\\r\\n    gl_Position = vec4(a_vertex, 0.0, 1.0);\\r\\n}\\r\\n\"","module.exports = \"\\r\\nprecision highp float;\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n    #define texture(sampler, coord) texture2D(sampler, coord)\\r\\n#else \\r\\n    #define varying in\\r\\n#endif\\r\\n\\r\\n\\r\\nconst float one255ths = 1.0 / 255.0;\\r\\n\\r\\nvec3 float24x1_to_uint8x3(const in float f) {\\r\\n    vec3 uint8x3 = vec3(f, fract(f * 256.0), fract(f * 65536.0));\\r\\n    return floor(uint8x3 * 256.0) * one255ths;\\r\\n}\\r\\n\\r\\nvec4 float24x1_to_uint8x4(const in float f) {\\r\\n    vec4 uint8x4 = vec4(f, fract(f * 256.0), fract(f * 65536.0), fract(f * 16777216.0));\\r\\n    return floor(uint8x4 * 256.0) * one255ths;\\r\\n}\\r\\n\\r\\nconst vec3 premultUint8x3 = vec3(255.0 / 256.0, 255.0 / 65536.0, 255.0 / 16777216.0);\\r\\nfloat uint8x3_to_float24x1(const in vec3 v) {\\r\\n    return dot(v, premultUint8x3); // a1 * b1 + a2 * b2 + a3 * b3  ;)\\r\\n}\\r\\n\\r\\nconst vec4 premultUint8x4 = vec4(255.0 / 256.0, 255.0 / 65536.0, 255.0 / 16777216.0, 255.0 / 4294967296.0);\\r\\nfloat uint8x4_to_float32x1(const in vec4 v) {\\r\\n    return dot(v, premultUint8x4); // a1 * b1 + a2 * b2 + a3 * b3 + a4 * b4  ;)\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n    #define fragDepth gl_FragColor\\r\\n#else \\r\\n    layout(location = 0) out vec4 fragDepth;\\r\\n#endif\\r\\n\\r\\n\\r\\nuniform sampler2D u_texture;\\r\\nuniform vec2 u_offset;\\r\\nuniform vec2 u_scale;\\r\\n\\r\\nvarying vec2 v_uv;\\r\\n\\r\\n\\r\\n\\r\\nvoid main(void)\\r\\n{\\r\\n    vec2 uv = vec2(v_uv.x, 1.0 - v_uv.y) * u_scale + u_offset;\\r\\n    float depth = texture(u_texture, uv).r;\\r\\n\\r\\n    fragDepth = vec4(float24x1_to_uint8x3(depth), 1.0);\\r\\n}\\r\\n\"","module.exports = \"precision mediump float;\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n    #define texture(sampler, coord) texture2D(sampler, coord)\\r\\n#else \\r\\n    #define varying in\\r\\n#endif\\r\\n\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n    #define fragColor gl_FragColor\\r\\n\\r\\n    #ifdef GL_OES_standard_derivatives\\r\\n        #extension GL_OES_standard_derivatives : enable\\r\\n        #define AASTEP\\r\\n    #endif\\r\\n\\r\\n#else\\r\\n    layout(location = 0) out vec4 fragColor;\\r\\n\\r\\n    #define AASTEP\\r\\n\\r\\n#endif\\r\\n\\r\\n\\r\\nuniform sampler2D u_glyphs;\\r\\nuniform vec4 u_color;\\r\\nuniform float u_aaStepScale;\\r\\nuniform int u_aaSampling;\\r\\n\\r\\nvarying vec2 v_uv;\\r\\n\\r\\nconst int channel = 0;\\r\\n\\r\\n\\r\\nfloat aastep(float t, float value)\\r\\n{\\r\\n#ifdef AASTEP\\r\\n    /* float afwidth = length(vec2(dFdx(value), dFdy(value))) * u_aaStepScale; */\\r\\n    float afwidth = fwidth(value) * u_aaStepScale;\\r\\n    /* The aa step scale is more of a hack to provide seemingly smoother (e.g., >= 1.0) or crisper (e.g., between 0.0\\r\\n     * and 1.0) contours without specific sampling. It's just scaling the outcome of the derivatives.\\r\\n     */\\r\\n\\r\\n    return smoothstep(t - afwidth, t + afwidth, value);\\r\\n#else\\r\\n    return step(t, value);\\r\\n#endif\\r\\n}\\r\\n\\r\\nfloat texStep(float t, vec2 uv)\\r\\n{\\r\\n    /*\\r\\n     * This is a workaround for a known bug in Chrome software rendering (SwiftShader), for updates follow\\r\\n     * https://issuetracker.google.com/u/1/issues/146041290\\r\\n     * Workaround: Storing the result of the texture access into another variable that then is passed as parameter.\\r\\n     */\\r\\n    float distanceValue = texture(u_glyphs, uv)[channel];\\r\\n    return step(t, distanceValue);\\r\\n}\\r\\n\\r\\nfloat texSmooth(float t, vec2 uv)\\r\\n{\\r\\n    /*\\r\\n     * This is a workaround for a known bug in Chrome software rendering (SwiftShader), for updates follow\\r\\n     * https://issuetracker.google.com/u/1/issues/146041290\\r\\n     * Workaround: Storing the result of the texture access into another variable that then is passed as parameter.\\r\\n     */\\r\\n    float distanceValue = texture(u_glyphs, uv)[channel];\\r\\n    return aastep(t, distanceValue);\\r\\n}\\r\\n\\r\\n#ifdef AASTEP\\r\\n\\r\\nfloat aastep3h(float t, vec2 uv)\\r\\n{\\r\\n    float x = dFdy(uv.x) * 1.0 / 3.0;\\r\\n\\r\\n    float v = texSmooth(t, uv + vec2( -x, 0.0))\\r\\n            + texSmooth(t, uv + vec2(0.0, 0.0))\\r\\n            + texSmooth(t, uv + vec2( +x, 0.0));\\r\\n\\r\\n    return v / 3.0;\\r\\n}\\r\\n\\r\\nfloat aastep3v(float t, vec2 uv)\\r\\n{\\r\\n    float y = dFdy(uv.y) * 1.0 / 3.0;\\r\\n\\r\\n    float v = texSmooth(t, uv + vec2( 0.0,  -y))\\r\\n            + texSmooth(t, uv + vec2( 0.0, 0.0))\\r\\n            + texSmooth(t, uv + vec2( 0.0,  +y));\\r\\n\\r\\n    return v / 3.0;\\r\\n}\\r\\n\\r\\nfloat aastep3x3(float t, vec2 uv)\\r\\n{\\r\\n    float x = dFdx(uv.x) * 1.0 / 3.0;\\r\\n    float y = dFdy(uv.y) * 1.0 / 3.0;\\r\\n\\r\\n    float v = texSmooth(t, uv + vec2(  -x, -y)) + texSmooth(t, uv + vec2(  -x, 0.0)) + texSmooth(t, uv + vec2(  -x, +y))\\r\\n            + texSmooth(t, uv + vec2( 0.0, -y)) + texSmooth(t, uv + vec2( 0.0, 0.0)) + texSmooth(t, uv + vec2( 0.0, +y))\\r\\n            + texSmooth(t, uv + vec2(  +x, -y)) + texSmooth(t, uv + vec2(  +x, 0.0)) + texSmooth(t, uv + vec2(  +x, +y));\\r\\n\\r\\n    return v / 9.0;\\r\\n}\\r\\n\\r\\nfloat aastep4x4(float t, vec2 uv)\\r\\n{\\r\\n    float x0 = dFdx(uv.x);\\r\\n    float y0 = dFdx(uv.y);\\r\\n    float x1 = x0 * 1.0 / 8.0;\\r\\n    float y1 = y0 * 1.0 / 8.0;\\r\\n    float x2 = x0 * 3.0 / 8.0;\\r\\n    float y2 = y0 * 3.0 / 8.0;\\r\\n\\r\\n    float v = texSmooth(t, uv + vec2(-x2,-y2)) + texSmooth(t, uv + vec2(-x2,-y1))\\r\\n            + texSmooth(t, uv + vec2(-x2,+y1)) + texSmooth(t, uv + vec2(-x2,+y2))\\r\\n\\r\\n            + texSmooth(t, uv + vec2(-x1,-y2)) + texSmooth(t, uv + vec2(-x1,-y1))\\r\\n            + texSmooth(t, uv + vec2(-x1,+y1)) + texSmooth(t, uv + vec2(-x1,+y2))\\r\\n\\r\\n            + texSmooth(t, uv + vec2(+x1,-y2)) + texSmooth(t, uv + vec2(+x1,-y1))\\r\\n            + texSmooth(t, uv + vec2(+x1,+y1)) + texSmooth(t, uv + vec2(+x1,+y2))\\r\\n\\r\\n            + texSmooth(t, uv + vec2(+x2,-y2)) + texSmooth(t, uv + vec2(+x2,-y1))\\r\\n            + texSmooth(t, uv + vec2(+x2,+y1)) + texSmooth(t, uv + vec2(+x2,+y2));\\r\\n\\r\\n    return v / 16.0;\\r\\n}\\r\\n\\r\\n// vec4 subpix(float r, float g, float b, vec4 fore, vec4 back)\\r\\n// {\\r\\n//     return vec4(mix(back.rgb, fore.rgb, vec3(r, g, b)), mix(back.a, fore.a, (r + b + g) / 3.0));\\r\\n// }\\r\\n\\r\\n#endif\\r\\n\\r\\nvoid main(void)\\r\\n{\\r\\n    /** @todo mipmap access? */\\r\\n\\r\\n    float a = 0.0;\\r\\n    /* When using multiframe sampling, might not be necessary and even tends to add more blur */\\r\\n#ifdef AASTEP\\r\\n    if(u_aaSampling == 0) {         // LabelRenderPass.Sampling.None\\r\\n#endif\\r\\n\\r\\n        a = texStep(0.5, v_uv);\\r\\n\\r\\n#ifdef AASTEP\\r\\n    } else if(u_aaSampling == 1) {  // LabelRenderPass.Sampling.Smooth\\r\\n        a = texSmooth(0.5, v_uv);\\r\\n    } else if(u_aaSampling == 2) {  // LabelRenderPass.Sampling.Horizontal3\\r\\n        a = aastep3h(0.5, v_uv);\\r\\n    } else if(u_aaSampling == 3) {  // LabelRenderPass.Sampling.Vertical3\\r\\n        a = aastep3v(0.5, v_uv);\\r\\n    } else if(u_aaSampling == 4) {  // LabelRenderPass.Sampling.Grid3x3\\r\\n        a = aastep3x3(0.5, v_uv);\\r\\n    } else if(u_aaSampling == 5) {  // LabelRenderPass.Sampling.Grid4x4\\r\\n        a = aastep4x4(0.5, v_uv);\\r\\n    }\\r\\n#endif\\r\\n\\r\\n    /**\\r\\n     * @todo - design decision: Don't discard fragments?, as we might need them for an id-buffer for\\r\\n     * clicking-interaction. Furthermore, using if-statement and discard can slow down performance:\\r\\n     * it's bad for IMR, TBR, TBDR and early-Z optimization\\r\\n     * https://stackoverflow.com/questions/8509051/is-discard-bad-for-program-performance-in-opengl\\r\\n     */\\r\\n    if(a <= 0.0) {\\r\\n        discard;\\r\\n    }\\r\\n    fragColor = vec4(u_color.rgb, u_color.a * a);\\r\\n\\r\\n    /* use when pre-multiplied color is required. */\\r\\n    /* fragColor = vec4(u_color.rgb * u_color.a * a, u_color.a * a); */\\r\\n}\\r\\n\"","module.exports = \"precision mediump float;\\r\\nprecision lowp int;\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n    #define texture(sampler, coord) texture2D(sampler, coord)\\r\\n#else\\r\\n    #define varying out\\r\\n#endif\\r\\n\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n\\r\\n#extension GL_EXT_draw_buffers : enable\\r\\nattribute vec2 a_vertex;\\r\\n/* [ texture ll: vec2, ur: vec2 ] */\\r\\nattribute vec4 a_texCoord;\\r\\nattribute vec3 a_origin;\\r\\nattribute vec3 a_tangent;\\r\\nattribute vec3 a_up;\\r\\n\\r\\n#else\\r\\n\\r\\nin vec2 a_vertex;\\r\\n/* [ texture ll: vec2, ur: vec2 ]*/\\r\\nin vec4 a_texCoord;\\r\\nin vec3 a_origin;\\r\\nin vec3 a_tangent;\\r\\nin vec3 a_up;\\r\\n\\r\\n#endif\\r\\n\\r\\n\\r\\nuniform mat4 u_viewProjection;\\r\\nuniform vec2 u_ndcOffset;\\r\\nuniform mat4 u_transform;\\r\\nuniform bool u_dynamic;\\r\\n\\r\\nvarying vec2 v_uv;\\r\\n\\r\\n\\r\\nvoid ndcOffset(inout vec4 vertex, in vec2 offset) {\\r\\n    vertex.xy = offset * vec2(vertex.w) + vertex.xy;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\nvoid main(void)\\r\\n{\\r\\n    /* TEXTURE COORDS */\\r\\n\\r\\n    /* flip y-coordinates */\\r\\n    vec2 texExt = vec2(a_texCoord[2] - a_texCoord[0], a_texCoord[1] - a_texCoord[3]);\\r\\n\\r\\n    v_uv = a_vertex * texExt + vec2(a_texCoord[0], 1.0 - a_texCoord[1]);\\r\\n\\r\\n    /* POSITIONING */\\r\\n    /* quad data as flat array: [0, 0,  0, 1,  1, 0,  1, 1] (a_vertex), which translates to ll, lr, ul, ur corners.\\r\\n     * 2-------4\\r\\n     * |  \\\\    |\\r\\n     * |    \\\\  |\\r\\n     * 1-------3\\r\\n     * The current vertex is calculated based on the current quad corners and the tangent attributes.\\r\\n     * The following lines are optimized for MAD optimization.\\r\\n     */\\r\\n    vec3 tangentDirection = a_origin + a_vertex.x * a_tangent;\\r\\n    vec4 vertex = vec4(tangentDirection + a_vertex.y * a_up, 1.0);\\r\\n\\r\\n    if(u_dynamic) {\\r\\n        vertex = u_transform * vertex;\\r\\n    }\\r\\n    vertex = u_viewProjection * vertex;\\r\\n\\r\\n    ndcOffset(vertex, u_ndcOffset);\\r\\n    gl_Position = vertex;\\r\\n}\\r\\n\"","module.exports = __WEBPACK_EXTERNAL_MODULE__7318__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_require__(5254);\nvar __webpack_exports__ = __webpack_require__(3613);\n"],"sourceRoot":""}